[{
  "history_id" : "jnfryd5f5zn",
  "history_input" : "# Data Preparation for Sentinel 2\n\nprint(\"Not ready yet..Prepare sentinel 2 into .csv\")\n\n",
  "history_output" : "Not ready yet..Prepare sentinel 2 into .csv\n",
  "history_begin_time" : 1677787278266,
  "history_end_time" : 1677787280907,
  "history_notes" : null,
  "history_process" : "78vedq",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "klb36z3xf6z",
  "history_input" : "# Create LSTM model\n\nprint(\"Create LSTM\")\n\n",
  "history_output" : "Create LSTM\n",
  "history_begin_time" : 1677787280315,
  "history_end_time" : 1677787282855,
  "history_notes" : null,
  "history_process" : "mxpyqt",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "gavnowi4xqm",
  "history_input" : "import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom base_hole import BaseHole\nfrom sklearn.model_selection import train_test_split\nfrom datetime import datetime\n\nhomedir = os.path.expanduser('~')\ngithub_dir = os.path.join(homedir, 'Documents', 'GitHub', 'SnowCast')\n\nclass RandomForestHole(BaseHole):\n  \n  def get_model(self):\n    rfc_pipeline = Pipeline(steps = [\n      ('data_scaling', StandardScaler()),\n      ('model', RandomForestRegressor(max_depth = 15,\n                                       min_samples_leaf = 0.004,\n                                       min_samples_split = 0.008,\n                                       n_estimators = 25))])\n    return rfc_pipeline\n\n  def evaluate(self):\n    mae = metrics.mean_absolute_error(self.test_y, self.test_y_results)\n    mse = metrics.mean_squared_error(self.test_y, self.test_y_results)\n    r2 = metrics.r2_score(self.test_y, self.test_y_results)\n    rmse = math.sqrt(mse)\n\n    print(\"The random forest model performance for testing set\")\n    print(\"--------------------------------------\")\n    print('MAE is {}'.format(mae))\n    print('MSE is {}'.format(mse))\n    print('R2 score is {}'.format(r2))\n    print('RMSE is {}'.format(rmse))\n    return {\"mae\":mae, \"mse\": mse, \"r2\": r2, \"rmse\": rmse}",
  "history_output" : "Running",
  "history_begin_time" : 1677787282295,
  "history_end_time" : 1677787285839,
  "history_notes" : null,
  "history_process" : "c2xkhz",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "kazpcce1r80",
  "history_input" : "# GhostNet\n\nprint(\"Create GhostNet\")\n\n",
  "history_output" : "Create GhostNet\n",
  "history_begin_time" : 1677787284889,
  "history_end_time" : 1677787287455,
  "history_notes" : null,
  "history_process" : "rauqsh",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "sofywk8044e",
  "history_input" : "# Find the best model\nprint(\"model comparison script\")\nprint(\"hello world\")",
  "history_output" : "model comparison script\nhello world\n",
  "history_begin_time" : 1677791575346,
  "history_end_time" : 1677791578009,
  "history_notes" : null,
  "history_process" : "mi3e5n",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "qxav91dw5qi",
  "history_input" : "# Integrate all the datasets into one training dataset\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom math import radians\nfrom sklearn import neighbors as sk\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom datetime import datetime,timedelta\n\nprint(\"integrating datasets into one dataset\")\n# pd.set_option('display.max_columns', None)'''\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\nfile = f'{github_dir}/data/snowcast_provided/grid_cells.geojson'\n\n# read grid cell\ngridcells_file = f\"{github_dir}/data/snowcast_provided/grid_cells.geojson\"\nmodel_dir = f\"{github_dir}/model/\"\ntraining_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_train_features.csv\"\ntesting_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_test_features.csv\"\ntrain_labels_file = f\"{github_dir}/data/snowcast_provided/train_labels.csv\"\nground_measure_metadata_file = f\"{github_dir}/data/snowcast_provided/ground_measures_metadata.csv\"\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\n\n\n# example_mod_file = f\"{github_dir}/data/modis/mod10a1_ndsi_f191fe19-0e81-4bc9-9980-29738a05a49b.csv\"\n\ntraining_feature_pd = pd.read_csv(training_feature_file, header=0, index_col=0)\ntesting_feature_pd = pd.read_csv(testing_feature_file, header=0, index_col=0)\ntrain_labels_pd = pd.read_csv(train_labels_file, header=0, index_col=0)\nprint(train_labels_pd.head())\n# if \"2ca6a37f-67f5-4905-864b-ddf98d956ebb\" in train_labels_pd.index and \"2013-01-02\" in train_labels_pd.columns:\n#   print(\"Check one value: \", train_labels_pd.loc[\"2ca6a37f-67f5-4905-864b-ddf98d956ebb\"][\"2013-01-02\"])\n# else:\n#   print(\"Key not existed\")\n\nstation_cell_mapper_pd = pd.read_csv(station_cell_mapper_file, header=0, index_col=0)\n\n\n# print(station_cell_mapper_pd.head())\n\n# example_mod_pd = pd.read_csv(example_mod_file, header=0, index_col=0)\n# print(example_mod_pd.shape)\n\n\ndef getDateStr(x):\n    return x.split(\" \")[0]\n\n\ndef integrate_modis():\n    \"\"\"\n  Integrate all MODIS data into mod_all.csv\n  \"\"\"\n    all_mod_file = f\"{github_dir}/data/ready_for_training/modis_all.csv\"\n    if os.path.isfile(all_mod_file):\n        return\n    dates = pd.date_range(start='1/1/2013', end='12/31/2021', freq='D').astype(str)\n    mod_all_df = pd.DataFrame(columns=[\"date\"])\n    mod_all_df['date'] = dates\n\n    # print(mod_all_df.head())\n    for ind in station_cell_mapper_pd.index:\n        current_cell_id = station_cell_mapper_pd[\"cell_id\"][ind]\n        print(current_cell_id)\n        mod_single_file = f\"{github_dir}/data/sat_training/modis/mod10a1_ndsi_{current_cell_id}.csv\"\n        if os.path.isfile(mod_single_file):\n            mod_single_pd = pd.read_csv(mod_single_file, header=0)\n            mod_single_pd = mod_single_pd[[\"date\", \"mod10a1_ndsi\"]]\n            mod_single_pd = mod_single_pd.rename(columns={\"mod10a1_ndsi\": current_cell_id})\n            mod_single_pd['date'] = pd.to_datetime(mod_single_pd['date']).astype(str)\n            print(mod_all_df.shape)\n            mod_all_df = pd.merge(mod_all_df, mod_single_pd, how='left', on=\"date\")\n    mod_all_df.to_csv(all_mod_file)\n\n\ndef integrate_sentinel1():\n    \"\"\"\n  Integrate all Sentinel 1 data into sentinel1_all.csv\n  \"\"\"\n    all_sentinel1_file = f\"{github_dir}/data/ready_for_training/sentinel1_all.csv\"\n    if os.path.isfile(all_sentinel1_file):\n        return\n    dates = pd.date_range(start='1/1/2013', end='12/31/2021', freq='D').astype(str)\n    sentinel1_all_df = pd.DataFrame(columns=[\"date\"])\n    sentinel1_all_df['date'] = dates\n    # print(mod_all_df.head())\n\n    for ind in station_cell_mapper_pd.index:\n        current_cell_id = station_cell_mapper_pd[\"cell_id\"][ind]\n        print(current_cell_id)\n        sentinel1_single_file = f\"{github_dir}/data/sat_training/sentinel1/s1_grd_vv_{current_cell_id}.csv\"\n        if os.path.isfile(sentinel1_single_file) and current_cell_id not in sentinel1_all_df:\n            sentinel1_single_pd = pd.read_csv(sentinel1_single_file, header=0)\n            sentinel1_single_pd = sentinel1_single_pd[[\"date\", \"s1_grd_vv\"]]\n            sentinel1_single_pd = sentinel1_single_pd.rename(columns={\"s1_grd_vv\": current_cell_id})\n            # sentinel1_single_pd['date'] = sentinel1_single_pd['date'].astype('datetime64[ns]')\n            sentinel1_single_pd['date'] = pd.to_datetime(sentinel1_single_pd['date']).dt.round(\"D\").astype(str)\n            print(\"sentinel1_single_pd: \", sentinel1_single_pd.head())\n            print(\"sentinel1_single_pd check value: \", sentinel1_single_pd[sentinel1_single_pd[\"date\"] == \"2015-04-01\"])\n            sentinel1_single_pd = sentinel1_single_pd.drop_duplicates(subset=['date'],\n                                                                      keep='first')  # this will remove all the other values of the same day\n\n            sentinel1_all_df = pd.merge(sentinel1_all_df, sentinel1_single_pd, how='left', on=\"date\")\n            print(\"sentinel1_all_df check value: \", sentinel1_all_df[sentinel1_all_df[\"date\"] == \"2015-04-01\"])\n            print(\"sentinel1_all_df: \", sentinel1_all_df.shape)\n\n    print(sentinel1_all_df.shape)\n    sentinel1_all_df.to_csv(all_sentinel1_file)\n\n\ndef integrate_gridmet():\n    \"\"\"\n  Integrate all gridMET data into gridmet_all.csv\n  \"\"\"\n\n    dates = pd.date_range(start='10/1/2018', end='09/30/2019', freq='D').astype(str)\n\n    # print(mod_all_df.head())\n    var_list = ['tmmn', 'tmmx', 'pr', 'vpd', 'eto', 'rmax', 'rmin', 'vs']\n\n    for var in var_list:\n        gridmet_all_df = pd.DataFrame(columns=[\"date\"])\n        gridmet_all_df['date'] = dates\n        all_gridmet_file = f\"{github_dir}/data/ready_for_training/gridmet_{var}_all.csv\"\n        if os.path.isfile(all_gridmet_file):\n            return\n        for ind in station_cell_mapper_pd.index:\n            current_cell_id = station_cell_mapper_pd[\"cell_id\"][ind]\n            print(current_cell_id)\n            gridmet_single_file = f\"{github_dir}/data/sim_training/gridmet/{var}_{current_cell_id}.csv\"\n            if os.path.isfile(gridmet_single_file) and current_cell_id not in gridmet_all_df:\n                gridmet_single_pd = pd.read_csv(gridmet_single_file, header=0)\n                gridmet_single_pd = gridmet_single_pd[[\"date\", var]]\n                gridmet_single_pd = gridmet_single_pd.rename(columns={var: current_cell_id})\n                # sentinel1_single_pd['date'] = sentinel1_single_pd['date'].astype('datetime64[ns]')\n                gridmet_single_pd['date'] = pd.to_datetime(gridmet_single_pd['date']).dt.round(\"D\").astype(str)\n                print(\"gridmet_single_pd: \", gridmet_single_pd.head())\n                print(\"gridmet_single_pd check value: \", gridmet_single_pd[gridmet_single_pd[\"date\"] == \"2015-04-01\"])\n                gridmet_single_pd = gridmet_single_pd.drop_duplicates(subset=['date'],\n                                                                      keep='first')  # this will remove all the other values of the same day\n\n                gridmet_all_df = pd.merge(gridmet_all_df, gridmet_single_pd, how='left', on=\"date\")\n                print(\"gridmet_all_df check value: \", gridmet_all_df[gridmet_all_df[\"date\"] == \"2015-04-01\"])\n                print(\"gridmet_all_df: \", gridmet_all_df.shape)\n\n        print(gridmet_all_df.shape)\n        gridmet_all_df.to_csv(all_gridmet_file)\n\n\ndef prepare_training_csv():\n    \"\"\"\n  MOD model:\n    input columns: [m, doy, ndsi]\n    output column: [swe]\n  Sentinel1 model:\n    input columns: [m, doy, grd]\n    output column: [swe]\n  gridMET model:\n    input columns: [m, doy, tmmn, tmmx, pr, vpd, eto, rmax, rmin, vs]\n    output column: [swe]\n  \"\"\"\n    all_ready_file = f\"{github_dir}/data/ready_for_training/all_ready.csv\"\n    if os.path.isfile(all_ready_file):\n        return\n\n    all_mod_file = f\"{github_dir}/data/ready_for_training/modis_all.csv\"\n    modis_all_pd = pd.read_csv(all_mod_file, header=0)\n    all_sentinel1_file = f\"{github_dir}/data/ready_for_training/sentinel1_all.csv\"\n    sentinel1_all_pd = pd.read_csv(all_sentinel1_file, header=0)\n    all_gridmet_eto_file = f\"{github_dir}/data/ready_for_training/gridmet_eto_all.csv\"\n    gridmet_eto_all_pd = pd.read_csv(all_gridmet_eto_file, header=0, index_col=0)\n    all_gridmet_pr_file = f\"{github_dir}/data/ready_for_training/gridmet_pr_all.csv\"\n    gridmet_pr_all_pd = pd.read_csv(all_gridmet_pr_file, header=0, index_col=0)\n    all_gridmet_rmax_file = f\"{github_dir}/data/ready_for_training/gridmet_rmax_all.csv\"\n    gridmet_rmax_all_pd = pd.read_csv(all_gridmet_rmax_file, header=0, index_col=0)\n    all_gridmet_rmin_file = f\"{github_dir}/data/ready_for_training/gridmet_rmin_all.csv\"\n    gridmet_rmin_all_pd = pd.read_csv(all_gridmet_rmin_file, header=0, index_col=0)\n    all_gridmet_tmmn_file = f\"{github_dir}/data/ready_for_training/gridmet_tmmn_all.csv\"\n    gridmet_tmmn_all_pd = pd.read_csv(all_gridmet_tmmn_file, header=0, index_col=0)\n    all_gridmet_tmmx_file = f\"{github_dir}/data/ready_for_training/gridmet_tmmx_all.csv\"\n    gridmet_tmmx_all_pd = pd.read_csv(all_gridmet_tmmx_file, header=0, index_col=0)\n    all_gridmet_vpd_file = f\"{github_dir}/data/ready_for_training/gridmet_vpd_all.csv\"\n    gridmet_vpd_all_pd = pd.read_csv(all_gridmet_vpd_file, header=0, index_col=0)\n    all_gridmet_vs_file = f\"{github_dir}/data/ready_for_training/gridmet_vs_all.csv\"\n    gridmet_vs_all_pd = pd.read_csv(all_gridmet_vs_file, header=0, index_col=0)\n\n    grid_terrain_file = f\"{github_dir}/data/terrain/gridcells_terrainData.csv\"\n    grid_terrain_pd = pd.read_csv(grid_terrain_file, header=0, index_col=1)\n\n    print(\"modis_all_size: \", modis_all_pd.shape)\n    print(\"station size: \", station_cell_mapper_pd.shape)\n    print(\"training_feature_pd size: \", training_feature_pd.shape)\n    print(\"testing_feature_pd size: \", testing_feature_pd.shape)\n\n    all_training_pd = pd.DataFrame(\n        columns=[\"cell_id\", \"year\", \"m\", \"doy\", \"ndsi\", \"grd\", \"eto\", \"pr\", \"rmax\", \"rmin\", \"tmmn\", \"tmmx\", \"vpd\", \"vs\",\n                 \"lat\", \"lon\", \"elevation\", \"aspect\", \"curvature\", \"slope\", \"eastness\", \"northness\", \"swe\"])\n    all_training_pd = all_training_pd.reset_index()\n    for index, row in modis_all_pd.iterrows():\n        dt = datetime.strptime(row['date'], '%Y-%m-%d')\n        month = dt.month\n        year = dt.year\n        doy = dt.timetuple().tm_yday\n        print(f\"Dealing {year} {doy}\")\n        for i in range(3, len(row.index)):\n            cell_id = row.index[i][:-2]\n            if cell_id in train_labels_pd.index and row['date'] in train_labels_pd:\n                ndsi = row.values[i]\n                swe = train_labels_pd.loc[cell_id, row['date']]\n                grd = sentinel1_all_pd.loc[index, cell_id]\n                eto = gridmet_eto_all_pd.loc[index, cell_id]\n                pr = gridmet_pr_all_pd.loc[index, cell_id]\n                rmax = gridmet_rmax_all_pd.loc[index, cell_id]\n                rmin = gridmet_rmin_all_pd.loc[index, cell_id]\n                tmmn = gridmet_tmmn_all_pd.loc[index, cell_id]\n                tmmx = gridmet_tmmx_all_pd.loc[index, cell_id]\n                vpd = gridmet_vpd_all_pd.loc[index, cell_id]\n                vs = gridmet_vs_all_pd.loc[index, cell_id]\n                lat = grid_terrain_pd.loc[cell_id, \"Longitude [deg]\"]\n                lon = grid_terrain_pd.loc[cell_id, \"Latitude [deg]\"]\n                elevation = grid_terrain_pd.loc[cell_id, \"Elevation [m]\"]\n                aspect = grid_terrain_pd.loc[cell_id, \"Aspect [deg]\"]\n                curvature = grid_terrain_pd.loc[cell_id, \"Curvature [ratio]\"]\n                slope = grid_terrain_pd.loc[cell_id, \"Slope [deg]\"]\n                eastness = grid_terrain_pd.loc[cell_id, \"Eastness [unitCirc.]\"]\n                northness = grid_terrain_pd.loc[cell_id, \"Northness [unitCirc.]\"]\n\n                if not np.isnan(swe):\n                    json_kv = {\"cell_id\": cell_id, \"year\": year, \"m\": month, \"doy\": doy, \"ndsi\": ndsi, \"grd\": grd,\n                               \"eto\": eto,\n                               \"pr\": pr, \"rmax\": rmax, \"rmin\": rmin, \"tmmn\": tmmn, \"tmmx\": tmmx, \"vpd\": vpd, \"vs\": vs,\n                               \"lat\": lat,\n                               \"lon\": lon, \"elevation\": elevation, \"aspect\": aspect, \"curvature\": curvature,\n                               \"slope\": slope,\n                               \"eastness\": eastness, \"northness\": northness, \"swe\": swe}\n                    # print(json_kv)\n                    all_training_pd = all_training_pd.append(json_kv, ignore_index=True)\n\n    print(all_training_pd.shape)\n    all_training_pd.to_csv(all_ready_file)\n\n\ndef loc_closest_gridcell_id(find_lat, find_lon, valid_cols):\n    grid_terrain_file = f\"{github_dir}/data/terrain/gridcells_terrainData.csv\"\n    grid_lat_lon = pd.read_csv(grid_terrain_file, header=0, usecols=['cell_id', 'Latitude [deg]', 'Longitude [deg]']).loc[lambda df: df['cell_id'].isin(valid_cols)]\n    # print(grid_lat_lon.shape)\n    # print(grid_lat_lon)\n    grid_lat_lon_npy = grid_lat_lon.to_numpy()\n    grid_lat_lon_rad = np.array([[radians(x[2]), radians(x[1])] for x in grid_lat_lon_npy])\n    ball_tree = sk.BallTree(grid_lat_lon_rad, metric=\"haversine\")\n\n    dist, ind = ball_tree.query([(radians(find_lat), radians(find_lon))], return_distance=True)\n    # print(dist)\n    print(ind[0][0])\n    print(\"cell id: \", grid_lat_lon.iloc[ind[0][0]]['cell_id'])\n    return ind[0][0], grid_lat_lon.iloc[ind[0][0]]['cell_id']\n\n\ndef prepare_training_csv_nsidc():\n    \"\"\"\n  gridMET model:\n    input columns: [m, doy, tmmn, tmmx, pr, vpd, eto, rmax, rmin, vs]\n    output column: [swe]\n  \"\"\"\n    all_ready_file = f\"{github_dir}/data/ready_for_training/all_ready_new.csv\"\n    if os.path.isfile(all_ready_file):\n        print(\"The file already exists. Exiting..\")\n        return\n    all_gridmet_eto_file = f\"{github_dir}/data/ready_for_training/gridmet_eto_all.csv\"\n    gridmet_eto_all_pd = pd.read_csv(all_gridmet_eto_file, header=0, index_col=0)\n    all_gridmet_pr_file = f\"{github_dir}/data/ready_for_training/gridmet_pr_all.csv\"\n    gridmet_pr_all_pd = pd.read_csv(all_gridmet_pr_file, header=0, index_col=0)\n    all_gridmet_rmax_file = f\"{github_dir}/data/ready_for_training/gridmet_rmax_all.csv\"\n    gridmet_rmax_all_pd = pd.read_csv(all_gridmet_rmax_file, header=0, index_col=0)\n    all_gridmet_rmin_file = f\"{github_dir}/data/ready_for_training/gridmet_rmin_all.csv\"\n    gridmet_rmin_all_pd = pd.read_csv(all_gridmet_rmin_file, header=0, index_col=0)\n    all_gridmet_tmmn_file = f\"{github_dir}/data/ready_for_training/gridmet_tmmn_all.csv\"\n    gridmet_tmmn_all_pd = pd.read_csv(all_gridmet_tmmn_file, header=0, index_col=0)\n    all_gridmet_tmmx_file = f\"{github_dir}/data/ready_for_training/gridmet_tmmx_all.csv\"\n    gridmet_tmmx_all_pd = pd.read_csv(all_gridmet_tmmx_file, header=0, index_col=0)\n    all_gridmet_vpd_file = f\"{github_dir}/data/ready_for_training/gridmet_vpd_all.csv\"\n    gridmet_vpd_all_pd = pd.read_csv(all_gridmet_vpd_file, header=0, index_col=0)\n    all_gridmet_vs_file = f\"{github_dir}/data/ready_for_training/gridmet_vs_all.csv\"\n    gridmet_vs_all_pd = pd.read_csv(all_gridmet_vs_file, header=0, index_col=0)\n    all_nsidc_file = f\"{github_dir}/data/sim_training/nsidc/2019nsidc_data.csv\"\n    nsidc_all_pd = pd.read_csv(all_nsidc_file, header=0, index_col=0)\n\n    # print(nsidc_all_pd.shape)\n    # print(nsidc_all_pd)\n\n    grid_terrain_file = f\"{github_dir}/data/terrain/gridcells_terrainData.csv\"\n    grid_terrain_pd = pd.read_csv(grid_terrain_file, header=0, index_col=0)\n\n    # print(grid_terrain_pd.shape)\n    # print(grid_terrain_pd)\n\n    print(\"station size: \", station_cell_mapper_pd.shape)\n    print(\"training_feature_pd size: \", training_feature_pd.shape)\n    print(\"testing_feature_pd size: \", testing_feature_pd.shape)\n    all_valid_columns = gridmet_eto_all_pd.columns.values\n    all_training_pd = pd.DataFrame(\n        columns=[\"cell_id\", \"year\", \"m\", \"day\", \"eto\", \"pr\", \"rmax\", \"rmin\", \"tmmn\", \"tmmx\", \"vpd\", \"vs\", \"lat\", \"lon\",\n                 \"elevation\", \"aspect\", \"curvature\", \"slope\", \"eastness\", \"northness\", \"swe_0719\", \"depth_0719\", \"swe_snotel\"])\n    all_training_pd = all_training_pd.reset_index()\n    for index, row in nsidc_all_pd.iterrows():\n        month = row['Month']\n        year = row['Year']\n        day = row['Day']\n#         print(f\"Dealing {year} {month} {day}\")\n        lat = row['Lat']\n        lon = row['Lon']\n#         print(\"lat lon: \", lat, \" \", lon)\n        ind, cell_id = loc_closest_gridcell_id(lat, lon, all_valid_columns)\n        swe = row['SWE']\n        depth = row['Depth']\n        index = index % 365\n        eto = gridmet_eto_all_pd.iloc[index][cell_id]\n        pr = gridmet_pr_all_pd.iloc[index][cell_id]\n        rmax = gridmet_rmax_all_pd.iloc[index][cell_id]\n        rmin = gridmet_rmin_all_pd.iloc[index][cell_id]\n        tmmn = gridmet_tmmn_all_pd.iloc[index][cell_id]\n        tmmx = gridmet_tmmx_all_pd.iloc[index][cell_id]\n        vpd = gridmet_vpd_all_pd.iloc[index][cell_id]\n        vs = gridmet_vs_all_pd.iloc[index][cell_id]\n        lat = grid_terrain_pd.loc[ind, \"Latitude [deg]\"]\n        lon = grid_terrain_pd.loc[ind, \"Longitude [deg]\"]\n        elevation = grid_terrain_pd.loc[ind, \"Elevation [m]\"]\n        aspect = grid_terrain_pd.loc[ind, \"Aspect [deg]\"]\n        curvature = grid_terrain_pd.loc[ind, \"Curvature [ratio]\"]\n        slope = grid_terrain_pd.loc[ind, \"Slope [deg]\"]\n        eastness = grid_terrain_pd.loc[ind, \"Eastness [unitCirc.]\"]\n        northness = grid_terrain_pd.loc[ind, \"Northness [unitCirc.]\"]\n        cdate = datetime(year=int(year), month=int(month), day=int(day))\n        current_date = cdate.strftime(\"%Y-%m-%d\")\n        \n        if cell_id in train_labels_pd.index and current_date in train_labels_pd.columns:\n#           print(\"Check one value: \", train_labels_pd.loc[cell_id][current_date])\n          swe_snotel = train_labels_pd.loc[cell_id][current_date]\n        else:\n          swe_snotel = -1\n#           print(\"Key not existed\")\n\n        if not np.isnan(swe):\n            json_kv = {\"cell_id\":cell_id,\"year\":year, \"m\":month, \"day\": day, \"eto\":eto, \"pr\":pr, \"rmax\":rmax, \"rmin\":rmin, \"tmmn\":tmmn, \"tmmx\":tmmx, \"vpd\":vpd, \"vs\":vs, \"lat\":lat, \"lon\":lon, \"elevation\":elevation, \"aspect\":aspect, \"curvature\":curvature, \"slope\":slope, \"eastness\":eastness, \"northness\":northness, \"swe_0719\":swe, \"depth_0719\":depth, \"swe_snotel\": swe_snotel}\n#             print(json_kv)\n            all_training_pd = all_training_pd.append(json_kv, ignore_index=True)\n#             print(all_training_pd.shape)\n\n    print(all_training_pd.shape)\n    all_training_pd.to_csv(all_ready_file)\n\n    \"\"\"\n  grd_all_pd = pd.DataFrame(columns=[\"year\", \"m\", \"doy\", \"grd\", \"swe\"])\n  grd_all_pd = grd_all_pd.reset_index()\n  for index, row in sentinel1_all_pd.iterrows():\n    dt = datetime.strptime(row['date'], '%Y-%m-%d')\n    year = dt.year\n    month = dt.month\n    doy = dt.timetuple().tm_yday\n    for i in range(3,len(row.index)):\n      cell_id = row.index[i]\n      grd = row.values[i]\n      if not np.isnan(grd) and cell_id in train_labels_pd.index and row['date'] in train_labels_pd:\n        swe = train_labels_pd.loc[cell_id, row['date']]\n        if not np.isnan(swe):\n          print([month, doy, grd, swe])\n          grd_all_pd = grd_all_pd.append({\"year\": year, \"m\":month, \"doy\": doy, \"grd\": grd, \"swe\": swe}, ignore_index = True)\n  \n  print(grd_all_pd.shape)\n  grd_all_pd.to_csv(f\"{github_dir}/data/ready_for_training/sentinel1_ready.csv\")\n  \"\"\"\n\n\n# exit() # done already\n\n# integrate_modis()\n# integrate_sentinel1()\n# integrate_gridmet()\n# prepare_training_csv()\nprepare_training_csv_nsidc()",
  "history_output" : "integrating datasets into one dataset\n/home/chetana\n                                      2013-01-01  ...  2019-12-31\ncell_id                                           ...            \n0003f387-71c4-48f6-b2b0-d853bd4f0aba         NaN  ...         NaN\n000617d8-8c14-43e2-b708-7e3a69fe3cc3         NaN  ...         NaN\n000ba8d9-d6d5-48da-84a2-1fa54951fae1         NaN  ...         NaN\n0017d1c4-64cb-426d-9158-3f6521d2dd22         NaN  ...         NaN\n0020c632-3d5c-4509-b4ee-6b63a89bf2ff         NaN  ...         NaN\n\n[5 rows x 267 columns]\nThe file already exists. Exiting..\n",
  "history_begin_time" : 1677787846119,
  "history_end_time" : 1677787854124,
  "history_notes" : null,
  "history_process" : "u7xh2p",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "6dnkkfqyv7p",
  "history_input" : "# Deploy model to service\n\nprint(\"deploy model to service\")\n",
  "history_output" : "deploy model to service\n",
  "history_begin_time" : 1677791579049,
  "history_end_time" : 1677791581731,
  "history_notes" : null,
  "history_process" : "2wkl6e",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "ugwvl7g7zqh",
  "history_input" : "# Predict results using the model\n\nfrom sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.model_selection import RandomizedSearchCV\n\n#exit()  # for now, the workflow is not ready yet\n\n# read the grid geometry file\n\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\nmodis_test_ready_file = f\"{github_dir}/data/ready_for_training/modis_test_ready.csv\"\nmodis_test_ready_pd = pd.read_csv(modis_test_ready_file, header=0, index_col=0)\n\npd_to_clean = modis_test_ready_pd[[\"year\", \"m\", \"doy\", \"ndsi\", \"swe\", \"station_id\", \"cell_id\"]].dropna()\n\nall_features = pd_to_clean[[\"year\", \"m\", \"doy\", \"ndsi\"]].to_numpy()\nall_labels = pd_to_clean[[\"swe\"]].to_numpy().ravel()\n\ndef evaluate(model, test_features, y_test, model_name):\n    y_predicted = model.predict(test_features)\n    mae = metrics.mean_absolute_error(y_test, y_predicted)\n    mse = metrics.mean_squared_error(y_test, y_predicted)\n    r2 = metrics.r2_score(y_test, y_predicted)\n    rmse = math.sqrt(mse)\n\n    print(\"The {} model performance for testing set\".format(model_name))\n    print(\"--------------------------------------\")\n    print('MAE is {}'.format(mae))\n    print('MSE is {}'.format(mse))\n    print('R2 score is {}'.format(r2))\n    print('RMSE is {}'.format(rmse))\n    \n    return y_predicted\n\nbase_model = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic.joblib\")\nbasic_predicted_values = evaluate(base_model, all_features, all_labels, \"Base Model\")\n\nbest_random = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest.joblib\")\nrandom_predicted_values = evaluate(best_random, all_features, all_labels, \"Optimized\")\n",
  "history_output" : "/home/chetana\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/ugwvl7g7zqh/service_prediction.py\", line 56, in <module>\n    base_model = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic.joblib\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/joblib/numpy_pickle.py\", line 650, in load\n    with open(filename, 'rb') as f:\nFileNotFoundError: [Errno 2] No such file or directory: '/home/chetana/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic.joblib'\n",
  "history_begin_time" : 1677791582075,
  "history_end_time" : 1677791587314,
  "history_notes" : null,
  "history_process" : "i2fynz",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "1se4t3nm9op",
  "history_input" : "from model_creation_rf import RandomForestHole\nfrom model_creation_xgboost import XGBoostHole\n\nprint(\"Train Models\")\n\nworm_holes = [RandomForestHole(), XGBoostHole()]\n\nfor hole in worm_holes:\n  hole.preprocessing()\n  print(hole.train_x.shape)\n  print(hole.train_y.shape)\n  hole.train()\n  hole.test()\n  hole.evaluate()\n  hole.save()\n  \nprint(\"Finished training and validating all the models.\")\n",
  "history_output" : "Train Models\nall columns:  ['year', 'm', 'day', 'eto', 'pr', 'rmax', 'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', 'lat', 'lon', 'elevation', 'aspect', 'curvature', 'slope', 'eastness', 'northness', 'swe_0719', 'depth_0719', 'swe_snotel']\n<generator object BaseHole.preprocessing.<locals>.<genexpr> at 0x7f9c4525beb0>\n(4713, 22)\n(4713, 1)\nThe random forest model performance for testing set\n--------------------------------------\nMAE is 0.11828248844660401\nMSE is 0.13227701670867625\nR2 score is 0.9996347228804848\nRMSE is 0.3636990743852344\nSaving model to /home/chetana/Documents/GitHub/SnowCast/model/wormhole_RandomForestHole_20230203201436.joblib\nall columns:  ['year', 'm', 'day', 'eto', 'pr', 'rmax', 'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', 'lat', 'lon', 'elevation', 'aspect', 'curvature', 'slope', 'eastness', 'northness', 'swe_0719', 'depth_0719', 'swe_snotel']\n<generator object BaseHole.preprocessing.<locals>.<genexpr> at 0x7f9c4525bd60>\n(4713, 22)\n(4713, 1)\n/home/chetana/gw-workspace/1se4t3nm9op/base_hole.py:58: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n  self.classifier.fit(self.train_x, self.train_y)\n/home/chetana/anaconda3/lib/python3.9/site-packages/sklearn/ensemble/_forest.py:413: FutureWarning: `max_features='auto'` has been deprecated in 1.1 and will be removed in 1.3. To keep the past behaviour, explicitly set `max_features=1.0` or remove this parameter as it is also the default value for RandomForestRegressors and ExtraTreesRegressors.\n  warn(\nThe random forest model performance for testing set\n--------------------------------------\nMAE is 0.007324003392721748\nMSE is 0.001450151823579287\nR2 score is 0.9999953298653975\nRMSE is 0.0380808590184004\nSaving model to /home/chetana/Documents/GitHub/SnowCast/model/wormhole_XGBoostHole_20230203201437.joblib\nFinished training and validating all the models.\n",
  "history_begin_time" : 1677788035730,
  "history_end_time" : 1677788145404,
  "history_notes" : null,
  "history_process" : "e8k4wq",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "lfyb17sdp5w",
  "history_input" : "# Test models\n\n# Random Forest model creation and save to file\n\nfrom sklearn.ensemble import RandomForestRegressor,ExtraTreesRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error as mse\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom datetime import datetime\n\ndef turn_doy_to_date(year, doy):\n  doy = int(doy)\n  doy = str(doy)\n  doy.rjust(3 + len(doy), '0')\n  #res = datetime.strptime(str(year) + \"-\" + doy, \"%Y-%j\").strftime(\"%m/%d/%Y\")\n  res = datetime.strptime(str(year) + \"-\" + doy, \"%Y-%j\").strftime(\"%Y-%m-%d\")\n  return res\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\ntest_ready_file = f\"{github_dir}/data/ready_for_testing/all_ready_3.csv\"\ntest_ready_pd = pd.read_csv(test_ready_file, header=0, index_col=0)\nsubmission_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_pd = pd.read_csv(submission_file, header=0, index_col=0)\npredicted_file = f\"{homedir}/Documents/GitHub/SnowCast/data/results/wormhole_output_4.csv\"\n\ntrain_cols = ['year','m','doy','ndsi','grd','eto','pr','rmax','rmin','tmmn','tmmx','vpd','vs','lat','lon','elevation','aspect','curvature','slope','eastness','northness']\n\nprint(test_ready_pd.shape)\npd_to_clean = test_ready_pd[train_cols]\nprint(\"PD shape: \", pd_to_clean.shape)\n\ndoy_list = test_ready_pd[\"doy\"].unique()\nprint(doy_list)\n\ndate_list = [turn_doy_to_date(2022, doy_list[i]) for i in range(len(doy_list)) ]\nprint(date_list)\n\nall_features = pd_to_clean.to_numpy()\nall_features = np.nan_to_num(all_features)\nprint(\"train feature shape: \", all_features.shape)\n#all_features = pd_to_clean[[\"year\", \"m\", \"doy\", \"ndsi\"]].to_numpy()\n#all_labels = pd_to_clean[[\"swe\"]].to_numpy().ravel()\n\n#base_model = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic_v2.joblib\")\n#base_model = joblib.load(f\"{homedir}/Documents/GitHub/snowcast_trained_model/model/wormhole_random_forest_basic_v2.joblib\")\n\nbest_random = joblib.load(f\"{homedir}/Documents/GitHub/SnowCast/model/wormhole_20221305163806.joblib\")\ny_predicted = best_random.predict(all_features)\nprint(y_predicted) #first got daily prediction\n\ntarget_dates = [\"2022-01-13\",\"2022-01-20\",\"2022-01-27\",\"2022-02-03\",\"2022-02-10\",\"2022-02-17\",\"2022-02-24\",\"2022-03-03\",\"2022-03-10\",\"2022-03-17\",\"2022-03-24\",\"2022-03-31\",\"2022-04-07\",\"2022-04-14\",\"2022-04-21\",\"2022-04-28\",\"2022-05-05\",\"2022-05-12\",\"2022-05-19\",\"2022-05-26\",\"2022-06-02\",\"2022-06-09\",\"2022-06-16\",\"2022-06-23\",\"2022-06-30\"]\nprint(\"taregt date list: \", len(target_dates))\n\ndaily_predictions = pd.DataFrame(columns = target_dates, index = submission_pd.index)\nfor i in range(len(y_predicted)):\n  doy = all_features[i][2]\n  #print(doy)\n  ndate = turn_doy_to_date(2022, doy)\n  if ndate in target_dates:\n    cell_id = test_ready_pd[\"cell_id\"].iloc[i]\n    daily_predictions.at[cell_id, ndate] = y_predicted[i]\n  #print(ndate, cell_id)\n  #print(y_predicted[i])\n  \nprint(daily_predictions.shape)\n#daily_predictions = daily_predictions[[\"2022-01-13\"]]\n\nif os.path.exists(predicted_file):\n  os.remove(predicted_file)\n  \ndaily_predictions.fillna(0.0, inplace=True)\ndaily_predictions.to_csv(predicted_file, date_format=\"%Y-%d-%m\")\n\n\n# turn daily into weekly using mean values\n\n\n\n\n\n",
  "history_output" : "/home/chetana\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/lfyb17sdp5w/model_test.py\", line 39, in <module>\n    test_ready_pd = pd.read_csv(test_ready_file, header=0, index_col=0)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 678, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 575, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 932, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1216, in _make_engine\n    self.handles = get_handle(  # type: ignore[call-overload]\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 786, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/home/chetana/Documents/GitHub/SnowCast/data/ready_for_testing/all_ready_3.csv'\n",
  "history_begin_time" : 1677791569903,
  "history_end_time" : 1677791574983,
  "history_notes" : null,
  "history_process" : "h1qp9v",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "x0l4t0f7qvj",
  "history_input" : "# Load dependencies\nimport geopandas as gpd\nimport json\nimport geojson\nfrom pystac_client import Client\nimport planetary_computer\nimport xarray\nimport rioxarray\nimport xrspatial\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom pyproj import Proj, transform\nimport os\nimport sys, traceback\nimport requests\n\nhome_dir = os.path.expanduser('~')\nsnowcast_github_dir = f\"{home_dir}/Documents/GitHub/SnowCast/\"\n\n#exit() # this process no longer need to execute, we need to make Geoweaver to specify which process doesn't need to run\n\n# user-defined paths for data-access\ndata_dir = f'{snowcast_github_dir}data/'\ngridcells_file = data_dir+'snowcast_provided/grid_cells_eval.geojson'\nstations_file = data_dir+'snowcast_provided/ground_measures_metadata.csv'\ngridcells_outfile = data_dir+'terrain/gridcells_terrainData_eval.csv'\nstations_outfile = data_dir+'terrain/station_terrainData_eval.csv'\n\nrequests.get('https://planetarycomputer.microsoft.com/api/stac/v1')\n\n# setup client for handshaking and data-access\nprint(\"setup planetary computer client\")\nclient = Client.open(\"https://planetarycomputer.microsoft.com/api/stac/v1\",ignore_conformance=True)\n\n# Load metadata\ngridcellsGPD = gpd.read_file(gridcells_file)\ngridcells = geojson.load(open(gridcells_file))\nstations = pd.read_csv(stations_file)\n\n# instantiate output panda dataframes\ndf_gridcells = df = pd.DataFrame(columns=(\"Longitude [deg]\",\"Latitude [deg]\",\n                                            \"Elevation [m]\",\"Aspect [deg]\",\n                                            \"Curvature [ratio]\",\"Slope [deg]\",\n                                            \"Eastness [unitCirc.]\",\"Northness [unitCirc.]\"))\ndf_station = pd.DataFrame(columns=(\"Longitude [deg]\",\"Latitude [deg]\",\n                                   \"Elevation [m]\",\"Elevation_30 [m]\",\"Elevation_1000 [m]\",\n                                   \"Aspect_30 [deg]\",\"Aspect_1000 [deg]\",\n                                   \"Curvature_30 [ratio]\",\"Curvature_1000 [ratio]\",\n                                   \"Slope_30 [deg]\",\"Slope_1000 [deg]\",\n                                   \"Eastness_30 [unitCirc.]\",\"Northness_30 [unitCirc.]\",\n                                   \"Eastness_1000 [unitCirc.]\",\"Northness_1000 [unitCirc.]\"))\n\ndef prepareGridCellTerrain():\n  # instantiate output panda dataframes\n  # Calculate gridcell characteristics using Copernicus DEM data\n  print(\"Prepare GridCell Terrain data\")\n  for idx,cell in enumerate(gridcells['features']):\n      print(\"Processing grid \", idx)\n      search = client.search(\n          collections=[\"cop-dem-glo-30\"],\n          intersects={\"type\":\"Polygon\", \"coordinates\":cell['geometry']['coordinates']},\n      )\n      items = list(search.get_items())\n      print(\"==> Searched items: \", len(items))\n\n      cropped_data = None\n      try:\n          signed_asset = planetary_computer.sign(items[0].assets[\"data\"])\n          data = (\n              #xarray.open_rasterio(signed_asset.href)\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          cropped_data = data.rio.clip(gridcellsGPD['geometry'][idx:idx+1])\n      except:\n          signed_asset = planetary_computer.sign(items[1].assets[\"data\"])\n          data = (\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          cropped_data = data.rio.clip(gridcellsGPD['geometry'][idx:idx+1])\n\n      # calculate lat/long of center of gridcell\n      longitude = np.unique(np.ravel(cell['geometry']['coordinates'])[0::2]).mean()\n      latitude = np.unique(np.ravel(cell['geometry']['coordinates'])[1::2]).mean()\n\n      print(\"reproject data to EPSG:32612\")\n      # reproject the cropped dem data\n      cropped_data = cropped_data.rio.reproject(\"EPSG:32612\")\n\n      # Mean elevation of gridcell\n      mean_elev = cropped_data.mean().values\n      print(\"Elevation: \", mean_elev)\n\n      # Calculate directional components\n      aspect = xrspatial.aspect(cropped_data)\n      aspect_xcomp = np.nansum(np.cos(aspect.values*(np.pi/180)))\n      aspect_ycomp = np.nansum(np.sin(aspect.values*(np.pi/180)))\n      mean_aspect = np.arctan2(aspect_ycomp,aspect_xcomp)*(180/np.pi)\n      if mean_aspect < 0:\n          mean_aspect = 360 + mean_aspect\n      print(\"Aspect: \", mean_aspect)\n      mean_eastness = np.cos(mean_aspect*(np.pi/180))\n      mean_northness = np.sin(mean_aspect*(np.pi/180))\n      print(\"Eastness: \", mean_eastness)\n      print(\"Northness: \", mean_northness)\n\n      # Positive curvature = upward convex\n      curvature = xrspatial.curvature(cropped_data)\n      mean_curvature = curvature.mean().values\n      print(\"Curvature: \", mean_curvature)\n\n      # Calculate mean slope\n      slope = xrspatial.slope(cropped_data)\n      mean_slope = slope.mean().values\n      print(\"Slope: \", mean_slope)\n\n      # Fill pandas dataframe\n      df_gridcells.loc[idx] = [longitude,latitude,\n                               mean_elev,mean_aspect,\n                               mean_curvature,mean_slope,\n                               mean_eastness,mean_northness]\n\n      # Comment out for debugging/filling purposes\n      # if idx % 250 == 0:\n      #     df_gridcells.set_index(gridcellsGPD['cell_id'][0:idx+1],inplace=True)\n      #     df_gridcells.to_csv(gridcells_outfile)\n\n  # Save output data into csv format\n  df_gridcells.set_index(gridcellsGPD['cell_id'][0:idx+1],inplace=True)\n  df_gridcells.to_csv(gridcells_outfile)\n\ndef prepareStationTerrain():\n  # Calculate terrain characteristics of stations, and surrounding regions using COP 30\n  for idx,station in stations.iterrows():\n      search = client.search(\n          collections=[\"cop-dem-glo-30\"],\n          intersects={\"type\":\"Point\", \"coordinates\":[station['longitude'],station['latitude']]},\n      )\n      items = list(search.get_items())\n      print(f\"Returned {len(items)} items\")\n\n      try:\n          signed_asset = planetary_computer.sign(items[0].assets[\"data\"])\n          data = (\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          xdiff = np.abs(data.x-station['longitude'])\n          ydiff = np.abs(data.y-station['latitude'])\n          xdiff = np.where(xdiff == xdiff.min())[0][0]\n          ydiff = np.where(ydiff == ydiff.min())[0][0]\n          data = data[ydiff-33:ydiff+33,xdiff-33:xdiff+33].rio.reproject(\"EPSG:32612\")\n      except:\n          traceback.print_exc(file=sys.stdout)\n          signed_asset = planetary_computer.sign(items[1].assets[\"data\"])\n          data = (\n              xarray.open_rasterio(signed_asset.href)\n              .squeeze()\n              .drop(\"band\")\n              .coarsen({\"y\": 1, \"x\": 1})\n              .mean()\n          )\n          xdiff = np.abs(data.x-station['longitude'])\n          ydiff = np.abs(data.y-station['latitude'])\n          xdiff = np.where(xdiff == xdiff.min())[0][0]\n          ydiff = np.where(ydiff == ydiff.min())[0][0]\n          data = data[ydiff-33:ydiff+33,xdiff-33:xdiff+33].rio.reproject(\"EPSG:32612\")\n\n      # Reproject the station data to better include only 1000m surrounding area\n      inProj = Proj(init='epsg:4326')\n      outProj = Proj(init='epsg:32612')\n      new_x,new_y = transform(inProj,outProj,station['longitude'],station['latitude'])\n\n      # Calculate elevation of station and surroundings\n      mean_elevation = data.mean().values\n      elevation = data.sel(x=new_x,y=new_y,method='nearest')\n      print(elevation.values)\n\n      # Calcuate directional components\n      aspect = xrspatial.aspect(data)\n      aspect_xcomp = np.nansum(np.cos(aspect.values*(np.pi/180)))\n      aspect_ycomp = np.nansum(np.sin(aspect.values*(np.pi/180)))\n      mean_aspect = np.arctan2(aspect_ycomp,aspect_xcomp)*(180/np.pi)\n      if mean_aspect < 0:\n          mean_aspect = 360 + mean_aspect\n      print(mean_aspect)\n      aspect = aspect.sel(x=new_x,y=new_y,method='nearest')\n      print(aspect.values)\n      eastness = np.cos(aspect*(np.pi/180))\n      northness = np.sin(aspect*(np.pi/180))\n      mean_eastness = np.cos(mean_aspect*(np.pi/180))\n      mean_northness = np.sin(mean_aspect*(np.pi/180))\n\n      # Positive curvature = upward convex\n      curvature = xrspatial.curvature(data)\n      mean_curvature = curvature.mean().values\n      curvature = curvature.sel(x=new_x,y=new_y,method='nearest')\n      print(curvature.values)\n\n      # Calculate slope\n      slope = xrspatial.slope(data)\n      mean_slope = slope.mean().values\n      slope = slope.sel(x=new_x,y=new_y,method='nearest')\n      print(slope.values)\n\n      # Fill pandas dataframe\n      df_station.loc[idx] = [station['longitude'],station['latitude'],\n                             station['elevation_m'],elevation.values,mean_elevation,\n                             aspect.values,mean_aspect,\n                             curvature.values,mean_curvature,\n                             slope.values,mean_slope,\n                             eastness.values,northness.values,\n                             mean_eastness,mean_northness]\n\n      # Comment out for debugging/filling purposes\n      # if idx % 250 == 0:\n      #     df_station.set_index(stations['station_id'][0:idx+1],inplace=True)\n      #     df_station.to_csv(stations_outfile)\n\n  # Save output data into CSV format\n  df_station.set_index(stations['station_id'][0:idx+1],inplace=True)\n  df_station.to_csv(stations_outfile)\n\ntry:\n  prepareGridCellTerrain()\n  #prepareStationTerrain()\nexcept:\n  traceback.print_exc(file=sys.stdout)\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/x0l4t0f7qvj/data_terrainFeatures.py\", line 5, in <module>\n    from pystac_client import Client\nModuleNotFoundError: No module named 'pystac_client'\n",
  "history_begin_time" : 1677787286882,
  "history_end_time" : 1677787289957,
  "history_notes" : null,
  "history_process" : "urd0nk",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "v18yifrs8f2",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport eeauth as e\n\n#exit() # done, uncomment if you want to download new files.\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\n\norg_name = 'modis'\nproduct_name = f'MODIS/006/MOD10A1'\nvar_name = 'NDSI'\ncolumn_name = 'mod10a1_ndsi'\n\n#org_name = 'sentinel1'\n#product_name = 'COPERNICUS/S1_GRD'\n#var_name = 'VV'\n#column_name = 's1_grd_vv'\n\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n    \n    try:\n      \n  \t  print(station_cell_mapper_df['station_id'][ind], station_cell_mapper_df['cell_id'][ind])\n  \t  current_cell_id = station_cell_mapper_df['cell_id'][ind]\n  \t  print(\"collecting \", current_cell_id)\n  \t  single_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/modis/{column_name}_{current_cell_id}.csv\"\n\n  \t  if os.path.exists(single_csv_file):\n  \t    print(\"exists skipping..\")\n  \t    continue\n\n  \t  longitude = station_cell_mapper_df['lon'][ind]\n  \t  latitude = station_cell_mapper_df['lat'][ind]\n\n  \t  # identify a 500 meter buffer around our Point Of Interest (POI)\n  \t  poi = ee.Geometry.Point(longitude, latitude).buffer(30)\n\n  \t  def poi_mean(img):\n  \t      reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi, scale=30)\n  \t      mean = reducer.get(var_name)\n  \t      return img.set('date', img.date().format()).set(column_name,mean)\n        \n  \t  viirs1 = ee.ImageCollection(product_name).filterDate('2013-01-01','2017-12-31')\n  \t  poi_reduced_imgs1 = viirs1.map(poi_mean)\n  \t  nested_list1 = poi_reduced_imgs1.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n  \t  # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n  \t  df1 = pd.DataFrame(nested_list1.getInfo(), columns=['date',column_name])\n      \n  \t  viirs2 = ee.ImageCollection(product_name).filterDate('2018-01-01','2021-12-31')\n  \t  poi_reduced_imgs2 = viirs2.map(poi_mean)\n  \t  nested_list2 = poi_reduced_imgs2.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n  \t  # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n  \t  df2 = pd.DataFrame(nested_list2.getInfo(), columns=['date',column_name])\n      \n\n  \t  df = pd.concat([df1, df2])\n  \t  df['date'] = pd.to_datetime(df['date'])\n  \t  df = df.set_index('date')\n  \t  df['cell_id'] = current_cell_id\n  \t  df['latitude'] = latitude\n  \t  df['longitude'] = longitude\n  \t  df.to_csv(single_csv_file)\n\n  \t  df_list = [all_cell_df, df]\n  \t  all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n  \t  print(e)\n  \t  pass\n    \n    \nall_cell_df.to_csv(f\"{homedir}/Documents/GitHub/SnowCast/data/{org_name}/{column_name}.csv\")  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1677787282943,
  "history_end_time" : 1677787285861,
  "history_notes" : null,
  "history_process" : "525l8q",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "8yk9hsgh5d7",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport eeauth as e\n\n#exit() # done, uncomment if you want to download new files.\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\n#org_name = 'modis'\n#product_name = f'MODIS/006/MOD10A1'\n#var_name = 'NDSI'\n#column_name = 'mod10a1_ndsi'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      single_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/{org_name}/{column_name}_{current_cell_id}.csv\"\n\n      if os.path.exists(single_csv_file):\n          print(\"exists skipping..\")\n          continue\n\n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n      viirs = ee.ImageCollection(product_name).filterDate('2013-01-01','2021-12-31').filterBounds(poi).filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')).select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      \n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n      df.to_csv(single_csv_file)\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(f\"{homedir}/Documents/GitHub/SnowCast/data/{org_name}/{column_name}.csv\")  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1677787287871,
  "history_end_time" : 1677787291428,
  "history_notes" : null,
  "history_process" : "7temiv",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "dtib47sk9vl",
  "history_input" : "import json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport math\n\n#pd.set_option('display.max_columns', None)\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\ngridcells_file = f\"{github_dir}/data/snowcast_provided/grid_cells.geojson\"\nmodel_dir = f\"{github_dir}/model/\"\ntraining_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_train_features.csv\"\ntesting_feature_file = f\"{github_dir}/data/snowcast_provided/ground_measures_test_features.csv\"\ntrain_labels_file = f\"{github_dir}/data/snowcast_provided/train_labels.csv\"\nground_measure_metadata_file = f\"{github_dir}/data/snowcast_provided/ground_measures_metadata.csv\"\n\nready_for_training_folder = f\"{github_dir}/data/ready_for_training/\"\n\nresult_mapping_file = f\"{ready_for_training_folder}station_cell_mapping.csv\"\n\n\nif os.path.exists(result_mapping_file):\n    exit()\n\n\ngridcells = geojson.load(open(gridcells_file))\ntraining_df = pd.read_csv(training_feature_file, header=0)\ntesting_df = pd.read_csv(testing_feature_file, header=0)\nground_measure_metadata_df = pd.read_csv(ground_measure_metadata_file, header=0)\ntrain_labels_df = pd.read_csv(train_labels_file, header=0)\n\nprint(\"training: \", training_df.head())\nprint(\"testing: \", testing_df.head())\nprint(\"ground measure metadata: \", ground_measure_metadata_df.head())\nprint(\"training labels: \", train_labels_df.head())\n\n\ndef calculateDistance(lat1, lon1, lat2, lon2):\n    lat1 = float(lat1)\n    lon1 = float(lon1)\n    lat2 = float(lat2)\n    lon2 = float(lon2)\n    return math.sqrt((lat1-lat2)**2 + (lon1-lon2)**2)\n  \n# prepare the training data\n\nstation_cell_mapper_df = pd.DataFrame(columns = [\"station_id\", \"cell_id\", \"lat\", \"lon\"])\n\nground_measure_metadata_df = ground_measure_metadata_df.reset_index()  # make sure indexes pair with number of rows\nfor index, row in ground_measure_metadata_df.iterrows():\n  \t\n    print(row['station_id'], row['name'], row['latitude'], row['longitude'])\n    station_lat = row['latitude']\n    station_lon = row['longitude']\n    \n    shortest_dis = 999\n    associated_cell_id = None\n    associated_lat = None\n    associated_lon = None\n    \n    for idx,cell in enumerate(gridcells['features']):\n    \n      current_cell_id = cell['properties']['cell_id']\n\n      #print(\"collecting \", current_cell_id)\n      cell_lon = np.unique(np.ravel(cell['geometry']['coordinates'])[0::2]).mean()\n      cell_lat = np.unique(np.ravel(cell['geometry']['coordinates'])[1::2]).mean()\n\n      dist = calculateDistance(station_lat, station_lon, cell_lat, cell_lon)\n\n      if dist < shortest_dis:\n        associated_cell_id = current_cell_id\n        shortest_dis = dist\n        associated_lat = cell_lat\n        associated_lon = cell_lon\n    \n    station_cell_mapper_df.loc[len(station_cell_mapper_df.index)] = [row['station_id'], associated_cell_id, associated_lat, associated_lon]\n    \nprint(station_cell_mapper_df.head())\nstation_cell_mapper_df.to_csv(f\"{ready_for_training_folder}station_cell_mapping.csv\")\n    \n\n\n      \n",
  "history_output" : "",
  "history_begin_time" : 1677787274624,
  "history_end_time" : 1677787277266,
  "history_notes" : null,
  "history_process" : "rmxece",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "ji10sa2lds0",
  "history_input" : "# This script will download modis data for all the testing sites from Google Earth Engine.\n# The start date is the last stop date of the last run.\n\nfrom all_dependencies import *\nfrom datetime import date\nfrom snowcast_utils import *\nimport traceback\nimport eeauth as e\n\n#exit() # done, uncomment if you want to download new files.\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\norg_name = 'modis'\nproduct_name = f'MODIS/006/MOD10A1'\nvar_name = 'NDSI'\ncolumn_name = 'mod10a1_ndsi'\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/modis\", \"%Y-%m-%d\")\nend_date = test_end_date\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\nif os.path.exists(final_csv_file):\n    #print(\"exists exiting..\")\n    #exit()\n    os.remove(final_csv_file)\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\nprint(\"start to traverse the cells in submission_format_eval.csv..\")\n\nfor current_cell_id in submission_format_df.index:\n    \n    try:\n      \n  \t  longitude = all_cell_coords_df['lon'][current_cell_id]\n  \t  latitude = all_cell_coords_df['lat'][current_cell_id]\n\n  \t  # identify a 500 meter buffer around our Point Of Interest (POI)\n  \t  poi = ee.Geometry.Point(longitude, latitude).buffer(30)\n\n  \t  def poi_mean(img):\n  \t      reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi, scale=30)\n  \t      mean = reducer.get(var_name)\n  \t      return img.set('date', img.date().format()).set(column_name,mean)\n        \n  \t  viirs1 = ee.ImageCollection(product_name).filterDate(start_date, end_date)\n  \t  poi_reduced_imgs1 = viirs1.map(poi_mean)\n  \t  nested_list1 = poi_reduced_imgs1.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n  \t  # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n  \t  df = pd.DataFrame(nested_list1.getInfo(), columns=['date',column_name])\n      \n  \t  df['date'] = pd.to_datetime(df['date'])\n  \t  df = df.set_index('date')\n  \t  df['cell_id'] = current_cell_id\n  \t  df['latitude'] = latitude\n  \t  df['longitude'] = longitude\n  \t  #df.to_csv(single_csv_file)\n\n  \t  df_list = [all_cell_df, df]\n  \t  all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      print(traceback.format_exc())\n      print(\"failed\", e)\n      pass\n    \n    \nall_cell_df.to_csv(final_csv_file)  \n\nprint(f\"All points have been saved to {final_csv_file}\")\n\n\n",
  "history_output" : "",
  "history_begin_time" : 1677787467783,
  "history_end_time" : 1677787470325,
  "history_notes" : null,
  "history_process" : "illwc1",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "6v39o4j4hlu",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/6v39o4j4hlu/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677787471346,
  "history_end_time" : 1677787474135,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "afm4u3izw9z",
  "history_input" : "'''\nThe wrapper for all the snowcast_wormhole predictors\n'''\nimport os\nimport joblib\nfrom datetime import datetime\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\n\nhomedir = os.path.expanduser('~')\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n\nclass BaseHole:\n  \n  all_ready_file = f\"{github_dir}/data/ready_for_training/all_ready_new.csv\"\n  \n  def __init__(self):\n    self.classifier = self.get_model()\n    self.holename = self.__class__.__name__ \n    self.train_x = None\n    self.train_y = None\n    self.test_x = None\n    self.test_y = None\n    self.test_y_results = None\n    self.save_file = None\n    \n  def save(self):\n    now = datetime.now()\n    date_time = now.strftime(\"%Y%d%m%H%M%S\")\n    self.save_file = f\"{github_dir}/model/wormhole_{self.holename}_{date_time}.joblib\"\n    print(f\"Saving model to {self.save_file}\")\n    joblib.dump(self.classifier, self.save_file)\n  \n  def preprocessing(self):\n    all_ready_pd = pd.read_csv(self.all_ready_file, header=0, index_col=0)\n    input_columns = [\"year\", \"m\", \"day\", \"eto\", \"pr\", \"rmax\", \"rmin\", \"tmmn\", \"tmmx\", \"vpd\", \"vs\", \n                     \"lat\", \"lon\", \"elevation\", \"aspect\", \"curvature\", \"slope\", \"eastness\", \n                     \"northness\", \"swe_0719\", \"depth_0719\"]\n    \n    all_cols = input_columns\n    all_cols.append(\"swe_snotel\")\n    print(\"all columns: \", all_cols)\n    print(type(i) for i in all_cols)\n    all_ready_pd = all_ready_pd[all_cols]\n#     all_ready_pd = all_ready_pd.fillna(10000) # replace all nan with 10000\n    all_ready_pd = all_ready_pd[all_ready_pd[\"swe_snotel\"]!=-1]\n    all_ready_pd = all_ready_pd.dropna()\n    train, test = train_test_split(all_ready_pd, test_size=0.2)\n#     \"cell_id\", \"year\", \"m\", \"day\", \"eto\", \"pr\", \"rmax\", \"rmin\", \"tmmn\", \"tmmx\",\"vpd\", \"vs\", \"lat\", \"lon\",\n#                  \"elevation\", \"aspect\", \"curvature\", \"slope\", \"eastness\", \"northness\", \"swe_0719\", \"depth_0719\", \"swe_snotel\"\n    self.train_x, self.train_y = train[input_columns].to_numpy().astype('float'), train[['swe_snotel']].to_numpy().astype('float')\n    self.test_x, self.test_y = test[input_columns].to_numpy().astype('float'), test[['swe_snotel']].to_numpy().astype('float')\n  \n  def train(self):\n    self.classifier.fit(self.train_x, self.train_y)\n  \n  def test(self):\n    self.test_y_results = self.classifier.predict(self.test_x)\n    return self.test_y_results\n  \n  def predict(self, input_x):\n    return self.classifier.predict(input_x)\n  \n  def evaluate(self):\n    pass\n  \n  def get_model(self):\n    pass\n  \n  def post_processing(self):\n    pass",
  "history_output" : "Running",
  "history_begin_time" : 1677787275669,
  "history_end_time" : 1677787278824,
  "history_notes" : null,
  "history_process" : "y7nb46",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "cysnyw567sk",
  "history_input" : "import json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nimport eeauth as e\n\n#exit() # uncomment to download new files\n'''service_account = 'eartheginegcloud@earthengine58. iam.gserviceaccount.com'\ncreds = ee.ServiceAccountCredentials(service_account, '/home/chetana/bhargavi-creds.json')'''\n\ntry:\n  ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate()# this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n    \n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = os.path.join(homedir, 'Documents', 'GitHub', 'SnowCast')\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\n#org_name = 'modis'\n#product_name = f'MODIS/006/MOD10A1'\n#var_name = 'NDSI'\n#column_name = 'mod10a1_ndsi'\n\norg_name = 'gridmet'\nproduct_name = 'IDAHO_EPSCOR/GRIDMET'\nstart_date = '2018-10-01'\nend_date = '2019-09-30'\n\nvar_list = ['tmmn', 'tmmx', 'pr', 'vpd', 'eto', 'rmax', 'rmin', 'vs']\n\nfor var in var_list:\n\n    var_name = var\n    column_name = var\n\n    dfolder = f\"{homedir}/Documents/GitHub/SnowCast/data/sim_training/{org_name}/\"\n    if not os.path.exists(dfolder):\n        os.makedirs(dfolder)\n\n    all_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\n    for ind in station_cell_mapper_df.index:\n\n        try:\n\n          current_cell_id = station_cell_mapper_df['cell_id'][ind]\n          #print(\"collecting \", current_cell_id)\n          single_csv_file = f\"{dfolder}/{column_name}_{current_cell_id}.csv\"\n\n          if os.path.exists(single_csv_file):\n              print(\"exists skipping..\")\n              continue\n\n          longitude = station_cell_mapper_df['lon'][ind]\n          latitude = station_cell_mapper_df['lat'][ind]\n\n          # identify a 500 meter buffer around our Point Of Interest (POI)\n          poi = ee.Geometry.Point(longitude, latitude).buffer(1000)\n          viirs = ee.ImageCollection(product_name).filterDate(start_date, end_date).filterBounds(poi).select(var_name)\n\n          def poi_mean(img):\n              reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi, scale=1000)\n              mean = reducer.get(var_name)\n              return img.set('date', img.date().format()).set(column_name,mean)\n\n\n          poi_reduced_imgs = viirs.map(poi_mean)\n\n          nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n          # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n          df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n          df['date'] = pd.to_datetime(df['date'])\n          df = df.set_index('date')\n\n          df['cell_id'] = current_cell_id\n          df['latitude'] = latitude\n          df['longitude'] = longitude\n          df.to_csv(single_csv_file)\n\n          df_list = [all_cell_df, df]\n          all_cell_df = pd.concat(df_list) # merge into big dataframe\n\n        except Exception as e:\n\n          print(e)\n          pass\n    \n    all_cell_df.to_csv(f\"{dfolder}/{column_name}.csv\") ",
  "history_output" : "/home/chetana\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\nexists skipping..\n",
  "history_begin_time" : 1677787293823,
  "history_end_time" : 1677787305612,
  "history_notes" : null,
  "history_process" : "a8p3n7",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "tgk4sic9dz0",
  "history_input" : "from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error as mse\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom base_hole import BaseHole\nfrom sklearn.model_selection import train_test_split\nfrom datetime import datetime\nfrom model_creation_rf import RandomForestHole\nfrom sklearn.ensemble import ExtraTreesRegressor\n\nclass XGBoostHole(RandomForestHole):\n\n  def get_model(self):\n    \"\"\"\n    rfc_pipeline = Pipeline(steps = [\n      ('data_scaling', StandardScaler()),\n      ('model', RandomForestRegressor(max_depth = 15,\n                                       min_samples_leaf = 0.004,\n                                       min_samples_split = 0.008,\n                                       n_estimators = 25))])\n    #return rfc_pipeline\n  \t\"\"\"\n    etmodel = ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',\n                    max_depth=None, max_features='auto', max_leaf_nodes=None,\n                    max_samples=None, min_impurity_decrease=0.0,\n                    #min_impurity_split=None, \n                    min_samples_leaf=1,\n                    min_samples_split=2, min_weight_fraction_leaf=0.0,\n                    n_estimators=100, n_jobs=-1, oob_score=False,\n                    random_state=123, verbose=0, warm_start=False)\n    return etmodel\n\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1677787287723,
  "history_end_time" : 1677787291404,
  "history_notes" : null,
  "history_process" : "4i0sop",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "3y6v3c4995q",
  "history_input" : "\nfrom BaseHole import *\n\nclass KehanModel(BaseHole):\n\t\n  def preprocessing():\n    pass  \n  \n  def train():\n    pass\n  \n  def test():\n    pass",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/3y6v3c4995q/model_create_kehan.py\", line 2, in <module>\n    from BaseHole import *\nModuleNotFoundError: No module named 'BaseHole'\n",
  "history_begin_time" : 1677787274671,
  "history_end_time" : 1677787277248,
  "history_notes" : null,
  "history_process" : "wdh394",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "nte288f797w",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/nte288f797w/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677787467675,
  "history_end_time" : 1677787470307,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "vjp666tucsn",
  "history_input" : "from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.model_selection import RandomizedSearchCV\n\nimport json\nimport pandas as pd\nimport ee\nimport eeauth \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\n\n#pd.set_option('display.max_columns', None)\n",
  "history_output" : "Running",
  "history_begin_time" : 1677787275802,
  "history_end_time" : 1677787279605,
  "history_notes" : null,
  "history_process" : "ilbqzg",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "1tph2fne2z3",
  "history_input" : "import os\n\nprint(\"get UCLA data and prepare it into csv\")\n\n",
  "history_output" : "get UCLA data and prepare it into csv\n",
  "history_begin_time" : 1677787281650,
  "history_end_time" : 1677787284303,
  "history_notes" : null,
  "history_process" : "do86ae",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "r0mkypilred",
  "history_input" : "# 2019 first https://nsidc.org/data/nsidc-0719/versions/1#anchor-1\n\n# TODO: change LAT LONG TO GRID CELL COORDS\n# TODO: adjust using grid cell geojson in data integration\n# TODO: adjust to make model validation working (model_train_validate)\n\n\"\"\"\nBroxton, P., X. Zeng, and N. Dawson. 2019. Daily 4 km Gridded SWE and Snow Depth from\nAssimilated In-Situ and Modeled Data over the Conterminous US, Version 1. 2019-2021.\nBoulder, Colorado USA. NASA National Snow and Ice Data Center Distributed Active Archive Center.\nhttps://doi.org/10.5067/0GGPB220EX6A. 11/02/2022.\n\nTo enable wget to directly download netcdf from NSIDC, use:\n\necho 'machine urs.earthdata.nasa.gov login <uid> password <password>' >> ~/.netrc\nchmod 0600 ~/.netrc\n\n\"\"\"\n\nfrom math import cos, asin, sqrt, radians\nimport pandas as pd\nimport numpy as np\nimport os.path\nimport netCDF4 as nc\nimport datetime\nimport geojson\nfrom sklearn import neighbors as sk\nimport sys\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\ngrid_cells = f\"{github_dir}/data/snowcast_provided/grid_cells.geojson\"\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n# open nsidc data file (netCDF)\n# crs, lat, lon, time, time_str, DEPTH, SWE, SWE_MASK\n# change to make it work\nend_year = 2019\n# https://daacdata.apps.nsidc.org/pub/DATASETS/nsidc0719_SWE_Snow_Depth_v1/4km_SWE_Depth_WY2019_v01.nc\nnsidc_data_file = f\"{homedir}/Documents/data/4km_SWE_Depth_WY{end_year}_v01.nc\"\nnsidc_data_ds = nc.Dataset(nsidc_data_file)\n'''\nprint(nsidc_data_ds)\nfor dim in nsidc_data_ds.dimensions.values():\n    print(dim)\nfor var in nsidc_data_ds.variables.values():\n    print(var)\n'''\n# dates based on Water Year 2019 (not normal year)\norg_name = 'nsidc'\nproduct_name = 'NSIDC'\nstart_date = '2018-10-01'\nend_date = '2019-09-30'\n\ndfolder = f\"{homedir}/Documents/GitHub/SnowCast/data/sim_training/{org_name}/\"\nif not os.path.exists(dfolder):\n    os.makedirs(dfolder)\n\n# Removes duplicate indices\nscmd = set(station_cell_mapper_df['cell_id'])\n\nlat = nsidc_data_ds.variables['lat'][:]\nlon = nsidc_data_ds.variables['lon'][:]\ndepth = nsidc_data_ds.variables['DEPTH']\nswe = nsidc_data_ds.variables['SWE']\ntime = nsidc_data_ds.variables['time']\ncolumns = ['Year', 'Month', 'Day', 'Lat', 'Lon', 'SWE', 'Depth']\n\nstart_date_dt = datetime.datetime.strptime(start_date, \"%Y-%m-%d\")\n# conversion factor so we can get days from 0-364 for array\ndays_1900_start = int((start_date_dt - datetime.datetime(1900,1,1)).days)\n\nall_cells_df = pd.DataFrame(columns=columns)\nind = 0\n\n\n# haversine formula\ndef coord_distance(lat1, lon1, lat2, lon2):\n    p = 0.017453292519943295\n    hav = 0.5 - cos((lat2-lat1)*p)/2 + cos(lat1*p)*cos(lat2*p) * (1-cos((lon2-lon1)*p)) / 2\n    return 12742 * asin(sqrt(hav))\n\n\n# inefficient and bad, don't use this\ndef find_nearest(find_lat, find_lng):\n    min_dist = 999999999\n    curr_min_lat_idx = 0\n    curr_min_lon_idx = 0\n\n    lat_len = len(lat)\n    lon_len = len(lon)\n    # iterate through lat and long to find closest val\n    for lat_idx in range(lat_len):\n        for lon_idx in range(lon_len):\n            if coord_distance(lat[lat_idx], lon[lon_idx], find_lat, find_lng) < min_dist:\n                if depth[23, lat_idx, lon_idx] != '--':\n                    min_dist = coord_distance(lat[lat_idx], lon[lon_idx], find_lat, find_lng)\n                    curr_min_lat_idx = lat_idx\n                    curr_min_lon_idx = lon_idx\n\n    return curr_min_lat_idx, curr_min_lon_idx\n\n\n# for generating the list of all valid lat long pairs\ndef gen_pairs():\n    temp = []\n    lat_len = len(lat)\n    lon_len = len(lon)\n    # iterate through lat and long to find closest val\n    for lat_idx in range(lat_len):\n        for lon_idx in range(lon_len):\n            if depth[23, lat_idx, lon_idx] != '--':\n                temp.append((lat[lat_idx], lon[lon_idx]))\n    temp = np.array(temp)\n    print(temp)\n    np.save(f\"{dfolder}/valid_pairs.npy\", temp)\n\n\n# use balltree to find closest neighbors, convert to radians first so the haversine thing works correctly\n# (that's why there's a separate rad thing)\ndef find_nearest_2(find_lat, find_lng):\n    # generate valid pairs, or just load if they already exist\n    if not os.path.exists(f\"{dfolder}/valid_pairs.npy\"):\n        print(\"file doesn't exist, generating new\")\n        gen_pairs()\n    lat_lon_pairs = np.load(f\"{dfolder}/valid_pairs.npy\")\n    lat_lon_pairs_rad = np.array([[radians(x[0]), radians(x[1])] for x in lat_lon_pairs])\n    ball_tree = sk.BallTree(lat_lon_pairs_rad, metric=\"haversine\")\n\n    dist, ind = ball_tree.query([(radians(find_lat), radians(find_lng))], return_distance=True)\n    print(dist)\n    print(ind)\n    print(lat_lon_pairs[ind])\n    curr_min_lat_idx = lat_lon_pairs[ind][0][0][0]\n    curr_min_lon_idx = lat_lon_pairs[ind][0][0][1]\n    return curr_min_lat_idx, curr_min_lon_idx\n\n\ndef turn_nsidc_nc_to_csv():\n    \n\n    # comment out if bulk writing!!\n    # all_cells_df.to_csv(f\"{dfolder}/test.csv\", index=False)\n\n    for ind, current_cell_id in enumerate(scmd):\n        # comment out if bulk writing\n        # all_cells_df = pd.DataFrame(columns=columns)\n\n        # Location information\n        longitude = station_cell_mapper_df['lon'][ind]\n        latitude = station_cell_mapper_df['lat'][ind]\n\n    #     print(latitude)\n    #     print(longitude)\n\n        # find closest lat long\n        lat_val, lon_val = find_nearest_2(latitude, longitude, )\n        lat_idx = np.where(lat == lat_val)[0]\n        lon_idx = np.where(lon == lon_val)[0]\n    #     print(lat_val)\n    #     print(lon_val)\n\n        depth_time = depth[:, lat_idx, lon_idx]\n        swe_time = swe[:, lat_idx, lon_idx]\n\n        for ele in time:\n            time_index = int(ele.data - days_1900_start)\n            time_index_dt = datetime.datetime(1900, 1, 1, 0, 0) + datetime.timedelta(int(ele.data))\n            depth_val = depth_time[time_index][0][0]\n            swe_val = swe_time[time_index][0][0]\n\n            all_cells_df.loc[len(all_cells_df.index)] = [time_index_dt.year, time_index_dt.month, time_index_dt.day, lat_val, lon_val, swe_val, depth_val]\n\n        # comment out if bulk writing\n        # all_cells_df.to_csv(f\"{dfolder}/test.csv\", mode='a', header=False, index=False)\n\n    # uncomment to bulk write at end of program\n    all_cells_df.to_csv(f\"{dfolder}/{end_year}nsidc_data.csv\")\n\n    print(\"finished\")\n\n# call this method to extract the \nturn_nsidc_nc_to_csv()",
  "history_output" : "/home/chetana\n[[0.00019681]]\n[[302446]]\n[[[  42.       -120.166664]]]\n[[0.00036589]]\n[[180957]]\n[[[  37.708332 -119.125   ]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[0.00033864]]\n[[164419]]\n[[[  37.083332 -118.75    ]]]\n[[0.00017579]]\n[[145757]]\n[[[  36.375    -118.291664]]]\n[[0.00035973]]\n[[279150]]\n[[[  41.208332 -122.791664]]]\n[[0.00015398]]\n[[164425]]\n[[[  37.083332 -118.5     ]]]\n[[0.00031948]]\n[[154543]]\n[[[  36.708332 -118.833336]]]\n[[0.00038418]]\n[[239381]]\n[[[  39.833332 -121.333336]]]\n[[0.00021309]]\n[[267031]]\n[[[  40.791668 -121.791664]]]\n[[0.00018052]]\n[[234637]]\n[[[  39.666668 -120.625   ]]]\n[[0.0002125]]\n[[202215]]\n[[[  38.5      -119.791664]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[0.00015498]]\n[[193151]]\n[[[  38.166668 -120.041664]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[0.0002774]]\n[[279156]]\n[[[  41.208332 -122.541664]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[0.00019681]]\n[[302446]]\n[[[  42.       -120.166664]]]\n[[0.00024992]]\n[[173209]]\n[[[  37.416668 -119.5     ]]]\n[[0.00013956]]\n[[147950]]\n[[[  36.458332 -118.541664]]]\n[[0.00020465]]\n[[156750]]\n[[[  36.791668 -118.416664]]]\n[[9.7935995e-05]]\n[[213680]]\n[[[  38.916668 -120.375   ]]]\n[[0.00017579]]\n[[145757]]\n[[[  36.375    -118.291664]]]\n[[0.00017579]]\n[[145757]]\n[[[  36.375    -118.291664]]]\n[[0.00019681]]\n[[302446]]\n[[[  42.       -120.166664]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[0.00037612]]\n[[186492]]\n[[[  37.916668 -119.25    ]]]\n[[0.00027356]]\n[[196529]]\n[[[  38.291668 -119.625   ]]]\n[[0.00017002]]\n[[178752]]\n[[[  37.625    -119.083336]]]\n[[0.00019681]]\n[[302446]]\n[[[  42.       -120.166664]]]\n[[0.0002125]]\n[[202215]]\n[[[  38.5      -119.791664]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[0.00015417]]\n[[146849]]\n[[[  36.416668 -118.583336]]]\n[[0.00016601]]\n[[183167]]\n[[[  37.791668 -119.208336]]]\n[[0.00032432]]\n[[182046]]\n[[[  37.75     -119.791664]]]\n[[9.7935995e-05]]\n[[213680]]\n[[[  38.916668 -120.375   ]]]\n[[0.0003812]]\n[[151250]]\n[[[  36.583332 -118.75    ]]]\n[[0.00032729]]\n[[194278]]\n[[[  38.208332 -119.875   ]]]\n[[0.00032678]]\n[[176538]]\n[[[  37.541668 -119.25    ]]]\n[[0.00022214]]\n[[174321]]\n[[[  37.458332 -119.291664]]]\n[[0.00018052]]\n[[234637]]\n[[[  39.666668 -120.625   ]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[0.0002774]]\n[[279156]]\n[[[  41.208332 -122.541664]]]\n[[0.00038418]]\n[[239381]]\n[[[  39.833332 -121.333336]]]\n[[0.00025497]]\n[[167711]]\n[[[  37.208332 -119.208336]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[0.00038418]]\n[[239381]]\n[[[  39.833332 -121.333336]]]\n[[0.00025197]]\n[[193160]]\n[[[  38.166668 -119.666664]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[9.7935995e-05]]\n[[213680]]\n[[[  38.916668 -120.375   ]]]\n[[0.00018052]]\n[[234637]]\n[[[  39.666668 -120.625   ]]]\n[[0.00018052]]\n[[234637]]\n[[[  39.666668 -120.625   ]]]\n[[0.00018052]]\n[[234637]]\n[[[  39.666668 -120.625   ]]]\n[[0.00010902]]\n[[238201]]\n[[[  39.791668 -120.875   ]]]\n[[9.13684685e-05]]\n[[202219]]\n[[[  38.5   -119.625]]]\n[[0.00021309]]\n[[267031]]\n[[[  40.791668 -121.791664]]]\n[[0.00027356]]\n[[196529]]\n[[[  38.291668 -119.625   ]]]\n[[0.00027356]]\n[[196529]]\n[[[  38.291668 -119.625   ]]]\n[[0.00018052]]\n[[234637]]\n[[[  39.666668 -120.625   ]]]\n[[0.00024862]]\n[[277959]]\n[[[  41.166668 -121.958336]]]\n[[0.00019348]]\n[[178753]]\n[[[  37.625    -119.041664]]]\n[[9.13684685e-05]]\n[[202219]]\n[[[  38.5   -119.625]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[0.00017594]]\n[[155643]]\n[[[  36.75     -118.708336]]]\n[[0.00032588]]\n[[189821]]\n[[[  38.041668 -119.666664]]]\n[[0.0002774]]\n[[279156]]\n[[[  41.208332 -122.541664]]]\n[[0.00017579]]\n[[145757]]\n[[[  36.375    -118.291664]]]\n[[9.13684685e-05]]\n[[202219]]\n[[[  38.5   -119.625]]]\n[[0.00035749]]\n[[144646]]\n[[[  36.333332 -118.625   ]]]\n[[9.7935995e-05]]\n[[213680]]\n[[[  38.916668 -120.375   ]]]\n[[0.00018052]]\n[[234637]]\n[[[  39.666668 -120.625   ]]]\n[[0.00020109]]\n[[174334]]\n[[[  37.458332 -118.75    ]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[0.00035973]]\n[[279150]]\n[[[  41.208332 -122.791664]]]\n[[0.00010902]]\n[[238201]]\n[[[  39.791668 -120.875   ]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[0.00035973]]\n[[279150]]\n[[[  41.208332 -122.791664]]]\n[[0.0002774]]\n[[279156]]\n[[[  41.208332 -122.541664]]]\n[[9.13684685e-05]]\n[[202219]]\n[[[  38.5   -119.625]]]\n[[0.00035973]]\n[[279150]]\n[[[  41.208332 -122.791664]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[0.0002125]]\n[[202215]]\n[[[  38.5      -119.791664]]]\n[[0.0002774]]\n[[279156]]\n[[[  41.208332 -122.541664]]]\n[[0.00027356]]\n[[196529]]\n[[[  38.291668 -119.625   ]]]\n[[0.0002125]]\n[[202215]]\n[[[  38.5      -119.791664]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[0.00010902]]\n[[238201]]\n[[[  39.791668 -120.875   ]]]\n[[0.00034271]]\n[[166626]]\n[[[  37.166668 -118.541664]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[0.00021444]]\n[[166610]]\n[[[  37.166668 -119.208336]]]\n[[0.00010017]]\n[[184265]]\n[[[  37.833332 -119.458336]]]\n[[0.00013865]]\n[[185376]]\n[[[  37.875    -119.333336]]]\n[[0.00038687]]\n[[167717]]\n[[[  37.208332 -118.958336]]]\n[[0.00031303]]\n[[153453]]\n[[[  36.666668 -118.416664]]]\n[[0.00019106]]\n[[172122]]\n[[[  37.375    -118.916664]]]\n[[0.00022016]]\n[[189830]]\n[[[  38.041668 -119.291664]]]\n[[9.7935995e-05]]\n[[213680]]\n[[[  38.916668 -120.375   ]]]\n[[4.44927463e-05]]\n[[213684]]\n[[[  38.916668 -120.208336]]]\n[[0.00025795]]\n[[185368]]\n[[[  37.875    -119.666664]]]\n[[0.00018855]]\n[[144647]]\n[[[  36.333332 -118.583336]]]\n[[0.00013633]]\n[[163319]]\n[[[  37.041668 -118.916664]]]\n[[0.00022181]]\n[[324594]]\n[[[  42.791668 -121.958336]]]\n[[0.00045162]]\n[[185710]]\n[[[  37.875    -105.416664]]]\n[[0.00025435]]\n[[429279]]\n[[[  46.916668 -110.875   ]]]\n[[0.00021788]]\n[[322295]]\n[[[  42.708332 -120.791664]]]\n[[0.00026951]]\n[[462456]]\n[[[  48.708332 -121.916664]]]\n[[0.00026125]]\n[[411879]]\n[[[  46.166668 -121.916664]]]\n[[0.00032815]]\n[[292970]]\n[[[  41.666668 -111.416664]]]\n[[0.00031911]]\n[[237369]]\n[[[  39.75     -105.916664]]]\n[[0.00025279]]\n[[275892]]\n[[[  41.083332 -106.958336]]]\n[[0.00040204]]\n[[388480]]\n[[[  45.166668 -115.958336]]]\n[[0.00014205]]\n[[136228]]\n[[[  36.       -106.541664]]]\n[[0.00041858]]\n[[256517]]\n[[[  40.416668 -106.625   ]]]\n[[0.0003979]]\n[[256536]]\n[[[  40.416668 -105.833336]]]\n[[0.00019507]]\n[[260145]]\n[[[  40.541668 -105.875   ]]]\n[[0.00033677]]\n[[268603]]\n[[[  40.833332 -106.75    ]]]\n[[0.00030705]]\n[[71813]]\n[[[  33.375    -107.833336]]]\n[[0.00039466]]\n[[260006]]\n[[[  40.541668 -111.666664]]]\n[[0.00035358]]\n[[232605]]\n[[[  39.583332 -106.5     ]]]\n[[0.00010963]]\n[[447727]]\n[[[  47.875    -117.083336]]]\n[[0.00035303]]\n[[336197]]\n[[[  43.208332 -122.125   ]]]\n[[0.00042276]]\n[[284429]]\n[[[  41.375    -106.208336]]]\n[[0.00042276]]\n[[284429]]\n[[[  41.375    -106.208336]]]\n[[0.00030705]]\n[[71813]]\n[[[  33.375    -107.833336]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[9.13684685e-05]]\n[[202219]]\n[[[  38.5   -119.625]]]\n[[0.00022309]]\n[[466617]]\n[[[  48.958332 -115.958336]]]\n[[0.00041662]]\n[[270934]]\n[[[  40.916668 -111.833336]]]\n[[0.00020189]]\n[[173518]]\n[[[  37.416668 -106.625   ]]]\n[[0.00041858]]\n[[256517]]\n[[[  40.416668 -106.625   ]]]\n[[0.00030302]]\n[[176687]]\n[[[  37.541668 -113.041664]]]\n[[0.00030302]]\n[[176687]]\n[[[  37.541668 -113.041664]]]\n[[3.15345512e-05]]\n[[207931]]\n[[[  38.708332 -120.041664]]]\n[[0.00030815]]\n[[436457]]\n[[[  47.291668 -121.333336]]]\n[[0.00022181]]\n[[324594]]\n[[[  42.791668 -121.958336]]]\n[[0.00035873]]\n[[413974]]\n[[[  46.25  -117.375]]]\n[[0.00026204]]\n[[346610]]\n[[[  43.583332 -111.208336]]]\n[[0.0003001]]\n[[374050]]\n[[[  44.625    -122.208336]]]\n[[0.00029972]]\n[[432364]]\n[[[  47.083332 -121.583336]]]\n[[0.00032815]]\n[[292970]]\n[[[  41.666668 -111.416664]]]\n[[0.00029815]]\n[[187786]]\n[[[  37.958332 -111.833336]]]\n[[0.0001205]]\n[[208256]]\n[[[  38.708332 -106.416664]]]\n[[0.00013927]]\n[[224389]]\n[[[  39.291668 -106.541664]]]\n[[0.00026125]]\n[[411879]]\n[[[  46.166668 -121.916664]]]\n[[0.00025921]]\n[[389637]]\n[[[  45.208332 -110.25    ]]]\n[[0.00012545]]\n[[444361]]\n[[[  47.708332 -123.458336]]]\n[[0.00026125]]\n[[411879]]\n[[[  46.166668 -121.916664]]]\n[[0.00031334]]\n[[143618]]\n[[[  36.291668 -115.666664]]]\n[[0.00031334]]\n[[143618]]\n[[[  36.291668 -115.666664]]]\n[[0.00032815]]\n[[292970]]\n[[[  41.666668 -111.416664]]]\n[[0.00032815]]\n[[292970]]\n[[[  41.666668 -111.416664]]]\n[[0.00032815]]\n[[292970]]\n[[[  41.666668 -111.416664]]]\n[[0.00025279]]\n[[275892]]\n[[[  41.083332 -106.958336]]]\n[[0.00035358]]\n[[232605]]\n[[[  39.583332 -106.5     ]]]\n[[0.00026446]]\n[[109297]]\n[[[  34.958332 -111.5     ]]]\n[[0.00034654]]\n[[256538]]\n[[[  40.416668 -105.75    ]]]\n[[0.00034654]]\n[[256538]]\n[[[  40.416668 -105.75    ]]]\n[[0.00029183]]\n[[185681]]\n[[[  37.875 -106.625]]]\n[[0.00038069]]\n[[78266]]\n[[[  33.666668 -109.291664]]]\n[[0.00016855]]\n[[202538]]\n[[[  38.5      -106.333336]]]\n[[0.00030129]]\n[[416899]]\n[[[  46.375    -121.083336]]]\n[[0.00012986]]\n[[373281]]\n[[[  44.583332 -107.208336]]]\n[[3.87134852e-05]]\n[[362136]]\n[[[  44.166668 -107.125   ]]]\n[[0.00015419]]\n[[330682]]\n[[[  43.   -109.75]]]\n[[0.00023674]]\n[[319102]]\n[[[  42.583332 -108.833336]]]\n[[8.83810871e-05]]\n[[267286]]\n[[[  40.791668 -110.875   ]]]\n[[0.00027775]]\n[[296540]]\n[[[  41.791668 -116.041664]]]\n[[0.00034885]]\n[[116759]]\n[[[  35.25 -108.25]]]\n[[0.00034215]]\n[[107190]]\n[[[  34.875 -111.625]]]\n[[0.0001517]]\n[[104042]]\n[[[  34.75     -111.416664]]]\n[[0.00013821]]\n[[216303]]\n[[[  39.   -106.75]]]\n[[0.00016356]]\n[[174581]]\n[[[  37.458332 -108.458336]]]\n[[0.00033874]]\n[[457740]]\n[[[  48.416668 -113.916664]]]\n[[0.00024296]]\n[[230122]]\n[[[  39.5      -111.708336]]]\n[[0.00032894]]\n[[232381]]\n[[[  39.583332 -115.833336]]]\n[[0.00022015]]\n[[177796]]\n[[[  37.583332 -112.916664]]]\n[[0.00029815]]\n[[187786]]\n[[[  37.958332 -111.833336]]]\n[[0.00032894]]\n[[232381]]\n[[[  39.583332 -115.833336]]]\n[[0.00032894]]\n[[232381]]\n[[[  39.583332 -115.833336]]]\n[[0.00022015]]\n[[177796]]\n[[[  37.583332 -112.916664]]]\n[[0.00032894]]\n[[232381]]\n[[[  39.583332 -115.833336]]]\n[[0.00035619]]\n[[202393]]\n[[[  38.5   -112.375]]]\n[[0.00028668]]\n[[462486]]\n[[[  48.708332 -120.666664]]]\n[[0.00035391]]\n[[177932]]\n[[[  37.583332 -107.25    ]]]\n[[0.00019507]]\n[[260145]]\n[[[  40.541668 -105.875   ]]]\n[[0.00012476]]\n[[269738]]\n[[[  40.875    -110.541664]]]\n[[0.0003001]]\n[[374050]]\n[[[  44.625    -122.208336]]]\n[[0.0003001]]\n[[374050]]\n[[[  44.625    -122.208336]]]\n[[0.00032386]]\n[[148270]]\n[[[  36.458332 -105.208336]]]\n[[0.00032386]]\n[[148270]]\n[[[  36.458332 -105.208336]]]\n[[0.00032386]]\n[[148270]]\n[[[  36.458332 -105.208336]]]\n[[0.00039874]]\n[[459718]]\n[[[  48.541668 -120.75    ]]]\n[[0.00028356]]\n[[162526]]\n[[[  37.       -106.291664]]]\n[[0.00031999]]\n[[219632]]\n[[[  39.125    -111.458336]]]\n[[0.00014601]]\n[[183432]]\n[[[  37.791668 -108.166664]]]\n[[0.00031911]]\n[[237369]]\n[[[  39.75     -105.916664]]]\n[[0.00026176]]\n[[250509]]\n[[[  40.208332 -105.583336]]]\n[[0.00019668]]\n[[266072]]\n[[[  40.75  -110.625]]]\n[[0.00034733]]\n[[255062]]\n[[[  40.375 -116.875]]]\n[[9.15488263e-05]]\n[[283188]]\n[[[  41.333332 -106.375   ]]]\n[[0.00022015]]\n[[177796]]\n[[[  37.583332 -112.916664]]]\n[[0.00017289]]\n[[258783]]\n[[[  40.5   -112.625]]]\n[[0.00022445]]\n[[185613]]\n[[[  37.875    -109.458336]]]\n[[0.00025986]]\n[[240815]]\n[[[  39.875 -111.25 ]]]\n[[0.00021975]]\n[[225438]]\n[[[  39.333332 -111.5     ]]]\n[[0.00012938]]\n[[252783]]\n[[[  40.291668 -111.25    ]]]\n[[0.00031999]]\n[[219632]]\n[[[  39.125    -111.458336]]]\n[[0.00020894]]\n[[263633]]\n[[[  40.666668 -110.958336]]]\n[[0.00021975]]\n[[225438]]\n[[[  39.333332 -111.5     ]]]\n[[0.00021975]]\n[[225438]]\n[[[  39.333332 -111.5     ]]]\n[[0.00031999]]\n[[219632]]\n[[[  39.125    -111.458336]]]\n[[0.00030129]]\n[[416899]]\n[[[  46.375    -121.083336]]]\n[[0.00026128]]\n[[234882]]\n[[[  39.666668 -110.416664]]]\n[[0.00014923]]\n[[213691]]\n[[[  38.916668 -119.916664]]]\n[[0.0003611]]\n[[269634]]\n[[[  40.875    -115.208336]]]\n[[0.00030221]]\n[[272081]]\n[[[  40.958332 -115.083336]]]\n[[0.00017289]]\n[[258783]]\n[[[  40.5   -112.625]]]\n[[0.00022015]]\n[[177796]]\n[[[  37.583332 -112.916664]]]\n[[0.00029815]]\n[[187786]]\n[[[  37.958332 -111.833336]]]\n[[0.00026176]]\n[[250509]]\n[[[  40.208332 -105.583336]]]\n[[0.00025279]]\n[[275892]]\n[[[  41.083332 -106.958336]]]\n[[0.00020455]]\n[[139488]]\n[[[  36.125    -105.541664]]]\n[[0.00010963]]\n[[447727]]\n[[[  47.875    -117.083336]]]\n[[0.00012719]]\n[[426421]]\n[[[  46.791668 -121.75    ]]]\n[[0.00019681]]\n[[302446]]\n[[[  42.       -120.166664]]]\n[[0.00028668]]\n[[462486]]\n[[[  48.708332 -120.666664]]]\n[[0.00029815]]\n[[187786]]\n[[[  37.958332 -111.833336]]]\n[[0.00027775]]\n[[296540]]\n[[[  41.791668 -116.041664]]]\n[[0.00026125]]\n[[411879]]\n[[[  46.166668 -121.916664]]]\n[[0.00029815]]\n[[187786]]\n[[[  37.958332 -111.833336]]]\n[[0.00036997]]\n[[84911]]\n[[[  33.958332 -109.5     ]]]\n[[7.66642558e-05]]\n[[292876]]\n[[[  41.666668 -115.333336]]]\n[[0.00010902]]\n[[238201]]\n[[[  39.791668 -120.875   ]]]\n[[0.00035619]]\n[[202393]]\n[[[  38.5   -112.375]]]\n[[0.00024296]]\n[[230122]]\n[[[  39.5      -111.708336]]]\n[[0.00011195]]\n[[400403]]\n[[[  45.666668 -113.958336]]]\n[[0.00033222]]\n[[369791]]\n[[[  44.458332 -113.      ]]]\nfinished\n",
  "history_begin_time" : 1677787291921,
  "history_end_time" : 1677788035560,
  "history_notes" : null,
  "history_process" : "gkhtc0",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "mv9fbtply9r",
  "history_input" : "from sklearn.ensemble import RandomForestRegressor\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.metrics import mean_squared_error\nfrom sklearn import metrics \nfrom sklearn import tree\nimport joblib\nimport os\nfrom pathlib import Path\nimport json\nimport geopandas as gpd\nimport geojson\nimport os.path\nimport math\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.model_selection import RandomizedSearchCV\nfrom base_hole import BaseHole\nfrom sklearn.model_selection import train_test_split\nfrom datetime import datetime\nfrom model_creation_rf import RandomForestHole\nfrom sklearn.ensemble import ExtraTreesRegressor\n\nclass ExtraTreeHole(RandomForestHole):\n\n  def get_model(self):\n    \"\"\"\n    rfc_pipeline = Pipeline(steps = [\n      ('data_scaling', StandardScaler()),\n      ('model', RandomForestRegressor(max_depth = 15,\n                                       min_samples_leaf = 0.004,\n                                       min_samples_split = 0.008,\n                                       n_estimators = 25))])\n    #return rfc_pipeline\n  \t\"\"\"\n    etmodel = ExtraTreesRegressor(bootstrap=False, '''ccp_alpha=0.0, '''criterion='Squared_error',\n                    max_depth=None, max_features='auto', max_leaf_nodes=None,\n                    max_samples=None, min_impurity_decrease=0.0,\n                    #min_impurity_split=None, \n                    min_samples_leaf=1,\n                    min_samples_split=2, min_weight_fraction_leaf=0.0,\n                    n_estimators=100, n_jobs=-1, oob_score=False,\n                    random_state=123, verbose=0, warm_start=False)\n    return etmodel\n\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/mv9fbtply9r/model_creation_et.py\", line 41\n    etmodel = ExtraTreesRegressor(bootstrap=False, '''ccp_alpha=0.0, '''criterion='Squared_error',\n                                                                        ^\nSyntaxError: positional argument follows keyword argument\n",
  "history_begin_time" : 1677787299491,
  "history_end_time" : 1677787302314,
  "history_notes" : null,
  "history_process" : "lbd6cp",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
}]
