[{
  "history_id" : "hmdzw6kp8gy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696863953325,
  "history_end_time" : 1696863953325,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wzfpo8w0sqv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696862402972,
  "history_end_time" : 1696862402972,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hj9c12fe9u9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696832263688,
  "history_end_time" : 1696832263688,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eketj5ib8ww",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696831867387,
  "history_end_time" : 1696831867387,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jf1x0svsjpz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696830174407,
  "history_end_time" : 1696830174407,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qlkz9hb9pfo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696787541964,
  "history_end_time" : 1696787541964,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "935kclucv9u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696786838251,
  "history_end_time" : 1696786838251,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9w1ch1cf6rh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696771780944,
  "history_end_time" : 1696771780944,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4vqp7j1kdva",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696602943954,
  "history_end_time" : 1696602943954,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jvb1j58i1ot",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696432484346,
  "history_end_time" : 1696432484346,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oa98hd9idpx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696432299770,
  "history_end_time" : 1696432482236,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "h5mq2dqpbwl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827991103,
  "history_end_time" : 1695827991103,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mn05opgppjq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827889182,
  "history_end_time" : 1695827965228,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jfuah62xfb7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827855649,
  "history_end_time" : 1695827867013,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ehrdqzcx5si",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695696616122,
  "history_end_time" : 1695696616122,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "62y8gsr27t1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695694257333,
  "history_end_time" : 1695694257333,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hcwo38g74uc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695693585752,
  "history_end_time" : 1695693585752,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "di7kypj60d6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695693149407,
  "history_end_time" : 1695693149407,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hh84we56aj9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695580915851,
  "history_end_time" : 1695580915851,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n9fhjxo2jw8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695576291666,
  "history_end_time" : 1695576291666,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "34579qanjuo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695575931029,
  "history_end_time" : 1695575931029,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fy0fgxrai1j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535769217,
  "history_end_time" : 1695535769217,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xwwe7axptvu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535478712,
  "history_end_time" : 1695535478712,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gqxr8j0gkwg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535214028,
  "history_end_time" : 1695535214028,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r1sutpub6j0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695534943593,
  "history_end_time" : 1695534943593,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ui72lfzf0ne",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695534671832,
  "history_end_time" : 1695534671832,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vijmab6ttn1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695533024170,
  "history_end_time" : 1695533024170,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r5r58vz2rj7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695529187871,
  "history_end_time" : 1695529187871,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tsszti9b21o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695528505199,
  "history_end_time" : 1695528505199,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "habn0wxqixi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695515862500,
  "history_end_time" : 1695515862500,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bdbuwo7dbjm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695506423859,
  "history_end_time" : 1695506423859,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "55g77slu3gk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695418741347,
  "history_end_time" : 1695418741347,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d8wpqsf2zxy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417619683,
  "history_end_time" : 1695417619683,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2720h826z4d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417171285,
  "history_end_time" : 1695417171285,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "se9bdmjpoys",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417052736,
  "history_end_time" : 1695417052736,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r5d2efyxyho",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695416916060,
  "history_end_time" : 1695416916060,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mo37rols3sz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695106488985,
  "history_end_time" : 1695106488985,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l9523vb93u6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695106316221,
  "history_end_time" : 1695106316221,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "du6s84551zg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695054045033,
  "history_end_time" : 1695054045033,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ntd75pi1l8a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695054019800,
  "history_end_time" : 1695054033335,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "w02iz6v11co",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053979915,
  "history_end_time" : 1695054019278,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "3h3eh910e0q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053793459,
  "history_end_time" : 1695053793459,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x0tzss8oy4j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053733449,
  "history_end_time" : 1695053733449,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fk2ahzq4zce",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694971144848,
  "history_end_time" : 1694972839691,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "cs6xt3hvwdx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970707933,
  "history_end_time" : 1694970707933,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kmqtbzvir2v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970594770,
  "history_end_time" : 1694970594770,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2gzhco9mqk6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970131651,
  "history_end_time" : 1694970131651,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9860jirtorf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694969350133,
  "history_end_time" : 1694969350133,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f5ttcz77q28",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694905307715,
  "history_end_time" : 1694905307715,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w8ebe5677m3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694897887147,
  "history_end_time" : 1694897887147,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0gdq5m4e2lx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531335830,
  "history_end_time" : 1691531335830,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "t2od0rbp32r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531292823,
  "history_end_time" : 1691531292823,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "r1izqxawgnb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531254765,
  "history_end_time" : 1691531284904,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "0lg136txjr4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531163937,
  "history_end_time" : 1691531163937,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "9j3eh7btzzb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531120977,
  "history_end_time" : 1691531120977,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "n2llihafz8z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531061012,
  "history_end_time" : 1691531061012,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "czs4sp8qx9f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530848383,
  "history_end_time" : 1691530848383,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "7iwtno4ulqa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530717719,
  "history_end_time" : 1691530721108,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "2ezhwe1m9oe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530690231,
  "history_end_time" : 1691530716753,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "b36z9ik89cn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530621132,
  "history_end_time" : 1691530622442,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "njp9llmf8or",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530617303,
  "history_end_time" : 1691530617303,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "fc4euxfgpwg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530599875,
  "history_end_time" : 1691530614288,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "8xhuTrXRNd4e",
  "history_input" : "import dask.dataframe as dd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'elevation',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness', 'Snow Water Equivalent (in) Start of Day Values']\n\n# Read the CSV file into a Dask DataFrame\ndf = dd.read_csv(input_csv, usecols=selected_columns)\n\n# Rename the column as you intended\ndf = df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"})\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\n# Write the selected columns to a new CSV file\ndf.to_csv(output_csv, index=False, single_file=True)  # single_file=True ",
  "history_output" : "",
  "history_begin_time" : 1690614391061,
  "history_end_time" : 1690616858210,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "G1SXwB6J5JYJ",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'elevation',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness', 'Snow Water Equivalent (in) Start of Day Values',]\n\n# Read the entire CSV file into a DataFrame\nresult_df = pd.read_csv(input_csv, usecols=selected_columns)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\n# Rename the column as you intended\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/G1SXwB6J5JYJ/training_feature_selection.py\", line 14, in <module>\n    result_df = pd.read_csv(input_csv, usecols=selected_columns)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 211, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 331, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 950, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 611, in _read\n    return parser.read(nrows)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1795, in read\n    df = DataFrame(col_dict, columns=columns, index=index)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/core/frame.py\", line 664, in __init__\n    mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/core/internals/construction.py\", line 493, in dict_to_mgr\n    return arrays_to_mgr(arrays, columns, index, dtype=dtype, typ=typ, consolidate=copy)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/core/internals/construction.py\", line 154, in arrays_to_mgr\n    return create_block_manager_from_column_arrays(\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/core/internals/managers.py\", line 2199, in create_block_manager_from_column_arrays\n    blocks = _form_blocks(arrays, consolidate)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/core/internals/managers.py\", line 2273, in _form_blocks\n    values, placement = _stack_arrays(list(tup_block), dtype)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/core/internals/managers.py\", line 2312, in _stack_arrays\n    stacked = np.empty(shape, dtype=dtype)\nnumpy.core._exceptions._ArrayMemoryError: Unable to allocate 19.9 GiB for an array with shape (17, 157282561) and data type float64\n",
  "history_begin_time" : 1690612027372,
  "history_end_time" : 1690613280362,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Q125aDycSfsf",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\n\n# Read the entire CSV file into a DataFrame\nresult_df = pd.read_csv(input_csv, usecols=selected_columns)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\n# Rename the column as you intended\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "",
  "history_begin_time" : 1690593484735,
  "history_end_time" : 1690595986928,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "XP8MIHe87Rqd",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 10000000\n\n# Read the CSV file in chunks and extract the selected columns\nfor i, chunk in enumerate(pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size)):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n    \n    # Save to disk after each chunk\n    output_csv_chunk = f'/home/chetana/gridmet_test_run/merge_chunks/model_training_cleaned_chunk_{i}.csv'\n    chunk.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n    chunk.to_csv(output_csv_chunk, index=False)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n\n# Write the selected columns to the final CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/XP8MIHe87Rqd/training_feature_selection.py\", line 16, in <module>\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\nNameError: name 'result_df' is not defined\n",
  "history_begin_time" : 1690593372602,
  "history_end_time" : 1690593399100,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Bbhw8cGNFYXZ",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 10000000\n\n# Read the CSV file in chunks and extract the selected columns\nfor i, chunk in enumerate(pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size)):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n    \n    # Save to disk after each chunk\n    output_csv_chunk = f'/home/chetana/gridmet_test_run/model_training_cleaned_chunk_{i}.csv'\n    chunk.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n    chunk.to_csv(output_csv_chunk, index=False)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n\n# Write the selected columns to the final CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/Bbhw8cGNFYXZ/training_feature_selection.py\", line 16, in <module>\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\nNameError: name 'result_df' is not defined\n",
  "history_begin_time" : 1690593324226,
  "history_end_time" : 1690593350762,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "DuLilhGJVf8B",
  "history_input" : "import pandas as pd\nfrom tqdm import tqdm\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 1000000\n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Get the total number of chunks for tqdm progress bar\ntotal_chunks = sum(1 for _ in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size))\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in tqdm(pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size), total=total_chunks, desc='Processing'):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\n# Rename the column as you intended\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "",
  "history_begin_time" : 1690593124127,
  "history_end_time" : 1690593324233,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "ROLp9mLh345X",
  "history_input" : "import pandas as pd\nfrom tqdm import tqdm\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 1000000\n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Get the total number of chunks for tqdm progress bar\ntotal_chunks = sum(1 for _ in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size))\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in tqdm(pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size), total=total_chunks, desc='Processing'):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\n# Rename the column as you intended\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"}, inplace=True)\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : null,
  "history_begin_time" : 1690593116503,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : null
},{
  "history_id" : "yBGn505I3ghu",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 10000000\n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"})\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "",
  "history_begin_time" : 1690592504314,
  "history_end_time" : 1690593116510,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "h5X9zEHF3ycK",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 1000000\n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"})\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "",
  "history_begin_time" : 1690592407034,
  "history_end_time" : 1690592504319,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "oIQ8ecOFPALN",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 10000000 \n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"})\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "",
  "history_begin_time" : 1690592321549,
  "history_end_time" : 1690592407039,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "OCeI78fMzHh7",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northness']\nchunk_size = 10000  # 10,000 rows per chunk\n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"})\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "",
  "history_begin_time" : 1690582485886,
  "history_end_time" : 1690592321554,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "zhMCVx9wALJj",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = '/home/chetana/gridmet_test_run/model_training_data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northnes']\nchunk_size = 10000  # 10,000 rows per chunk\n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"})\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/zhMCVx9wALJj/training_feature_selection.py\", line 18, in <module>\n    for chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 211, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 331, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 950, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 605, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1442, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1753, in _make_engine\n    return mapping[engine](f, **self.options)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 135, in __init__\n    self._validate_usecols_names(usecols, self.orig_names)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 917, in _validate_usecols_names\n    raise ValueError(\nValueError: Usecols do not match columns, columns expected but not found: ['northnes']\n",
  "history_begin_time" : 1690582471265,
  "history_end_time" : 1690582472764,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "BNFjgl2bpP5Z",
  "history_input" : "import pandas as pd\n\n# Replace 'data.csv' with the path to your 50GB CSV file\ninput_csv = 'data.csv'\n\n# List of columns you want to extract\nselected_columns = ['date', 'lat', 'lon', 'etr', 'pr', 'rmax',\n                    'rmin', 'tmmn', 'tmmx', 'vpd', 'vs', \n                    'Snow Water Equivalent (in) Start of Day Values',\n                    'slope', 'curvature', 'aspect', 'eastness',\n                    'northnes']\nchunk_size = 10000  # 10,000 rows per chunk\n\n# Create an empty DataFrame to store the result\nresult_df = pd.DataFrame()\n\n# Read the CSV file in chunks and extract the selected columns\nfor chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n    result_df = pd.concat([result_df, chunk], ignore_index=True)\n\n# Replace 'output.csv' with the desired output file name\noutput_csv = '/home/chetana/gridmet_test_run/model_training_cleaned.csv'\n\nresult_df.rename(columns={\"Snow Water Equivalent (in) Start of Day Values\": \"swe_value\"})\n\n# Write the selected columns to a new CSV file\nresult_df.to_csv(output_csv, index=False)\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/BNFjgl2bpP5Z/training_feature_selection.py\", line 18, in <module>\n    for chunk in pd.read_csv(input_csv, usecols=selected_columns, chunksize=chunk_size):\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 211, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 331, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 950, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 605, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1442, in __init__\n    self._engine = self._make_engine(f, self.engine)\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1735, in _make_engine\n    self.handles = get_handle(\n  File \"/home/chetana/gridmet_test_run/pycrate/lib/python3.9/site-packages/pandas/io/common.py\", line 856, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: 'data.csv'\n",
  "history_begin_time" : 1690582445013,
  "history_end_time" : 1690582449713,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : null,
  "indicator" : "Done"
},]
