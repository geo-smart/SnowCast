[{
  "history_id" : "yds5iytjom3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696863953149,
  "history_end_time" : 1696863953149,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zs3890gwanx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696862402913,
  "history_end_time" : 1696862402913,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0nd2ve1kiy1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696832263655,
  "history_end_time" : 1696832263655,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d9e8nu04ygx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696831867357,
  "history_end_time" : 1696831867357,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8my8fnow536",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696830174308,
  "history_end_time" : 1696830174308,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ugkcd0a012v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696787541867,
  "history_end_time" : 1696787541867,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kblu52d3z8t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696786838172,
  "history_end_time" : 1696786838172,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xntcqz8rdl5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696771780824,
  "history_end_time" : 1696771780824,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p2w6j4fvukh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696602943925,
  "history_end_time" : 1696602943925,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jdhaguyu588",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696432484312,
  "history_end_time" : 1696432484312,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1mwmciipvhy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696432299744,
  "history_end_time" : 1696432482231,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xwgub0w4kgk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827991075,
  "history_end_time" : 1695827991075,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "320frnmlplk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827889167,
  "history_end_time" : 1695827964213,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "urnc8d391jx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827855634,
  "history_end_time" : 1695827867004,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "91h8qz5q69n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695696616106,
  "history_end_time" : 1695696616106,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ugq68tukhqn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695694257318,
  "history_end_time" : 1695694257318,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "97xrb1xo8o8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695693585737,
  "history_end_time" : 1695693585737,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q9eer703rh3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695693149352,
  "history_end_time" : 1695693149352,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5z0vkf99ain",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695580915836,
  "history_end_time" : 1695580915836,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "88p8nspoopa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695576291644,
  "history_end_time" : 1695576291644,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6dovqrzsem3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695575930999,
  "history_end_time" : 1695575930999,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b9t4x9r3bix",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535769201,
  "history_end_time" : 1695535769201,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fc05upfs2t5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535478676,
  "history_end_time" : 1695535478676,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nqwy9nwdpub",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535214015,
  "history_end_time" : 1695535214015,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g0holw9vrmw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695534943578,
  "history_end_time" : 1695534943578,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wj61lx6n2nq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695534671817,
  "history_end_time" : 1695534671817,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i7tgizoh315",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695533024085,
  "history_end_time" : 1695533024085,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s4jbyg2xd1o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695529187855,
  "history_end_time" : 1695529187855,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kygny0ohd1a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695528505168,
  "history_end_time" : 1695528505168,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t8cf7yus57p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695515862381,
  "history_end_time" : 1695515862381,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "90365ca5qqo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695506423831,
  "history_end_time" : 1695506423831,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wys6yx6y1nn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695418741263,
  "history_end_time" : 1695418741263,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qi6mdcs77yv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417619667,
  "history_end_time" : 1695417619667,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4xh02zddawp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417171270,
  "history_end_time" : 1695417171270,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ekztl5yf447",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417052724,
  "history_end_time" : 1695417052724,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bd01i6wm1gu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695416915999,
  "history_end_time" : 1695416915999,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k7hug38btyd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695106488967,
  "history_end_time" : 1695106488967,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pqr6k4rxcfs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695106316186,
  "history_end_time" : 1695106316186,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "drnlh69268x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695054045017,
  "history_end_time" : 1695054045017,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "inhgayyfi4o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695054019750,
  "history_end_time" : 1695054032321,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1axq9g6krjn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053979881,
  "history_end_time" : 1695054019272,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wbjt8a1jqu8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053793377,
  "history_end_time" : 1695053793377,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "agbsoqyhzzh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053733390,
  "history_end_time" : 1695053733390,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kw8vz8eewdf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694971144798,
  "history_end_time" : 1694972839685,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "iqm1gasvw7o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970707915,
  "history_end_time" : 1694970707915,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ri8s47bkhex",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970594752,
  "history_end_time" : 1694970594752,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4zdas6f7r7w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970131502,
  "history_end_time" : 1694970131502,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o9oucxoht51",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694969349991,
  "history_end_time" : 1694969349991,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xrpubshxna0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694905307650,
  "history_end_time" : 1694905307650,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ptjm9d7pa3y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694897887118,
  "history_end_time" : 1694897887118,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a5ndo8kpnmb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531335746,
  "history_end_time" : 1691531335746,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "ipam91tf3n7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531292633,
  "history_end_time" : 1691531292633,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "lwizzqljvg8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531254574,
  "history_end_time" : 1691531284897,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "rjoquwzp9jk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531163687,
  "history_end_time" : 1691531163687,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "t9kc41j4moq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531120792,
  "history_end_time" : 1691531120792,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "6he78k30bay",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531060807,
  "history_end_time" : 1691531060807,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "wqeu3e6hbi6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530848265,
  "history_end_time" : 1691530848265,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "c49svedtlrp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530717632,
  "history_end_time" : 1691530721103,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "ji9hptun3la",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530690072,
  "history_end_time" : 1691530716746,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "ino2inj8aae",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530620968,
  "history_end_time" : 1691530622436,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "j8xfq7trv74",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530617109,
  "history_end_time" : 1691530617109,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "i1pxs9t8rag",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530599695,
  "history_end_time" : 1691530614281,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "hx26lqhxyfe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689632033810,
  "history_end_time" : 1689632033810,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fy4dgv9awg0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689631636446,
  "history_end_time" : 1689631636446,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "owdjv0n145f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689135058017,
  "history_end_time" : 1689135058017,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ko7af1lvt4l",
  "history_input" : "import math\nimport json\nimport requests\nimport pandas as pd\n\n\ndef read_json_file(file_path):\n    with open(file_path, 'r', encoding='utf-8-sig') as json_file:\n        data = json.load(json_file)\n    return data\n\n\ndef haversine(lat1, lon1, lat2, lon2):\n    lat1, lon1, lat2, lon2 = map(math.radians, [lat1, lon1, lat2, lon2])\n    d_lat = lat2 - lat1\n    d_long = lon2 - lon1\n    a = math.sin(d_lat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(d_long / 2) ** 2\n    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n    distance = 6371 * c  # Earth's radius in kilometers\n    return distance\n\n\ndef find_nearest_location(locations, target_lat, target_lon):\n    n_location = None\n    min_distance = float('inf')\n    for location in locations:\n        lat = location['location']['lat']\n        lon = location['location']['lng']\n        distance = haversine(lat, lon, target_lat, target_lon)\n        if distance < min_distance:\n            min_distance = distance\n            n_location = location\n    return n_location\n\n\ndef csv_to_json(csv_text):\n    lines = csv_text.splitlines()\n    header = lines[0]\n    field_names = header.split(',')\n    json_list = []\n    for line in lines[1:]:\n        values = line.split(',')\n        row_dict = {}\n        for i, field_name in enumerate(field_names):\n            row_dict[field_name] = values[i]\n        json_list.append(row_dict)\n    json_string = json.dumps(json_list)\n    return json_string\n\n\ndef remove_commented_lines(text):\n    lines = text.split(\"\\n\")  # Split the text into lines\n    cleaned_lines = []\n\n    for line in lines:\n        if not line.startswith(\"#\"):  # Check if the line starts with \"#\"\n            cleaned_lines.append(line)\n\n    cleaned_text = \"\\n\".join(cleaned_lines)  # Join the remaining lines\n\n    return cleaned_text\n\n\ncsv_file = 'snotel.csv'\nstart_date = \"2022-01-01\"\nend_date = \"2023-12-12\"\n\nstation_mapping = pd.read_csv('station_cell_mapping.csv')\ndf = pd.DataFrame(columns=['Date', 'Snow Water Equivalent (in) Start of Day Values',\n                           'Change In Snow Water Equivalent (in)',\n                           'Snow Depth (in) Start of Day Values',\n                           'Change In Snow Depth (in)',\n                           'Air Temperature Observed (degF) Start of Day Values',\n                           'station_name',\n                           'station_triplet',\n                           'station_elevation',\n                           'station_lat',\n                           'station_long',\n                           'mapping_station_id',\n                           'mapping_cell_id']\n                  )\n\nfor index, row in station_mapping.iterrows():\n    station_locations = read_json_file('snotelStations.json')\n    nearest_location = find_nearest_location(station_locations, 41.993149, -120.1787155)\n\n    location_name = nearest_location['name']\n    location_triplet = nearest_location['triplet']\n    location_elevation = nearest_location['elevation']\n    location_station_lat = nearest_location['location']['lat']\n    location_station_long = nearest_location['location']['lng']\n\n    url = f\"https://wcc.sc.egov.usda.gov/reportGenerator/view_csv/\" \\\n          f\"customSingleStationReport/daily/{location_triplet}%7Cid%3D%22%22%7Cname/{start_date},{end_date}%2C0/\" \\\n          \"WTEQ%3A%3Avalue%2CWTEQ%3A%3Adelta%2CSNWD%3A%3Avalue%2CSNWD%3A%3Adelta%2CTOBS%3A%3Avalue\"\n\n    r = requests.get(url)\n    text = remove_commented_lines(r.text)\n    json_data = json.loads(csv_to_json(text))\n\n    for item in json_data:\n        item['station_name'] = location_name\n        item['station_triplet'] = location_triplet\n        item['station_elevation'] = location_elevation\n        item['station_lat'] = location_station_lat\n        item['station_long'] = location_station_long\n        item['mapping_station_id'] = row['station_id']\n        item['mapping_cell_id'] = row['cell_id']\n\n    with open(csv_file, 'a') as f:\n        for entry in json_data:\n            pd.DataFrame(entry, index=[0]).to_csv(f, header=True, index=False, lineterminator='\\n')",
  "history_output" : "  File \"/home/chetana/gw-workspace/ko7af1lvt4l/data_snotel_real_time.py\", line 52\n    lines = text.split(\"\n                        ^\nSyntaxError: EOL while scanning string literal\n",
  "history_begin_time" : 1688416902112,
  "history_end_time" : 1688416907377,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "bzotj0galio",
  "history_input" : "import math\nimport json\nimport requests\nimport pandas as pd\n\n\ndef read_json_file(file_path):\n    with open(file_path, 'r', encoding='utf-8-sig') as json_file:\n        data = json.load(json_file)\n    return data\n\n\ndef haversine(lat1, lon1, lat2, lon2):\n    lat1, lon1, lat2, lon2 = map(math.radians, [lat1, lon1, lat2, lon2])\n    d_lat = lat2 - lat1\n    d_long = lon2 - lon1\n    a = math.sin(d_lat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(d_long / 2) ** 2\n    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n    distance = 6371 * c  # Earth's radius in kilometers\n    return distance\n\n\ndef find_nearest_location(locations, target_lat, target_lon):\n    n_location = None\n    min_distance = float('inf')\n    for location in locations:\n        lat = location['location']['lat']\n        lon = location['location']['lng']\n        distance = haversine(lat, lon, target_lat, target_lon)\n        if distance < min_distance:\n            min_distance = distance\n            n_location = location\n    return n_location\n\n\ndef csv_to_json(csv_text):\n    lines = csv_text.splitlines()\n    header = lines[0]\n    field_names = header.split(',')\n    json_list = []\n    for line in lines[1:]:\n        values = line.split(',')\n        row_dict = {}\n        for i, field_name in enumerate(field_names):\n            row_dict[field_name] = values[i]\n        json_list.append(row_dict)\n    json_string = json.dumps(json_list)\n    return json_string\n\n\ndef remove_commented_lines(text):\n    lines = text.split(\"\\n\")  # Split the text into lines\n    cleaned_lines = []\n\n    for line in lines:\n        if not line.startswith(\"#\"):  # Check if the line starts with \"#\"\n            cleaned_lines.append(line)\n\n    cleaned_text = \"\\n\".join(cleaned_lines)  # Join the remaining lines\n\n    return cleaned_text\n\n\ncsv_file = 'snotel.csv'\nstart_date = \"2022-01-01\"\nend_date = \"2023-12-12\"\n\nstation_mapping = pd.read_csv('station_cell_mapping.csv')\ndf = pd.DataFrame(columns=['Date', 'Snow Water Equivalent (in) Start of Day Values',\n                           'Change In Snow Water Equivalent (in)',\n                           'Snow Depth (in) Start of Day Values',\n                           'Change In Snow Depth (in)',\n                           'Air Temperature Observed (degF) Start of Day Values',\n                           'station_name',\n                           'station_triplet',\n                           'station_elevation',\n                           'station_lat',\n                           'station_long',\n                           'mapping_station_id',\n                           'mapping_cell_id']\n                  )\n\nfor index, row in station_mapping.iterrows():\n    station_locations = read_json_file('snotelStations.json')\n    nearest_location = find_nearest_location(station_locations, 41.993149, -120.1787155)\n\n    location_name = nearest_location['name']\n    location_triplet = nearest_location['triplet']\n    location_elevation = nearest_location['elevation']\n    location_station_lat = nearest_location['location']['lat']\n    location_station_long = nearest_location['location']['lng']\n\n    url = f\"https://wcc.sc.egov.usda.gov/reportGenerator/view_csv/\" \\\n          f\"customSingleStationReport/daily/{location_triplet}%7Cid%3D%22%22%7Cname/{start_date},{end_date}%2C0/\" \\\n          \"WTEQ%3A%3Avalue%2CWTEQ%3A%3Adelta%2CSNWD%3A%3Avalue%2CSNWD%3A%3Adelta%2CTOBS%3A%3Avalue\"\n\n    r = requests.get(url)\n    text = remove_commented_lines(r.text)\n    json_data = json.loads(csv_to_json(text))\n\n    for item in json_data:\n        item['station_name'] = location_name\n        item['station_triplet'] = location_triplet\n        item['station_elevation'] = location_elevation\n        item['station_lat'] = location_station_lat\n        item['station_long'] = location_station_long\n        item['mapping_station_id'] = row['station_id']\n        item['mapping_cell_id'] = row['cell_id']\n\n    with open(csv_file, 'a') as f:\n        for entry in json_data:\n            pd.DataFrame(entry, index=[0]).to_csv(f, header=True, index=False, lineterminator='\\n')",
  "history_output" : "  File \"data_snotel_real_time.py\", line 52\n    lines = text.split(\"\n                       ^\nSyntaxError: EOL while scanning string literal\n",
  "history_begin_time" : 1688416837980,
  "history_end_time" : 1688416848468,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "wnmrr430f90",
  "history_input" : "import math\nimport json\nimport requests\nimport pandas as pd\n\n\ndef read_json_file(file_path):\n    with open(file_path, 'r', encoding='utf-8-sig') as json_file:\n        data = json.load(json_file)\n    return data\n\n\ndef haversine(lat1, lon1, lat2, lon2):\n    lat1, lon1, lat2, lon2 = map(math.radians, [lat1, lon1, lat2, lon2])\n    d_lat = lat2 - lat1\n    d_long = lon2 - lon1\n    a = math.sin(d_lat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(d_long / 2) ** 2\n    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n    distance = 6371 * c  # Earth's radius in kilometers\n    return distance\n\n\ndef find_nearest_location(locations, target_lat, target_lon):\n    n_location = None\n    min_distance = float('inf')\n    for location in locations:\n        lat = location['location']['lat']\n        lon = location['location']['lng']\n        distance = haversine(lat, lon, target_lat, target_lon)\n        if distance < min_distance:\n            min_distance = distance\n            n_location = location\n    return n_location\n\n\ndef csv_to_json(csv_text):\n    lines = csv_text.splitlines()\n    header = lines[0]\n    field_names = header.split(',')\n    json_list = []\n    for line in lines[1:]:\n        values = line.split(',')\n        row_dict = {}\n        for i, field_name in enumerate(field_names):\n            row_dict[field_name] = values[i]\n        json_list.append(row_dict)\n    json_string = json.dumps(json_list)\n    return json_string\n\n\ndef remove_commented_lines(text):\n    lines = text.split(\"\\n\")  # Split the text into lines\n    cleaned_lines = []\n\n    for line in lines:\n        if not line.startswith(\"#\"):  # Check if the line starts with \"#\"\n            cleaned_lines.append(line)\n\n    cleaned_text = \"\\n\".join(cleaned_lines)  # Join the remaining lines\n\n    return cleaned_text\n\n\ncsv_file = 'snotel.csv'\nstart_date = \"2022-01-01\"\nend_date = \"2023-12-12\"\n\nstation_mapping = pd.read_csv('station_cell_mapping.csv')\ndf = pd.DataFrame(columns=['Date', 'Snow Water Equivalent (in) Start of Day Values',\n                           'Change In Snow Water Equivalent (in)',\n                           'Snow Depth (in) Start of Day Values',\n                           'Change In Snow Depth (in)',\n                           'Air Temperature Observed (degF) Start of Day Values',\n                           'station_name',\n                           'station_triplet',\n                           'station_elevation',\n                           'station_lat',\n                           'station_long',\n                           'mapping_station_id',\n                           'mapping_cell_id']\n                  )\n\nfor index, row in station_mapping.iterrows():\n    station_locations = read_json_file('snotelStations.json')\n    nearest_location = find_nearest_location(station_locations, 41.993149, -120.1787155)\n\n    location_name = nearest_location['name']\n    location_triplet = nearest_location['triplet']\n    location_elevation = nearest_location['elevation']\n    location_station_lat = nearest_location['location']['lat']\n    location_station_long = nearest_location['location']['lng']\n\n    url = f\"https://wcc.sc.egov.usda.gov/reportGenerator/view_csv/\" \\\n          f\"customSingleStationReport/daily/{location_triplet}%7Cid%3D%22%22%7Cname/{start_date},{end_date}%2C0/\" \\\n          \"WTEQ%3A%3Avalue%2CWTEQ%3A%3Adelta%2CSNWD%3A%3Avalue%2CSNWD%3A%3Adelta%2CTOBS%3A%3Avalue\"\n\n    r = requests.get(url)\n    text = remove_commented_lines(r.text)\n    json_data = json.loads(csv_to_json(text))\n\n    for item in json_data:\n        item['station_name'] = location_name\n        item['station_triplet'] = location_triplet\n        item['station_elevation'] = location_elevation\n        item['station_lat'] = location_station_lat\n        item['station_long'] = location_station_long\n        item['mapping_station_id'] = row['station_id']\n        item['mapping_cell_id'] = row['cell_id']\n\n    with open(csv_file, 'a') as f:\n        for entry in json_data:\n            pd.DataFrame(entry, index=[0]).to_csv(f, header=True, index=False, lineterminator='\\n')",
  "history_output" : "  File \"data_snotel_real_time.py\", line 52\n    lines = text.split(\"\n                       ^\n",
  "history_begin_time" : 1688416671908,
  "history_end_time" : 1688416822958,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "jvj1iqich95",
  "history_input" : "import math\nimport json\nimport requests\nimport pandas as pd\n\n\ndef read_json_file(file_path):\n    with open(file_path, 'r', encoding='utf-8-sig') as json_file:\n        data = json.load(json_file)\n    return data\n\n\ndef haversine(lat1, lon1, lat2, lon2):\n    lat1, lon1, lat2, lon2 = map(math.radians, [lat1, lon1, lat2, lon2])\n    d_lat = lat2 - lat1\n    d_long = lon2 - lon1\n    a = math.sin(d_lat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(d_long / 2) ** 2\n    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n    distance = 6371 * c  # Earth's radius in kilometers\n    return distance\n\n\ndef find_nearest_location(locations, target_lat, target_lon):\n    n_location = None\n    min_distance = float('inf')\n    for location in locations:\n        lat = location['location']['lat']\n        lon = location['location']['lng']\n        distance = haversine(lat, lon, target_lat, target_lon)\n        if distance < min_distance:\n            min_distance = distance\n            n_location = location\n    return n_location\n\n\ndef csv_to_json(csv_text):\n    lines = csv_text.splitlines()\n    header = lines[0]\n    field_names = header.split(',')\n    json_list = []\n    for line in lines[1:]:\n        values = line.split(',')\n        row_dict = {}\n        for i, field_name in enumerate(field_names):\n            row_dict[field_name] = values[i]\n        json_list.append(row_dict)\n    json_string = json.dumps(json_list)\n    return json_string\n\n\ndef remove_commented_lines(text):\n    lines = text.split(\"\\n\")  # Split the text into lines\n    cleaned_lines = []\n\n    for line in lines:\n        if not line.startswith(\"#\"):  # Check if the line starts with \"#\"\n            cleaned_lines.append(line)\n\n    cleaned_text = \"\\n\".join(cleaned_lines)  # Join the remaining lines\n\n    return cleaned_text\n\n\ncsv_file = 'snotel.csv'\nstart_date = \"2022-01-01\"\nend_date = \"2023-12-12\"\n\nstation_mapping = pd.read_csv('station_cell_mapping.csv')\ndf = pd.DataFrame(columns=['Date', 'Snow Water Equivalent (in) Start of Day Values',\n                           'Change In Snow Water Equivalent (in)',\n                           'Snow Depth (in) Start of Day Values',\n                           'Change In Snow Depth (in)',\n                           'Air Temperature Observed (degF) Start of Day Values',\n                           'station_name',\n                           'station_triplet',\n                           'station_elevation',\n                           'station_lat',\n                           'station_long',\n                           'mapping_station_id',\n                           'mapping_cell_id']\n                  )\n\nfor index, row in station_mapping.iterrows():\n    station_locations = read_json_file('snotelStations.json')\n    nearest_location = find_nearest_location(station_locations, 41.993149, -120.1787155)\n\n    location_name = nearest_location['name']\n    location_triplet = nearest_location['triplet']\n    location_elevation = nearest_location['elevation']\n    location_station_lat = nearest_location['location']['lat']\n    location_station_long = nearest_location['location']['lng']\n\n    url = f\"https://wcc.sc.egov.usda.gov/reportGenerator/view_csv/\" \\\n          f\"customSingleStationReport/daily/{location_triplet}%7Cid%3D%22%22%7Cname/{start_date},{end_date}%2C0/\" \\\n          \"WTEQ%3A%3Avalue%2CWTEQ%3A%3Adelta%2CSNWD%3A%3Avalue%2CSNWD%3A%3Adelta%2CTOBS%3A%3Avalue\"\n\n    r = requests.get(url)\n    text = remove_commented_lines(r.text)\n    json_data = json.loads(csv_to_json(text))\n\n    for item in json_data:\n        item['station_name'] = location_name\n        item['station_triplet'] = location_triplet\n        item['station_elevation'] = location_elevation\n        item['station_lat'] = location_station_lat\n        item['station_long'] = location_station_long\n        item['mapping_station_id'] = row['station_id']\n        item['mapping_cell_id'] = row['cell_id']\n\n    with open(csv_file, 'a') as f:\n        for entry in json_data:\n            pd.DataFrame(entry, index=[0]).to_csv(f, header=True, index=False, lineterminator='\\n')",
  "history_output" : "  File \"data_snotel_real_time.py\", line 52\n    lines = text.split(\"\n                       ^\nSyntaxError: EOL while scanning string literal\n",
  "history_begin_time" : 1688416632669,
  "history_end_time" : 1688416660676,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "gdnv9z5qjaq",
  "history_input" : null,
  "history_output" : "  File \"data_snotel_real_time.py\", line 52\n    lines = text.split(\"\n                       ^\nSyntaxError: EOL while scanning string literal\n",
  "history_begin_time" : 1688416572896,
  "history_end_time" : 1688416575346,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Done"
},{
  "history_id" : "1xa665uazft",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687546866696,
  "history_end_time" : 1687546866696,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u6jvub45vvw",
  "history_input" : null,
  "history_output" : "Authentication Failed. Wrong Password.",
  "history_begin_time" : 1687463687569,
  "history_end_time" : 1687463689029,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "2l5jf1412ip",
  "history_input" : null,
  "history_output" : "Authentication Failed. Wrong Password.",
  "history_begin_time" : 1687463638558,
  "history_end_time" : 1687463640025,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "5je3i7wfxc2",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/5je3i7wfxc2', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 3.5084 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n/home/chetana/gw-workspace/5je3i7wfxc2/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 28 of the file /home/chetana/gw-workspace/5je3i7wfxc2/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  parsed_html = BeautifulSoup(webContent)\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/5je3i7wfxc2/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1686236156564,
  "history_end_time" : 1686237909496,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "77kvfoey8p5",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "sh: /home/chetana/anaconda3/condabin/python: No such file or directory\n",
  "history_begin_time" : 1686235964504,
  "history_end_time" : 1686235985415,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "3hm07r8wpwm",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nImportError: No module named metloom.pointdata\n",
  "history_begin_time" : 1686235533002,
  "history_end_time" : 1686235535355,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Failed"
},{
  "history_id" : "lseroiql9al",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "sh: /home/chetana/anaconda3/condabin/python: No such file or directory\n",
  "history_begin_time" : 1686235451527,
  "history_end_time" : 1686235482631,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "6wmjdpkocpp",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "usage: conda [-h] [-V] command ...\nconda: error: argument command: invalid choice: 'data_snotel_real_time.py' (choose from 'clean', 'compare', 'config', 'create', 'info', 'init', 'install', 'list', 'package', 'remove', 'uninstall', 'rename', 'run', 'search', 'update', 'upgrade', 'notices')\n",
  "history_begin_time" : 1686235412367,
  "history_end_time" : 1686235424785,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "u2nq2y7gc2k",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nImportError: No module named metloom.pointdata\n",
  "history_begin_time" : 1686153661549,
  "history_end_time" : 1686153662617,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Done"
},{
  "history_id" : "ywpbpfh92i6",
  "history_input" : null,
  "history_output" : "Authentication Failed. Wrong Password.",
  "history_begin_time" : 1681516928121,
  "history_end_time" : 1681516929661,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "Zii6uAMg94AG",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/Zii6uAMg94AG', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 3.62113 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n/home/chetana/gw-workspace/Zii6uAMg94AG/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\nThe code that caused this warning is on line 28 of the file /home/chetana/gw-workspace/Zii6uAMg94AG/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n  parsed_html = BeautifulSoup(webContent)\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/Zii6uAMg94AG/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1681515560934,
  "history_end_time" : 1681515572452,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "59uiv8waix8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681039707710,
  "history_end_time" : 1681039707710,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ghkanv0ih2o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681039689404,
  "history_end_time" : 1681039697766,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "tqgjv88baud",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681007820123,
  "history_end_time" : 1681007820123,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "20al6tgrajs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679442743772,
  "history_end_time" : 1679442743772,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Skipped"
},{
  "history_id" : "r3hxzbbafn8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679332584779,
  "history_end_time" : 1679332584779,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Skipped"
},{
  "history_id" : "rpghkr4t6xz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679191258494,
  "history_end_time" : 1679191258494,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "2jifky",
  "indicator" : "Skipped"
},{
  "history_id" : "b29rbizsf1q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679091534976,
  "history_end_time" : 1679091744969,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "hnapb0b8i17",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679091527023,
  "history_end_time" : 1679091533668,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "9ujethm8tbq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678887964091,
  "history_end_time" : 1678888215697,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "53n0at49whr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678887944939,
  "history_end_time" : 1678887946446,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ikacjjldj8w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678887287237,
  "history_end_time" : 1678887836230,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "6u86905iewu",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-15 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-15 13    8.7 mi W\n2   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-15 13  8.9 mi WNW\n3   CO-GR-53  TABERNASH 1.9 NW, CO  ...  2022-05-15 06  9.5 mi ESE\n4   CO-GR-86  PARSHALL 8.8 SSE, CO  ...  2022-05-15 15    10 mi SW\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0     CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-15 13  8.7 mi ESE\n1        WIFC2     WILLIAMS FORK DAM  ...  2022-05-15 13    8.7 mi W\n2     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-15 13  8.9 mi WNW\n3        SCSC2      STILLWATER CREEK  ...  2022-05-16 05  13.7 mi NE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-16 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-15 17   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-16 03   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-16 02    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-16 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-16 04  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-16 06  4.5 mi NNE\n1   CO-GR-68        TABERNASH 2.7 NW, CO  ...  2022-05-15 13  8.7 mi ESE\n2      GRUC2             GROUSE MOUNTAIN  ...  2022-05-16 05  9.3 mi WNW\n3      KSEC2                KEYSER RIDGE  ...  2022-05-16 05     11 mi S\n4      KSEC2                KEYSER RIDGE  ...  2022-05-16 05     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678884595989,
  "history_end_time" : 1678884986357,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "k8wiqt6afzh",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-15 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-15 13    8.7 mi W\n2   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-15 13  8.9 mi WNW\n3   CO-GR-53  TABERNASH 1.9 NW, CO  ...  2022-05-15 06  9.5 mi ESE\n4   CO-GR-86  PARSHALL 8.8 SSE, CO  ...  2022-05-15 15    10 mi SW\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0     CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-15 13  8.7 mi ESE\n1        WIFC2     WILLIAMS FORK DAM  ...  2022-05-15 13    8.7 mi W\n2     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-15 13  8.9 mi WNW\n3        SCSC2      STILLWATER CREEK  ...  2022-05-16 05  13.7 mi NE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-16 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-15 17   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-16 03   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-16 02    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-16 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-16 04  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-16 06  4.5 mi NNE\n1   CO-GR-68        TABERNASH 2.7 NW, CO  ...  2022-05-15 13  8.7 mi ESE\n2      GRUC2             GROUSE MOUNTAIN  ...  2022-05-16 05  9.3 mi WNW\n3      KSEC2                KEYSER RIDGE  ...  2022-05-16 05     11 mi S\n4      KSEC2                KEYSER RIDGE  ...  2022-05-16 05     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678884241421,
  "history_end_time" : 1678884438332,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "8s1je5dq1rf",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-13 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-13 14    8.7 mi W\n2   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-13 13  8.9 mi WNW\n3   CO-GR-53  TABERNASH 1.9 NW, CO  ...  2022-05-13 06  9.5 mi ESE\n4   CO-GR-86  PARSHALL 8.8 SSE, CO  ...  2022-05-13 15    10 mi SW\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0     CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-13 13  8.7 mi ESE\n1        WIFC2     WILLIAMS FORK DAM  ...  2022-05-13 14    8.7 mi W\n2     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-13 13  8.9 mi WNW\n3        SCSC2      STILLWATER CREEK  ...  2022-05-14 04  13.7 mi NE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-14 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-13 20   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-13 16   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-14 02    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-14 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-14 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-14 06  4.5 mi NNE\n1   CO-GR-68        TABERNASH 2.7 NW, CO  ...  2022-05-13 13  8.7 mi ESE\n2      GRUC2             GROUSE MOUNTAIN  ...  2022-05-14 05  9.3 mi WNW\n3      KSEC2                KEYSER RIDGE  ...  2022-05-14 05     11 mi S\n4      KSEC2                KEYSER RIDGE  ...  2022-05-14 05     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678756812053,
  "history_end_time" : 1678756821424,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "lyha1gx4d4p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678756683255,
  "history_end_time" : 1678756684806,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "n7ccebr0mt4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678749631704,
  "history_end_time" : 1678749936012,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "qmhjip4t7s1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678748546802,
  "history_end_time" : 1678748546802,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k9jnl07xz7e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678747245283,
  "history_end_time" : 1678747245283,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "2ual2049zdf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678746481171,
  "history_end_time" : 1678746793045,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "jwqm1zx7rjz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678743868491,
  "history_end_time" : 1678744167082,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "53dal7h82as",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678743629013,
  "history_end_time" : 1678743629013,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "a0p6xv7gwe7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678743144811,
  "history_end_time" : 1678743615533,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "dxw4723z8ah",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678742583274,
  "history_end_time" : 1678742583274,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "xvm6umeddeb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678742209463,
  "history_end_time" : 1678742571509,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "cxqrttr0133",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678738707259,
  "history_end_time" : 1678738707259,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "k8rszvg6zy3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678725424160,
  "history_end_time" : 1678725424160,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "0sbb77ytba7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678723111761,
  "history_end_time" : 1678725408352,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "4ykzh82mmlf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678649002054,
  "history_end_time" : 1678649002054,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "p7secuae0cn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678648366888,
  "history_end_time" : 1678648366888,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "w3dwpnes2em",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678648337321,
  "history_end_time" : 1678648341647,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "t3pibsx36a9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678564567729,
  "history_end_time" : 1678564567729,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "wrw53bc36ei",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678564538620,
  "history_end_time" : 1678564538620,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "i3wk62ysmwq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678557921940,
  "history_end_time" : 1678557923649,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "vl6paytqj4n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678557705793,
  "history_end_time" : 1678557898797,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "bzd7p0ll73t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678497028156,
  "history_end_time" : 1678497028156,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ydmsp2a7xbx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678330214203,
  "history_end_time" : 1678330214203,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "w9sna06jtu3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678326965090,
  "history_end_time" : 1694185584847,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ll21trd2tfm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678312067625,
  "history_end_time" : 1678312067625,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "6xcugkxx78e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678312030769,
  "history_end_time" : 1678312065073,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "dx6vnf1cnxk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678312001492,
  "history_end_time" : 1694185586277,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "5swjm74l5qx",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-08 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-08 13    8.7 mi W\n2   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-08 13  8.9 mi WNW\n3      KMLC2             KREMMLING  ...  2022-05-08 14   17.4 mi W\n4      GLKC2         GRAND LAKE,CO  ...  2022-05-08 22  18.6 mi NE\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0     CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-08 13  8.7 mi ESE\n1        WIFC2     WILLIAMS FORK DAM  ...  2022-05-08 13    8.7 mi W\n2     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-08 13  8.9 mi WNW\n3        SCSC2      STILLWATER CREEK  ...  2022-05-09 04  13.7 mi NE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-09 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-09 05   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-08 07   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-09 05    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-09 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-09 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-09 05  4.5 mi NNE\n1      WIFC2           WILLIAMS FORK DAM  ...  2022-05-08 13    8.7 mi W\n2      GRUC2             GROUSE MOUNTAIN  ...  2022-05-09 05  9.3 mi WNW\n3      KSEC2                KEYSER RIDGE  ...  2022-05-09 02     11 mi S\n4      KSEC2                KEYSER RIDGE  ...  2022-05-09 02     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678283570214,
  "history_end_time" : 1678283579675,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "j7x7op32qf5",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-07 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-07 14    8.7 mi W\n2   CO-GR-81     GRANBY 2.9 NE, CO  ...  2022-05-08 01  8.8 mi ENE\n3   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-07 13  8.9 mi WNW\n4   CO-GR-86  PARSHALL 8.8 SSE, CO  ...  2022-05-07 15    10 mi SW\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0        WIFC2     WILLIAMS FORK DAM  ...  2022-05-07 14    8.7 mi W\n1     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-07 13  8.9 mi WNW\n2        SCSC2      STILLWATER CREEK  ...  2022-05-08 05  13.7 mi NE\n3        FRZC2             FRASER,CO  ...  2022-05-07 22   14 mi ESE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-08 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-07 21   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-07 08   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-08 05    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-08 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-08 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n    Station ID                        Name  ...     Date (UTC)    Distance\n0        CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-08 05  4.5 mi NNE\n1        WIFC2           WILLIAMS FORK DAM  ...  2022-05-07 14    8.7 mi W\n2        GRUC2             GROUSE MOUNTAIN  ...  2022-05-08 05  9.3 mi WNW\n3  F2950_MADIS            FW2950 TABERNASH  ...  2022-05-08 03  9.4 mi ESE\n4        KSEC2                KEYSER RIDGE  ...  2022-05-08 02     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678201966068,
  "history_end_time" : 1678201969625,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "d5o2zxz08ec",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-07 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-07 14    8.7 mi W\n2   CO-GR-81     GRANBY 2.9 NE, CO  ...  2022-05-08 01  8.8 mi ENE\n3   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-07 13  8.9 mi WNW\n4   CO-GR-86  PARSHALL 8.8 SSE, CO  ...  2022-05-07 15    10 mi SW\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0        WIFC2     WILLIAMS FORK DAM  ...  2022-05-07 14    8.7 mi W\n1     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-07 13  8.9 mi WNW\n2        SCSC2      STILLWATER CREEK  ...  2022-05-08 05  13.7 mi NE\n3        FRZC2             FRASER,CO  ...  2022-05-07 22   14 mi ESE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-08 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-07 21   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-07 08   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-08 05    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-08 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-08 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n    Station ID                        Name  ...     Date (UTC)    Distance\n0        CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-08 05  4.5 mi NNE\n1        WIFC2           WILLIAMS FORK DAM  ...  2022-05-07 14    8.7 mi W\n2        GRUC2             GROUSE MOUNTAIN  ...  2022-05-08 05  9.3 mi WNW\n3  F2950_MADIS            FW2950 TABERNASH  ...  2022-05-08 03  9.4 mi ESE\n4        KSEC2                KEYSER RIDGE  ...  2022-05-08 02     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678201380722,
  "history_end_time" : 1678201516417,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "qq13vfkqtx9",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-06 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-06 14    8.7 mi W\n2   CO-GR-81     GRANBY 2.9 NE, CO  ...  2022-05-07 01  8.8 mi ENE\n3   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-06 13  8.9 mi WNW\n4   CO-GR-53  TABERNASH 1.9 NW, CO  ...  2022-05-06 06  9.5 mi ESE\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0     CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-06 13  8.7 mi ESE\n1        WIFC2     WILLIAMS FORK DAM  ...  2022-05-06 14    8.7 mi W\n2     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-06 13  8.9 mi WNW\n3        SCSC2      STILLWATER CREEK  ...  2022-05-07 05  13.7 mi NE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-07 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-07 05   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-06 08   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-07 05    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-07 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-07 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-07 05  4.5 mi NNE\n1   CO-GR-68        TABERNASH 2.7 NW, CO  ...  2022-05-06 13  8.7 mi ESE\n2      WIFC2           WILLIAMS FORK DAM  ...  2022-05-06 14    8.7 mi W\n3      GRUC2             GROUSE MOUNTAIN  ...  2022-05-07 05  9.3 mi WNW\n4      KSEC2                KEYSER RIDGE  ...  2022-05-07 00     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678155227012,
  "history_end_time" : 1678155234523,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "2l7a47b9pmp",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-06 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-06 14    8.7 mi W\n2   CO-GR-81     GRANBY 2.9 NE, CO  ...  2022-05-07 01  8.8 mi ENE\n3   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-06 13  8.9 mi WNW\n4   CO-GR-53  TABERNASH 1.9 NW, CO  ...  2022-05-06 06  9.5 mi ESE\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n    Station ID                  Name  ...     Date (UTC)    Distance\n0     CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-06 13  8.7 mi ESE\n1        WIFC2     WILLIAMS FORK DAM  ...  2022-05-06 14    8.7 mi W\n2     CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-06 13  8.9 mi WNW\n3        SCSC2      STILLWATER CREEK  ...  2022-05-07 05  13.7 mi NE\n4  CAFLC_MADIS            FOOL CREEK  ...  2022-05-07 05  14.8 mi SE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-07 05   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-06 08   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-07 05    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-07 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-07 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-07 05  4.5 mi NNE\n1   CO-GR-68        TABERNASH 2.7 NW, CO  ...  2022-05-06 13  8.7 mi ESE\n2      WIFC2           WILLIAMS FORK DAM  ...  2022-05-06 14    8.7 mi W\n3      GRUC2             GROUSE MOUNTAIN  ...  2022-05-07 05  9.3 mi WNW\n4      KSEC2                KEYSER RIDGE  ...  2022-05-07 00     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1678147979713,
  "history_end_time" : 1678154846288,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "1CBQaEqVn8DQ",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-04 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-04 14    8.7 mi W\n2   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-04 13  8.9 mi WNW\n3   CO-GR-53  TABERNASH 1.9 NW, CO  ...  2022-05-04 13  9.5 mi ESE\n4   CO-GR-73      GRANBY 7.7 N, CO  ...  2022-05-04 13    12 mi NE\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n  Station ID                   Name  ...     Date (UTC)    Distance\n0   CO-GR-68   TABERNASH 2.7 NW, CO  ...  2022-05-04 13  8.7 mi ESE\n1      WIFC2      WILLIAMS FORK DAM  ...  2022-05-04 14    8.7 mi W\n2   CO-GR-52   PARSHALL 3.0 NNW, CO  ...  2022-05-04 13  8.9 mi WNW\n3      SCSC2       STILLWATER CREEK  ...  2022-05-05 05  13.7 mi NE\n4   CO-GR-78  GRAND LAKE 3.7 SW, CO  ...  2022-05-04 13  14.4 mi NE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-05 05   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-04 07   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-05 05    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-05 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-05 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-05 06  4.5 mi NNE\n1   CO-GR-81           GRANBY 2.9 NE, CO  ...  2022-05-05 01  8.8 mi ENE\n2      GRUC2             GROUSE MOUNTAIN  ...  2022-05-05 05  9.3 mi WNW\n3      KSEC2                KEYSER RIDGE  ...  2022-05-05 05     11 mi S\n4      KSEC2                KEYSER RIDGE  ...  2022-05-05 05     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1677989506550,
  "history_end_time" : 1677989508668,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "2p29iEJAzYSi",
  "history_input" : "\nimport requests\nimport pandas as pd\nfrom bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day} \"\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(f\"url: {test_noaa_query_url}\")\n\nresponse = requests.get(test_noaa_query_url, headers={'User-Agent': 'Mozilla'})\nparsed_html = BeautifulSoup(response.text, features='lxml')\ncontainer_div = parsed_html.find(\"div\", attrs={'class': 'container'})\nif container_div:\n    container_div = container_div.get_text()\nelse:\n    print(\"could not find div the class 'container'\")\n\nlive_stats = parsed_html.find_all('table', attrs={'class': 'gray_data_table'})\ntables = pd.read_html(str(live_stats))\n\ntable_sequence = [\n        'Raw Snowfall Observations',\n        'Snow Depth',\n        'Snow Water Equivalent Observations',\n        'Raw Precipitation Observations'\n    ]\nfor idx, t in enumerate(tables):\n    print(table_sequence[idx])\n    print(t)\n    print('--------------------')",
  "history_output" : "url: https://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4 \ncould not find div the class 'container'\nRaw Snowfall Observations\n  Station ID                  Name  ...     Date (UTC)    Distance\n0   CO-GR-68  TABERNASH 2.7 NW, CO  ...  2022-05-04 13  8.7 mi ESE\n1      WIFC2     WILLIAMS FORK DAM  ...  2022-05-04 14    8.7 mi W\n2   CO-GR-52  PARSHALL 3.0 NNW, CO  ...  2022-05-04 13  8.9 mi WNW\n3   CO-GR-53  TABERNASH 1.9 NW, CO  ...  2022-05-04 13  9.5 mi ESE\n4   CO-GR-73      GRANBY 7.7 N, CO  ...  2022-05-04 13    12 mi NE\n\n[5 rows x 7 columns]\n--------------------\nSnow Depth\n  Station ID                   Name  ...     Date (UTC)    Distance\n0   CO-GR-68   TABERNASH 2.7 NW, CO  ...  2022-05-04 13  8.7 mi ESE\n1      WIFC2      WILLIAMS FORK DAM  ...  2022-05-04 14    8.7 mi W\n2   CO-GR-52   PARSHALL 3.0 NNW, CO  ...  2022-05-04 13  8.9 mi WNW\n3      SCSC2       STILLWATER CREEK  ...  2022-05-05 05  13.7 mi NE\n4   CO-GR-78  GRAND LAKE 3.7 SW, CO  ...  2022-05-04 13  14.4 mi NE\n\n[5 rows x 6 columns]\n--------------------\nSnow Water Equivalent Observations\n  Station ID               Name  ...     Date (UTC)     Distance\n0      SCSC2   STILLWATER CREEK  ...  2022-05-05 05   13.7 mi NE\n1      FCVC2         FOOL CREEK  ...  2022-05-04 07   15.5 mi SE\n2      MFKC2   MIDDLE FORK CAMP  ...  2022-05-05 05    17.6 mi S\n3      WLLC2  WILLOW CREEK PASS  ...  2022-05-05 05    20.7 mi N\n4      JNPC2         JONES PASS  ...  2022-05-05 05  20.9 mi SSE\n\n[5 rows x 6 columns]\n--------------------\nRaw Precipitation Observations\n  Station ID                        Name  ...     Date (UTC)    Distance\n0      CAWC2  COLORADO RVR BLW WINDY GAP  ...  2022-05-05 06  4.5 mi NNE\n1   CO-GR-81           GRANBY 2.9 NE, CO  ...  2022-05-05 01  8.8 mi ENE\n2      GRUC2             GROUSE MOUNTAIN  ...  2022-05-05 05  9.3 mi WNW\n3      KSEC2                KEYSER RIDGE  ...  2022-05-05 05     11 mi S\n4      KSEC2                KEYSER RIDGE  ...  2022-05-05 05     11 mi S\n\n[5 rows x 7 columns]\n--------------------\n",
  "history_begin_time" : 1677989423727,
  "history_end_time" : 1677989445269,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "4KjI53SBgzOU",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\nparsed_html = BeautifulSoup(webContent,features='lxml')\n# Check if the div element was found before extracting its text content\ncontainer_div = parsed_html.find('div', attrs={'class': 'container'})\nif container_div is not None:\n    container_text = container_div.get_text()\n    print(container_text)\nelse:\n    print(\"Could not find div with class 'container'\")\n\n\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/4KjI53SBgzOU', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\" selected>3</option>\n<option value=\"4\" class=\"smallform\">4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-03 06:00 UTC</span><br>and  <span class=\"date\">2022-05-04 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>0.00</td><td>24</td><td>2022-05-03 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>0.00</td><td>24</td><td>2022-05-03 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.00</td><td>24</td><td>2022-05-04 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>0.00</td><td>24</td><td>2022-05-03 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>0.00</td><td>24</td><td>2022-05-03 06</td><td>9.5 mi ESE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>0.00</td><td>2022-05-03 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>0.00</td><td>2022-05-03 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>0.00</td><td>2022-05-03 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-04 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>0.00</td><td>2022-05-03 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-04 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.10</td><td>2022-05-04 03</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.30</td><td>2022-05-04 04</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.20</td><td>2022-05-04 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.90</td><td>2022-05-04 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.03</td><td>24</td><td>2022-05-04 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-04 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.9259&deg;N, -106.1391&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-86\">CO-GR-86</a></td><td class=\"desc\">PARSHALL 8.8 SSE, CO</td><td>8491</td><td>0.20</td><td>24</td><td>2022-05-03 15</td><td>10 mi SW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-04 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>24</td><td>2022-05-04 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.32109 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\nCould not find div with class 'container'\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/4KjI53SBgzOU/data_snotel_real_time.py\", line 36, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677983380997,
  "history_end_time" : 1677983387817,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "BNcHZ9wZq5me",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\nparsed_html = BeautifulSoup(webContent,features='lxml')\n# Check if the div element was found before extracting its text content\ncontainer_div = parsed_html.find('div', attrs={'class': 'container'})\nif container_div is not None:\n    container_text = container_div.get_text()\n    print(container_text)\nelse:\n    print(\"Could not find div with class 'container'\")\n\n\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/BNcHZ9wZq5me', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\" selected>3</option>\n<option value=\"4\" class=\"smallform\">4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-03 06:00 UTC</span><br>and  <span class=\"date\">2022-05-04 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>0.00</td><td>24</td><td>2022-05-03 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>0.00</td><td>24</td><td>2022-05-03 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.00</td><td>24</td><td>2022-05-04 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>0.00</td><td>24</td><td>2022-05-03 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>0.00</td><td>24</td><td>2022-05-03 06</td><td>9.5 mi ESE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>0.00</td><td>2022-05-03 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>0.00</td><td>2022-05-03 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>0.00</td><td>2022-05-03 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-04 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>0.00</td><td>2022-05-03 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-04 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.10</td><td>2022-05-04 03</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.30</td><td>2022-05-04 04</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.20</td><td>2022-05-04 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.90</td><td>2022-05-04 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.03</td><td>24</td><td>2022-05-04 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-04 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.9259&deg;N, -106.1391&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=CO-GR-86\">CO-GR-86</a></td><td class=\"desc\">PARSHALL 8.8 SSE, CO</td><td>8491</td><td>0.20</td><td>24</td><td>2022-05-03 15</td><td>10 mi SW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-04 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=6&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>24</td><td>2022-05-04 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 3.29068 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\nCould not find div with class 'container'\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/BNcHZ9wZq5me/data_snotel_real_time.py\", line 36, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677981507394,
  "history_end_time" : 1677981513445,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "8Ypth2jXLU1K",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\nparsed_html = BeautifulSoup(webContent,features='lxml')\n# Check if the div element was found before extracting its text content\ncontainer_div = parsed_html.find('div', attrs={'class': 'container'})\nif container_div is not None:\n    container_text = container_div.get_text()\n    print(container_text)\nelse:\n    print(\"Could not find div with class 'container'\")\n\n\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/8Ypth2jXLU1K', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.30954 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\nCould not find div with class 'container'\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/8Ypth2jXLU1K/data_snotel_real_time.py\", line 36, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957639453,
  "history_end_time" : 1677957641917,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "gNJl14zfVe6Y",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\n#print(webContent)\nparsed_html = BeautifulSoup(webContent,features='lxml')\n# Check if the div element was found before extracting its text content\ncontainer_div = parsed_html.find('div', attrs={'class': 'container'})\nif container_div is not None:\n    container_text = container_div.get_text()\n    print(container_text)\nelse:\n    print(\"Could not find div with class 'container'\")\n\n\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/gNJl14zfVe6Y', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\nCould not find div with class 'container'\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/gNJl14zfVe6Y/data_snotel_real_time.py\", line 36, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957590971,
  "history_end_time" : 1677957593127,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "jLEbD22nXknz",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\n#print(webContent)\nparsed_html = BeautifulSoup(webContent)\n# Check if the div element was found before extracting its text content\ncontainer_div = parsed_html.find('div', attrs={'class': 'container'})\nif container_div is not None:\n    container_text = container_div.get_text()\n    print(container_text)\nelse:\n    print(\"Could not find div with class 'container'\")\n\n\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/jLEbD22nXknz', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n/home/chetana/gw-workspace/jLEbD22nXknz/data_snotel_real_time.py:26: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 26 of the file /home/chetana/gw-workspace/jLEbD22nXknz/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  parsed_html = BeautifulSoup(webContent)\nCould not find div with class 'container'\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/jLEbD22nXknz/data_snotel_real_time.py\", line 36, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957563310,
  "history_end_time" : 1677957565255,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "k8tPlniVe7PA",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\n#print(webContent)\nparsed_html = BeautifulSoup(webContent, features=\"lxml\")\n# Check if the div element was found before extracting its text content\ncontainer_div = parsed_html.find('div', attrs={'class': 'container'})\nif container_div is not None:\n    container_text = container_div.get_text()\n    print(container_text)\nelse:\n    print(\"Could not find div with class 'container'\")\n\n\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/k8tPlniVe7PA', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\nCould not find div with class 'container'\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/k8tPlniVe7PA/data_snotel_real_time.py\", line 36, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957539648,
  "history_end_time" : 1677957541796,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "sTFta0MLqZCq",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\n#print(webContent)\n\n\nparsed_html = BeautifulSoup(webContent, features=\"lxml\")\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/sTFta0MLqZCq', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/sTFta0MLqZCq/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957379913,
  "history_end_time" : 1677957381849,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "EUNWLZ7i8PKd",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent, features=\"lxml\")\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/EUNWLZ7i8PKd', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.00682 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/EUNWLZ7i8PKd/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957370192,
  "history_end_time" : 1677957372432,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "RTdCdrL4A7UV",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(features=\"lxml\")\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/RTdCdrL4A7UV', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.00505 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/RTdCdrL4A7UV/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'find'\n",
  "history_begin_time" : 1677957288963,
  "history_end_time" : 1677957291169,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "23i08OgyVqq1",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\n#print(webContent)\n\n\nparsed_html = BeautifulSoup('features=\"lxml\"')\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/23i08OgyVqq1', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n/home/chetana/gw-workspace/23i08OgyVqq1/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 28 of the file /home/chetana/gw-workspace/23i08OgyVqq1/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  parsed_html = BeautifulSoup('features=\"lxml\"')\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/23i08OgyVqq1/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957188662,
  "history_end_time" : 1677957190853,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "RthKocWszO39",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup('features=\"lxml\"')\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/RthKocWszO39', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.00447 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n/home/chetana/gw-workspace/RthKocWszO39/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 28 of the file /home/chetana/gw-workspace/RthKocWszO39/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  parsed_html = BeautifulSoup('features=\"lxml\"')\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/RthKocWszO39/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957135783,
  "history_end_time" : 1677957137809,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "QJ0lLai2TrW7",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup('features=\"lxml\"')\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/QJ0lLai2TrW7', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.00483 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n/home/chetana/gw-workspace/QJ0lLai2TrW7/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 28 of the file /home/chetana/gw-workspace/QJ0lLai2TrW7/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  parsed_html = BeautifulSoup('features=\"lxml\"')\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/QJ0lLai2TrW7/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677957109760,
  "history_end_time" : 1677957111891,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "jtvaWU7zjWri",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/jtvaWU7zjWri', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.32529 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n/home/chetana/gw-workspace/jtvaWU7zjWri/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 28 of the file /home/chetana/gw-workspace/jtvaWU7zjWri/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  parsed_html = BeautifulSoup(webContent)\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/jtvaWU7zjWri/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677956904637,
  "history_end_time" : 1677956907268,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "W1zE2OoKrx4H",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/home/chetana/gw-workspace/W1zE2OoKrx4H', '/home/chetana/anaconda3/lib/python39.zip', '/home/chetana/anaconda3/lib/python3.9', '/home/chetana/anaconda3/lib/python3.9/lib-dynload', '/home/chetana/.local/lib/python3.9/site-packages', '/home/chetana/anaconda3/lib/python3.9/site-packages']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2022-11-14\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n<option value=\"2023\" class=\"smallform\">2023</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 3.49848 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 14, 2022 - cloud<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n\n/home/chetana/gw-workspace/W1zE2OoKrx4H/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\n\nThe code that caused this warning is on line 28 of the file /home/chetana/gw-workspace/W1zE2OoKrx4H/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n\n  parsed_html = BeautifulSoup(webContent)\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/W1zE2OoKrx4H/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1677956701192,
  "history_end_time" : 1677956708110,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "OyRezte9VEom",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/OyRezte9VEom/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677956530411,
  "history_end_time" : 1677956531773,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "1ry1vxc4tk9",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/1ry1vxc4tk9/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677858833227,
  "history_end_time" : 1694185596829,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "1bwwlpzclng",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/1bwwlpzclng/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677809736632,
  "history_end_time" : 1694185596452,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "c0q5yudpxio",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/c0q5yudpxio/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677809539715,
  "history_end_time" : 1694185620805,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "y1pe5mxmvan",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/y1pe5mxmvan/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677797670113,
  "history_end_time" : 1694185619263,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "x19pzz8cmes",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/x19pzz8cmes/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677793208559,
  "history_end_time" : 1694185612779,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "7q1wvh28krx",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/7q1wvh28krx/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677791582788,
  "history_end_time" : 1694185610909,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "nte288f797w",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/nte288f797w/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677787467675,
  "history_end_time" : 1677787470307,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "1dmv754hk7y",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/1dmv754hk7y/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677786016601,
  "history_end_time" : 1677786042646,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "nvycobjiyr7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677784204263,
  "history_end_time" : 1677784272026,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "5i5jo0my8fy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677782901826,
  "history_end_time" : 1677782901826,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "pesgrbwiq03",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677781745182,
  "history_end_time" : 1677781745182,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "3xmb03hkclq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677719046608,
  "history_end_time" : 1677719046608,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "sgilblleukt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677718179124,
  "history_end_time" : 1677718179124,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "2DYn7rjMWced",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/2DYn7rjMWced/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1677718084281,
  "history_end_time" : 1677718085578,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "zj4pxo5y40h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677679556273,
  "history_end_time" : 1677679556273,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "8tz6lp63b14",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677679507384,
  "history_end_time" : 1677679549085,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "za9fopcm4do",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636286885,
  "history_end_time" : 1677636286885,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "zc0k163kq93",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636150388,
  "history_end_time" : 1677636150388,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "yo1wux4er4p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636137250,
  "history_end_time" : 1677636142813,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "fjmnt4j6r0n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636063793,
  "history_end_time" : 1677636063793,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "yqn4bktuuht",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677635881858,
  "history_end_time" : 1677635881858,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "x22mwjawmk0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677617762824,
  "history_end_time" : 1677617762824,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "7vdqqti0y49",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677606170915,
  "history_end_time" : 1677606170915,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "3mqt68z0qbl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677606114243,
  "history_end_time" : 1677606114243,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "crc174tevpg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677582848589,
  "history_end_time" : 1677582848589,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mtiv4ph5bkb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677525426649,
  "history_end_time" : 1677525426649,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "rdfxj4hrv0a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677462325786,
  "history_end_time" : 1694185608918,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "7y0hqr5qg5t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677462312399,
  "history_end_time" : 1694185608700,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "lussx3y9f2l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677462311911,
  "history_end_time" : 1694185608631,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "qy1j8ko07b2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677428742764,
  "history_end_time" : 1677428742764,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "p9wx1gxkq1m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677428687368,
  "history_end_time" : 1677428687368,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "wcvjitzq4tb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677426263007,
  "history_end_time" : 1677426263007,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "kwsop3dki17",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677379889832,
  "history_end_time" : 1677379889832,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "kfe9ntrw2dl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677379837828,
  "history_end_time" : 1677379837828,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "8ehbl2rkw07",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677352478028,
  "history_end_time" : 1677352478028,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "scbm287x3hw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677352389931,
  "history_end_time" : 1677352389931,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "1vvmc1qctv1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677352335882,
  "history_end_time" : 1677352335882,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "u4woj0lftf3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677344119998,
  "history_end_time" : 1677344119998,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ftegmv33xil",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677282602958,
  "history_end_time" : 1677282602958,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "8ipet12ymwr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273712238,
  "history_end_time" : 1677273712238,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "r4rovuhxryf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273698753,
  "history_end_time" : 1677273703950,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "og113hnkquh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273673920,
  "history_end_time" : 1677273679536,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "kdutc01iays",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273657808,
  "history_end_time" : 1677273665453,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ttgj0bp3vsm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273536018,
  "history_end_time" : 1677273536018,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "xn2mst4twbj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273519110,
  "history_end_time" : 1677273525488,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "moz2cs3df6x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273371306,
  "history_end_time" : 1677273371306,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "qxd6r22tseb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273340445,
  "history_end_time" : 1677273345443,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "r3ebaqh7bwv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273323503,
  "history_end_time" : 1677273332234,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "idg64o0x06w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273146667,
  "history_end_time" : 1677273146667,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "90w0tdjihm9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273100241,
  "history_end_time" : 1677273134492,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "m2ttdwd842r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677201275859,
  "history_end_time" : 1677201275859,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "1qx7endfqqs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677192311075,
  "history_end_time" : 1677192311075,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "yax26stwdh4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677192268376,
  "history_end_time" : 1677192268376,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "7ljgyumei02",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677191916745,
  "history_end_time" : 1677191916745,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "qone68vb568",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677184296703,
  "history_end_time" : 1677184296703,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "3issxnv96l4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677184173559,
  "history_end_time" : 1677184173559,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "hhj2zlbit14",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677113476472,
  "history_end_time" : 1677113476472,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "7wuz5wbtwjc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677108238640,
  "history_end_time" : 1677108238640,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "e8qee1cxjla",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677108212560,
  "history_end_time" : 1677108229737,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "81ufqwrcvff",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107869814,
  "history_end_time" : 1677107869814,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "tix4c2eyjmg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107757962,
  "history_end_time" : 1677107757962,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "kt1jy3g9hud",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107718307,
  "history_end_time" : 1677107718307,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "g13txdvxfjy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107637168,
  "history_end_time" : 1677107705677,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "lzlvsapvu2o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107604035,
  "history_end_time" : 1677107608763,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "42ubr4q43zi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107556530,
  "history_end_time" : 1677107562721,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ypadw029m3d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107525003,
  "history_end_time" : 1677107538163,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ya501zs9olg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107501097,
  "history_end_time" : 1677107501097,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "u6aqgggdrkg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107474168,
  "history_end_time" : 1677107474168,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "0xpzeb08bzo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106516114,
  "history_end_time" : 1677106516114,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "r90xcp76vhk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106477067,
  "history_end_time" : 1677106477067,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "9nk1s6vukha",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106431057,
  "history_end_time" : 1677106431057,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "11179jhhiak",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106134914,
  "history_end_time" : 1677106147564,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "aoedojkte9r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106011053,
  "history_end_time" : 1677106011053,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "x262kjys9k0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030843681,
  "history_end_time" : 1677030843681,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "q71tw314uod",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030771165,
  "history_end_time" : 1677030771165,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "l5nbgddgj9z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030672656,
  "history_end_time" : 1677030672656,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "a15bpfzj19c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030563599,
  "history_end_time" : 1677030563599,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ai6xjbmtfw9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677025528679,
  "history_end_time" : 1677025528679,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "dqbrsnwkq26",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677025467869,
  "history_end_time" : 1677025467869,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "h2py2801zw6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677017826426,
  "history_end_time" : 1677017826426,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "xxcani322uc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677017218434,
  "history_end_time" : 1677017218434,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "shq4vamnygm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677016681323,
  "history_end_time" : 1677016681323,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "7nd4lpyv80g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677016143008,
  "history_end_time" : 1677016143008,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "zjde37ocdbp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677016063967,
  "history_end_time" : 1677016063967,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "xm9kmxu7bw2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677015787653,
  "history_end_time" : 1677015787653,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "dyku2lzhocr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677015739961,
  "history_end_time" : 1677015739961,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "q5rkix3f0wi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677014884980,
  "history_end_time" : 1677014884980,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "1vibyj7k2q7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677014795652,
  "history_end_time" : 1677014795652,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "dap1bj56hyc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677014228111,
  "history_end_time" : 1677014228111,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "l4b9wxxiurt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677013908450,
  "history_end_time" : 1677013908450,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "dz0gjjl88v4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677013833067,
  "history_end_time" : 1677013833067,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "wpm6t6e3l7z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677011873100,
  "history_end_time" : 1677011873100,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "mypc4cpukog",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677008198602,
  "history_end_time" : 1677008198602,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "34ab3thxet6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677008164340,
  "history_end_time" : 1677008164340,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "8lf1augswcd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677001999602,
  "history_end_time" : 1677001999602,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "l0saki6w9tq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677001732260,
  "history_end_time" : 1677001732260,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "125mu02vt29",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677001593893,
  "history_end_time" : 1677001593893,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ho2wdbzq8fj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677000536819,
  "history_end_time" : 1677000536819,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ejypjkpdyco",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676999722157,
  "history_end_time" : 1676999722157,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "yb51al",
  "indicator" : "Skipped"
},{
  "history_id" : "mc6qqej8j74",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676999599180,
  "history_end_time" : 1676999599180,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ka6r3qrjeuo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676862212408,
  "history_end_time" : 1676862212408,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qvevgqf2j5j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676329536274,
  "history_end_time" : 1676329536274,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4ikxuh17ef8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676329491798,
  "history_end_time" : 1676329491798,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5jkkcfjmgzb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676063613426,
  "history_end_time" : 1676063613426,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g94gt3hmx68",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675783782330,
  "history_end_time" : 1675783782330,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lekuw6tzthm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672014982961,
  "history_end_time" : 1672014982961,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "htrx1ig9b71",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671944382469,
  "history_end_time" : 1671944382469,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5xy5062u0e0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670910617293,
  "history_end_time" : 1670910617293,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x5emcipopkg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670910501204,
  "history_end_time" : 1670910501204,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zhfryn4qy02",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670910268478,
  "history_end_time" : 1670910268478,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0cb1ihlz0w3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670019638913,
  "history_end_time" : 1670019638913,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lrq7269qn4g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667484654202,
  "history_end_time" : 1667484654202,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cdyi94kc2kn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667410736839,
  "history_end_time" : 1667410736839,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pdm9ahgf1mh",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/Users/joe/gw-workspace/pdm9ahgf1mh', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2019-11-20\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 0.00186 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 20, 2019 <br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n/Users/joe/gw-workspace/pdm9ahgf1mh/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\nThe code that caused this warning is on line 28 of the file /Users/joe/gw-workspace/pdm9ahgf1mh/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n  parsed_html = BeautifulSoup(webContent)\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/pdm9ahgf1mh/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1667410652804,
  "history_end_time" : 1667410705881,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "t5ck5kqz27u",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n\n# Write first python in Geoweaver\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nprint(sys.path)\n\ntry:\n    from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n    from bs4 import BeautifulSoup\n\nnohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n\ntest_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=5, day=4)\n\nprint(test_noaa_query_url)\n\nresponse = urllib.request.urlopen(test_noaa_query_url)\nwebContent = response.read().decode('UTF-8')\n\nprint(webContent)\n\n\nparsed_html = BeautifulSoup(webContent)\nprint(parsed_html.body.find('div', attrs={'class':'container'}).text)\n\n\n\n#snotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\n#df = snotel_point.get_daily_data(\n#    datetime(2020, 1, 2), datetime(2020, 1, 20),\n#    [snotel_point.ALLOWED_VARIABLES.SWE]\n#)\n#print(df)",
  "history_output" : "['/Users/joe/gw-workspace/t5ck5kqz27u', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper']\nhttps://www.nohrsc.noaa.gov/nearest/index.html?city=40.05352381745094%2C-106.04027196859343&county=&l=5&u=e&y=2022&m=5&d=4\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\" >\n<html lang=\"en\">\n<head>\n\t<meta http-equiv=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\" >\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\" >\n\t<link href=\"/favicon.ico\" rel=\"shortcut icon\" >\n\t<meta http-equiv=\"Cache-Control\" content=\"no-cache\" >\n\t<meta name=\"DC.creator\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.publisher\" content=\"NOAA's National Weather Service\" >\n\t<meta name=\"DC.contributor\" content=\"National Operational Hydrologic Remote Sensing Center\" >\n\t<meta name=\"DC.language\" content=\"EN-US\" >\n<title>Nearest Observations - NOHRSC - The ultimate source for snow information</title>\n<meta name=\"DC.title\" content=\"Nearest Observations - NOHRSC - The ultimate source for snow information\">\n<meta name=\"DC.description\" content=\"A listing of nearby observations to a given point and date\">\n<meta name=\"DC.date.created\" scheme=\"ISO8601\" content=\"2009-01-12\">\n<meta name=\"DC.date.reviewed\" scheme=\"ISO8601\" content=\"2019-11-20\">\n\t<script type=\"text/javascript\">\n\t</script>\n\t<!-- Global site tag (gtag.js) - Google Analytics -->\n\t<script type=\"text/javascript\" async src=\"https://www.googletagmanager.com/gtag/js?id=UA-43953030-10\"></script>\n\t<script type=\"text/javascript\">\n\t  window.dataLayer = window.dataLayer || [];\n\t  function gtag(){dataLayer.push(arguments);}\n\t  gtag('js', new Date());\n\t  gtag('config', 'UA-43953030-10');\n\t</script>\n</head>\n<body>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\" style=\"background-image : url(/images/topbanner.jpg)\">\n\t\t<tr>\n\t\t\t<td align=\"right\" height=\"19\">\n\t\t\t\t<a href=\"#content\"><img src=\"/images/skipgraphic.gif\" alt=\"(content link)\" height=\"1\" width=\"1\" border=\"0\"></a>\n\t\t\t\t<a href=\"https://www.nws.noaa.gov\"><span class=\"nwslink\">weather.gov</span></a>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n\t\t<tr>\n\t\t\t<td rowspan=\"2\" width=\"85\"><a href=\"https://www.noaa.gov\"><img src=\"/images/titleleft_noaa.jpg\" alt=\"NOAA link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t\t<td align=\"left\" width=\"500\" height=\"20\" style=\"background : url(/images/blank_title.jpg);\"><div class=\"source\">National Weather Service</div></td>\n\t\t\t<td rowspan=\"2\" style=\"background-image : url(/images/title_bg.jpg)\">&nbsp;</td>\n\t\t\t<td rowspan=\"2\" width=\"85\" align=\"right\"><a href=\"https://www.nws.noaa.gov\"><img src=\"/images/titleright_nws.jpg\" alt=\"NWS link\" width=\"85\" height=\"78\" border=\"0\"></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td width=\"500\" height=\"58\" style=\"background : url(/images/blank_name.jpg);\" class=\"location\"><a href=\"/\">National Operational Hydrologic<br> Remote Sensing Center</a></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"background-image : url(/images/navbar_bg.gif)\" width=\"100%\" class=\"nav\">\n\t\t<tr>\n\t\t\t<td align=\"left\" valign=\"top\" width=\"94\"><img src=\"/images/navbar_left.jpg\" alt=\"\" width=\"94\" height=\"23\" border=\"0\"></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\" nowrap><a href=\"/\">Home</a></td>\n\t\t\t<td class=\"nav\" width=\"15%\" align=\"center\"><a href=\"https://www.weather.gov/news\" title=\"National Weather Service News\">News</a></td>\n\t\t\t<td class=\"nav\" width=\"20%\" align=\"center\"><a href=\"https://www.nws.noaa.gov/organization.html\" title=\"National Weather Service Organization\">Organization</a></td>\n\t\t\t<td align=\"left\" class=\"searchinput\" width=\"20%\" nowrap=\"nowrap\">\n\t\t\t\t<form action=\"https://search.usa.gov/search\" method=\"get\" name=\"query\" id=\"query\"\n\t\t\t\t style=\"margin-bottom:0; margin-top:0;\">\n\t\t\t\t<label for=\"search\" class=\"yellow\">Search</label>&nbsp;&nbsp;\n\t\t\t\t<input type=\"hidden\" name=\"affiliate\" value=\"nws.noaa.gov\" >\n\t\t\t\t<input type=\"text\" name=\"query\" id=\"search\" value=\"Enter Search Here\"\n\t\t\t\t size=\"20\" maxlength=\"256\" onfocus=\"this.value='';\" title=\"Search all NWS sites here\">&nbsp;\n\t\t\t\t<input type=\"submit\" id=\"submit\" value=\"Go\" >\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td width=\"10%\">&nbsp;</td>\n\t\t\t<td align=\"right\" valign=\"bottom\" width=\"24\"><img src=\"/images/navbar_right.jpg\" alt=\"\" width=\"24\" height=\"23\" border=\"0\"></td>\n\t\t</tr>\n\t</table>\n\t<table cellspacing=\"0\" cellpadding=\"0\">\n\t\t<tr valign=\"top\">\n\t\t\t<td class=\"nav\" width=\"130\">\n<dl>\n<dd><a href=\"/\">Home</a></dd>\n</dl>\n<dl>\n<dt>Snow Information</dt>\n<dd><a href=\"/nsa/\" title=\"An overview of snow around the country\">National Analyses</a></dd>\n<dd><a href=\"/interactive/html/map.html\" title=\"Explore NOHRSC products and create your own maps\">Interactive Maps</a></dd>\n<dd><a href=\"/earth/\" title=\"A listing of experimental products for use with KML interpreter software\">3D Visualization</a></dd>\n<dd><a href=\"/snowsurvey/\" title=\"Current information about our snow surveys\">Airborne Surveys</a></dd>\n<dd><a href=\"/snowfall/\" title=\"Daily maps of observed snowfall\">Snowfall Analysis</a></dd>\n<dd><a href=\"/nh_snowcover/\">Satellite Products</a></dd>\n<dd><a href=\"/forecasts/\">Forecasts</a></dd>\n<dd><a href=\"/archived_data/\" title=\"Information on where to acquire NOHRSC raster data\">Data Archive</a></dd>\n<dd><a href=\"/shef_archive/\" title=\"Browse an archive of SHEF text messages\">SHEF Products</a></dd>\n</dl>\n<form name=\"nearest\" action=\"/nearest/index.html\">\n<dl>\n<dt>Observations near</dt>\n<dd><input type=\"text\" size=\"9\" name=\"city\" value=\"City, ST\" title=\"Search for snow observations near a city. Press enter or select the go button to submit request\" onfocus=\"this.value='';\">\n<input type=\"submit\" value=\"Go\"></dd>\n</dl>\n</form>\n<dl>\n<dt>Science/Technology</dt>\n<dd><a href=\"/technology/\" title=\"More detailed information about the NOHRSC\">NOHRSC</a></dd>\n<dd><a href=\"/gisdatasets/\" title=\"Shapefiles available for download\">GIS Data Sets</a></dd>\n<dd><a href=\"/special/\" title=\"Satellite/GIS images for certain projects\">Special Purpose Imagery</a></dd>\n</dl>\n<dl>\n<dt>About The NOHRSC</dt>\n<dd><a href=\"/directory/\" title=\"Meet the staff at the NOHRSC\">Staff</a></dd>\n</dl>\n<dl>\n<dt>NOAA Links</dt>\n<dd><a href=\"https://www.ncdc.noaa.gov/snow-and-ice/\">Snow Climatology</a></dd>\n<dd><a href=\"/links.html\">Related Links</a></dd>\n</dl>\n<dl>\n<dt>Help</dt>\n<dd><a href=\"/help/\" title=\"NOHRSC web site help\">Help and FAQ</a></dd>\n<dd><a href=\"/sitemap.html\">Site Map</a></dd>\n</dl>\n<dl>\n<dt>Contact Us</dt>\n<dd><a href=\"/contact.html\">Please Send Us Comments!</a></dd>\n</dl>\n<center>\n<a href=\"https://www.usa.gov\"><img src=\"/images/usagov_logo_color_110w.gif\" alt=\"USA.gov is the U.S. Government's official Web portal to all Federal, state and local government Web resources and services.\" width=\"110\" height=\"30\" border=\"0\"></a>\n<br>\n</center>\n\t\t\t</td>\n\t\t\t<td id=\"content_block\">\n\t\t\t\t<a href=\"\" name=\"content\"></a>\n<center><strong>Nearest observations to</strong></center>\n<center><h2>40.05&deg;N, -106.04&deg;W</h2></center>\n<strong>Note: these data are unofficial and provisional.</strong><br>\n<form name=\"data\" action=\"/nearest/index.html\">\n<fieldset>\n<legend><b>Location and Date</b></legend>\n<label title=\"Enter City, ST (or Latitude, Longitude)\">Enter your \"City, ST (or Latitude, Longitude)\" <input type=\"text\" size=\"16\" maxlength=\"80\" name=\"city\" value=\"40.05&deg;N, -106.04&deg;W\"></label>\n<input type=\"hidden\" name=\"county\" value=\"\">\n<input type=\"submit\" value=\"Go\" title=\"Click to refresh screen\"><br><br>\n<input type=\"hidden\" name=\"l\" value=\"5\">\n<select name=\"u\" title=\"Units\" size=\"1\" class=\"smallform\">\n<option value=\"e\" class=\"smallform\" selected>English</option>\n<option value=\"m\" class=\"smallform\">Metric</option>\n</select>\n &nbsp;\n<select name=\"y\" title=\"Year\" size=\"1\" class=\"smallform\">\n<option value=\"2003\" class=\"smallform\">2003</option>\n<option value=\"2004\" class=\"smallform\">2004</option>\n<option value=\"2005\" class=\"smallform\">2005</option>\n<option value=\"2006\" class=\"smallform\">2006</option>\n<option value=\"2007\" class=\"smallform\">2007</option>\n<option value=\"2008\" class=\"smallform\">2008</option>\n<option value=\"2009\" class=\"smallform\">2009</option>\n<option value=\"2010\" class=\"smallform\">2010</option>\n<option value=\"2011\" class=\"smallform\">2011</option>\n<option value=\"2012\" class=\"smallform\">2012</option>\n<option value=\"2013\" class=\"smallform\">2013</option>\n<option value=\"2014\" class=\"smallform\">2014</option>\n<option value=\"2015\" class=\"smallform\">2015</option>\n<option value=\"2016\" class=\"smallform\">2016</option>\n<option value=\"2017\" class=\"smallform\">2017</option>\n<option value=\"2018\" class=\"smallform\">2018</option>\n<option value=\"2019\" class=\"smallform\">2019</option>\n<option value=\"2020\" class=\"smallform\">2020</option>\n<option value=\"2021\" class=\"smallform\">2021</option>\n<option value=\"2022\" class=\"smallform\" selected>2022</option>\n</select>\n &nbsp;\n<select name=\"m\" title=\"Month\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">January</option>\n<option value=\"2\" class=\"smallform\">February</option>\n<option value=\"3\" class=\"smallform\">March</option>\n<option value=\"4\" class=\"smallform\">April</option>\n<option value=\"5\" class=\"smallform\" selected>May</option>\n<option value=\"6\" class=\"smallform\">June</option>\n<option value=\"7\" class=\"smallform\">July</option>\n<option value=\"8\" class=\"smallform\">August</option>\n<option value=\"9\" class=\"smallform\">September</option>\n<option value=\"10\" class=\"smallform\">October</option>\n<option value=\"11\" class=\"smallform\">November</option>\n<option value=\"12\" class=\"smallform\">December</option>\n</select>\n &nbsp;\n<select name=\"d\" title=\"Day\" size=\"1\" class=\"smallform\">\n<option value=\"1\" class=\"smallform\">1</option>\n<option value=\"2\" class=\"smallform\">2</option>\n<option value=\"3\" class=\"smallform\">3</option>\n<option value=\"4\" class=\"smallform\" selected>4</option>\n<option value=\"5\" class=\"smallform\">5</option>\n<option value=\"6\" class=\"smallform\">6</option>\n<option value=\"7\" class=\"smallform\">7</option>\n<option value=\"8\" class=\"smallform\">8</option>\n<option value=\"9\" class=\"smallform\">9</option>\n<option value=\"10\" class=\"smallform\">10</option>\n<option value=\"11\" class=\"smallform\">11</option>\n<option value=\"12\" class=\"smallform\">12</option>\n<option value=\"13\" class=\"smallform\">13</option>\n<option value=\"14\" class=\"smallform\">14</option>\n<option value=\"15\" class=\"smallform\">15</option>\n<option value=\"16\" class=\"smallform\">16</option>\n<option value=\"17\" class=\"smallform\">17</option>\n<option value=\"18\" class=\"smallform\">18</option>\n<option value=\"19\" class=\"smallform\">19</option>\n<option value=\"20\" class=\"smallform\">20</option>\n<option value=\"21\" class=\"smallform\">21</option>\n<option value=\"22\" class=\"smallform\">22</option>\n<option value=\"23\" class=\"smallform\">23</option>\n<option value=\"24\" class=\"smallform\">24</option>\n<option value=\"25\" class=\"smallform\">25</option>\n<option value=\"26\" class=\"smallform\">26</option>\n<option value=\"27\" class=\"smallform\">27</option>\n<option value=\"28\" class=\"smallform\">28</option>\n<option value=\"29\" class=\"smallform\">29</option>\n<option value=\"30\" class=\"smallform\">30</option>\n<option value=\"31\" class=\"smallform\">31</option>\n</select>\n &nbsp;\n<input type=\"submit\" name=\"i\" value=\" - \" title=\"Back one day\"> &nbsp;\n<input type=\"submit\" name=\"i\" value=\" + \" title=\"Forward one day\"> &nbsp;\n</fieldset>\n</form>\n<table width=\"100%\"><tr><td><strong>Closest 5  observations near 40.05&deg;N, -106.04&deg;W</strong><br>40.05&deg;N, -106.04&deg;W (Elevation: N/A)</td>\n<td align=\"right\">Latest between <span class=\"date\">2022-05-04 06:00 UTC</span><br>and  <span class=\"date\">2022-05-05 06:00 UTC</span></td></tr></table><hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Snowfall Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Snowfall Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Snowfall<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>3.70</td><td>24</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>2.00</td><td>24</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>2.20</td><td>24</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.0015&deg;N, -105.8725&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-53\">CO-GR-53</a></td><td class=\"desc\">TABERNASH 1.9 NW, CO</td><td>8579</td><td>6.50</td><td>24</td><td>2022-05-04 13</td><td>9.5 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1997&deg;N, -105.9258&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-73\">CO-GR-73</a></td><td class=\"desc\">GRANBY 7.7 N, CO</td><td>8563</td><td>4.00</td><td>24</td><td>2022-05-04 13</td><td>12 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Depth Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Depth Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Depth<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.0071&deg;N, -105.8862&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-68\">CO-GR-68</a></td><td class=\"desc\">TABERNASH 2.7 NW, CO</td><td>8806</td><td>4.00</td><td>2022-05-04 13</td><td>8.7 mi ESE</td></tr>\n<tr><td class=\"desc\" title=\"(40.0375&deg;N, -106.203&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WIFC2\">WIFC2</a></td><td class=\"desc\">WILLIAMS FORK DAM</td><td>7733</td><td>1.00</td><td>2022-05-04 14</td><td>8.7 mi W</td></tr>\n<tr><td class=\"desc\" title=\"(40.0911&deg;N, -106.2&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-52\">CO-GR-52</a></td><td class=\"desc\">PARSHALL 3.0 NNW, CO</td><td>7904</td><td>1.50</td><td>2022-05-04 13</td><td>8.9 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(40.2082&deg;N, -105.8634&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-78\">CO-GR-78</a></td><td class=\"desc\">GRAND LAKE 3.7 SW, CO</td><td>8537</td><td>3.00</td><td>2022-05-04 13</td><td>14.4 mi NE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Snow Water Equivalent Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Snow Water Equivalent Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Snow Water Equivalent<br> (in)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.2254&deg;N, -105.9198&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=SCSC2\">SCSC2</a></td><td class=\"desc\">STILLWATER CREEK</td><td>8793</td><td>0.00</td><td>2022-05-05 05</td><td>13.7 mi NE</td></tr>\n<tr><td class=\"desc\" title=\"(39.8687&deg;N, -105.8675&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=FCVC2\">FCVC2</a></td><td class=\"desc\">FOOL CREEK</td><td>11168</td><td>20.30</td><td>2022-05-04 07</td><td>15.5 mi SE</td></tr>\n<tr><td class=\"desc\" title=\"(39.7956&deg;N, -106.0273&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=MFKC2\">MFKC2</a></td><td class=\"desc\">MIDDLE FORK CAMP</td><td>8983</td><td>1.40</td><td>2022-05-05 05</td><td>17.6 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(40.347&deg;N, -106.0943&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=WLLC2\">WLLC2</a></td><td class=\"desc\">WILLOW CREEK PASS</td><td>9600</td><td>14.70</td><td>2022-05-05 05</td><td>20.7 mi N</td></tr>\n<tr><td class=\"desc\" title=\"(39.7645&deg;N, -105.9062&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=JNPC2\">JNPC2</a></td><td class=\"desc\">JONES PASS</td><td>10482</td><td>10.80</td><td>2022-05-05 05</td><td>20.9 mi SSE</td></tr>\n</tbody></table>\n<hr>\n<table class=\"gray_data_table\" cellspacing=\"2\" summary=\"Table of Raw Precipitation Observations near 40.05&deg;N, -106.04&deg;W, \" width=\"100%\">\n<caption><strong>Raw Precipitation Observations</strong></caption>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <colgroup>\n <thead>\n  <tr>\n<th scope=\"col\">Station ID</th><th scope=\"col\">Name</th><th scope=\"col\">Elev.<br> (ft)</th><th scope=\"col\">Raw Precipitation<br> (in)</th><th scope=\"col\">Duration<br> (hours)</th><th scope=\"col\">Date (UTC)</th><th scope=\"col\">Distance</th></tr>\n </thead>\n <tbody>\n<tr><td class=\"desc\" title=\"(40.1083&deg;N, -106.0036&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CAWC2\">CAWC2</a></td><td class=\"desc\">COLORADO RVR BLW WINDY GAP</td><td>7822</td><td>0.23</td><td>24</td><td>2022-05-05 06</td><td>4.5 mi NNE</td></tr>\n<tr><td class=\"desc\" title=\"(40.1186&deg;N, -105.8997&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=CO-GR-81\">CO-GR-81</a></td><td class=\"desc\">GRANBY 2.9 NE, CO</td><td>8041</td><td>0.65</td><td>24</td><td>2022-05-05 01</td><td>8.8 mi ENE</td></tr>\n<tr><td class=\"desc\" title=\"(40.136&deg;N, -106.1744&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=GRUC2\">GRUC2</a></td><td class=\"desc\">GROUSE MOUNTAIN</td><td>10013</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>9.3 mi WNW</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.00</td><td>1</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n<tr><td class=\"desc\" title=\"(39.8906&deg;N, -106.0367&deg;W)\"><a href=\"/interactive/html/graph.html?units=0&amp;ey=2022&amp;em=5&amp;ed=7&amp;eh=6&amp;station=KSEC2\">KSEC2</a></td><td class=\"desc\">KEYSER RIDGE</td><td>10190</td><td>0.29</td><td>24</td><td>2022-05-05 05</td><td>11 mi S</td></tr>\n</tbody></table>\n<br>\n<span style=\"color: white\">Page generated in 2.12697 seconds.</span><br>\n\t\t\t\t<br><br>\n\t\t\t\t<table align=\"center\" cellspacing=\"2\" cellpadding=\"2\" border=\"0\">\n\t\t\t\t\t<tr align=\"center\">\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\tNOHRSC<br>\n\t\t\t\t\t\t\t<a href=\"/mission.html\">Mission Statement</a>\n\t\t\t\t\t\t\t&nbsp;|&nbsp;\n\t\t\t\t\t\t\t<a href=\"/contact.html\">Contact</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t\t<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\"><hr></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\"> \n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov\"><span class=\"gray\">National Weather Service</span></a><br>\n\t\t\t\t\t\t\tNational Operational Hydrologic Remote Sensing Center<br>\n                                                        <a href=\"https://water.noaa.gov\"><span class=\"gray\">Office of Water Prediction</span></a><br>\n\t\t\t\t\t\t\t1735 Lake Drive W.<br>\n\t\t\t\t\t\t\tChanhassen, MN 55317<br>\n\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\">\n\t\t\t\t\t\t\t<a href=\"/\"><img src=\"/images/nohrsc.png\" alt=\"NOHRSC homepage\" border=0></a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t<td align=\"left\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"/contact.html\"><span class=\"gray\">Contact NOHRSC</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/glossary/\"><span class=\"gray\">Glossary</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/credits.php\"><span class=\"gray\">Credits</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.cio.noaa.gov/Policy_Programs/info_quality.html\"><span class=\"gray\">Information Quality</span></a><br>\nPage last modified: Nov 20, 2019 <br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td align=\"right\" class=\"gray\">\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/admin.php\"><span class=\"gray\">About Us</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/disclaimer.php\"><span class=\"gray\">Disclaimer</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/privacy.php\"><span class=\"gray\">Privacy Policy</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.rdc.noaa.gov/~foia/\"><span class=\"gray\">FOIA</span></a><br>\n\t\t\t\t\t\t\t<a href=\"https://www.weather.gov/careers.php\"><span class=\"gray\">Career Opportunities</span></a><br>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n</html>\n/Users/joe/gw-workspace/t5ck5kqz27u/data_snotel_real_time.py:28: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\nThe code that caused this warning is on line 28 of the file /Users/joe/gw-workspace/t5ck5kqz27u/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n  parsed_html = BeautifulSoup(webContent)\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/t5ck5kqz27u/data_snotel_real_time.py\", line 29, in <module>\n    print(parsed_html.body.find('div', attrs={'class':'container'}).text)\nAttributeError: 'NoneType' object has no attribute 'text'\n",
  "history_begin_time" : 1667410545202,
  "history_end_time" : 1667410624030,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ZDPiMEr28hff",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n    grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n    id = grid_cells['features'][i]['properties']['cell_id']\n    coords = grid_cells['features'][i]['geometry']['coordinates']\n    if id is not None and coords is not None: \n      cell_ID.append(id)\n      ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n    for j in range(1):\n      latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n      longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n      response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n      webContent = response.read().decode('UTF-8')\n      parsed_html = BeautifulSoup(webContent)\n\n      snow_water_eq_table = parsed_html.find_all('table')[7]\n      nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n      stations.append(nearest_station)\n  \n  # save stations somewhere for cache\n  \n  print(\"Nearest station list is completed. Saving to cache..\")\n  \n  with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n    pickle.dump(stations, fp)\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  print(f\"Retrieving data from {start_date} to {end_date}\")\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n    if stations[i] != '\\nNo observations within 62 miles\\n':\n\n      for j in range(end_date.year - start_date.year + 1):\n\n        response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n        webContent = response.read().decode('UTF-8')\n        parsed_html = BeautifulSoup(webContent)\n\n        data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n        for k in range(len(data_table)):\n          new_cell_IDs.append(cell_ID[i])\n          dates.append(data_table[k].find_all('td')[0].text)\n          snow_water_eq.append(data_table[k].find_all('td')[2].text)\n    else:\n      new_cell_IDs.append(cell_ID[i])\n      dates.append('N/A')\n      snow_water_eq.append('N/A')\n\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "Running",
  "history_begin_time" : 1657723764825,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "SfJGJqI8KnVZ",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n    grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n    id = grid_cells['features'][i]['properties']['cell_id']\n    coords = grid_cells['features'][i]['geometry']['coordinates']\n    if id is not None and coords is not None: \n      cell_ID.append(id)\n      ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n    for j in range(1):\n      latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n      longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n      response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n      webContent = response.read().decode('UTF-8')\n      parsed_html = BeautifulSoup(webContent)\n\n      snow_water_eq_table = parsed_html.find_all('table')[7]\n      nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n      stations.append(nearest_station)\n  \n  # save stations somewhere for cache\n  \n  print(\"Nearest station list is completed. Saving to cache..\")\n  \n  with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n    pickle.dump(stations, fp)\n          \n  return stations\n\n# def get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n#   print(f\"Retrieving data from {start_date} to {end_date}\")\n#   # read the grid geometry file\n#   homedir = os.path.expanduser('~')\n#   print(homedir)\n#   # read grid cell\n#   github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n#   # read grid cell\n#   #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n#   #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n#   #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#   stations = get_nearest_stations_for_all_grids()\n\n#   start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n#   end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n#   # NOTE: this url only allows user to query one year's worth of data\n#   nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n#   dates = []\n#   snow_water_eq = []\n#   # Keep track of cell IDs for each time series\n#   new_cell_IDs = []\n\n#   # Retrieve time series snow water equivalent data for each grid cell's nearest station\n#   for i in range(len(stations)):\n\n#     if stations[i] != '\\nNo observations within 62 miles\\n':\n\n#       for j in range(end_date.year - start_date.year + 1):\n\n#         response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n#         webContent = response.read().decode('UTF-8')\n#         parsed_html = BeautifulSoup(webContent)\n\n#         data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n#         for k in range(len(data_table)):\n#           new_cell_IDs.append(cell_ID[i])\n#           dates.append(data_table[k].find_all('td')[0].text)\n#           snow_water_eq.append(data_table[k].find_all('td')[2].text)\n#     else:\n#       new_cell_IDs.append(cell_ID[i])\n#       dates.append('N/A')\n#       snow_water_eq.append('N/A')\n\n#   df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n#   df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n#   print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "Running",
  "history_begin_time" : 1657723643446,
  "history_end_time" : 1657723761625,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "Ll9HqIE6XbfA",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n    grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n    id = grid_cells['features'][i]['properties']['cell_id']\n    coords = grid_cells['features'][i]['geometry']['coordinates']\n    if id is not None and coords is not None: \n      cell_ID.append(id)\n      ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n#   # Retrieve nearest stations for each grid cell\n#   for i in range(int(len(cell_ID))):\n#     for j in range(1):\n#       latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n#       longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n#       response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n#       webContent = response.read().decode('UTF-8')\n#       parsed_html = BeautifulSoup(webContent)\n\n#       snow_water_eq_table = parsed_html.find_all('table')[7]\n#       nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n#       stations.append(nearest_station)\n  \n#   # save stations somewhere for cache\n  \n#   print(\"Nearest station list is completed. Saving to cache..\")\n  \n#   with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n#     pickle.dump(stations, fp)\n          \n#   return stations\n\n# def get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n#   print(f\"Retrieving data from {start_date} to {end_date}\")\n#   # read the grid geometry file\n#   homedir = os.path.expanduser('~')\n#   print(homedir)\n#   # read grid cell\n#   github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n#   # read grid cell\n#   #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n#   #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n#   #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#   stations = get_nearest_stations_for_all_grids()\n\n#   start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n#   end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n#   # NOTE: this url only allows user to query one year's worth of data\n#   nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n#   dates = []\n#   snow_water_eq = []\n#   # Keep track of cell IDs for each time series\n#   new_cell_IDs = []\n\n#   # Retrieve time series snow water equivalent data for each grid cell's nearest station\n#   for i in range(len(stations)):\n\n#     if stations[i] != '\\nNo observations within 62 miles\\n':\n\n#       for j in range(end_date.year - start_date.year + 1):\n\n#         response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n#         webContent = response.read().decode('UTF-8')\n#         parsed_html = BeautifulSoup(webContent)\n\n#         data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n#         for k in range(len(data_table)):\n#           new_cell_IDs.append(cell_ID[i])\n#           dates.append(data_table[k].find_all('td')[0].text)\n#           snow_water_eq.append(data_table[k].find_all('td')[2].text)\n#     else:\n#       new_cell_IDs.append(cell_ID[i])\n#       dates.append('N/A')\n#       snow_water_eq.append('N/A')\n\n#   df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n#   df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n#   print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/Ll9HqIE6XbfA', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\ntesting...\nStart to get nearest stations..\n",
  "history_begin_time" : 1657723632608,
  "history_end_time" : 1657723640864,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "2K5NVRTCsW5c",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n    grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n    id = grid_cells['features'][i]['properties']['cell_id']\n    coords = grid_cells['features'][i]['geometry']['coordinates']\n    if id is not None and coords is not None: \n      cell_ID.append(id)\n      ID_to_coord[id] = coords\n\n#   nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n#   query_urls = []\n  \n#   stations = []\n  \n#   current_date = datetime.now()\n\n#   # Retrieve nearest stations for each grid cell\n#   for i in range(int(len(cell_ID))):\n#     for j in range(1):\n#       latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n#       longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n#       response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n#       webContent = response.read().decode('UTF-8')\n#       parsed_html = BeautifulSoup(webContent)\n\n#       snow_water_eq_table = parsed_html.find_all('table')[7]\n#       nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n#       stations.append(nearest_station)\n  \n#   # save stations somewhere for cache\n  \n#   print(\"Nearest station list is completed. Saving to cache..\")\n  \n#   with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n#     pickle.dump(stations, fp)\n          \n#   return stations\n\n# def get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n#   print(f\"Retrieving data from {start_date} to {end_date}\")\n#   # read the grid geometry file\n#   homedir = os.path.expanduser('~')\n#   print(homedir)\n#   # read grid cell\n#   github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n#   # read grid cell\n#   #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n#   #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n#   #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#   stations = get_nearest_stations_for_all_grids()\n\n#   start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n#   end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n#   # NOTE: this url only allows user to query one year's worth of data\n#   nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n#   dates = []\n#   snow_water_eq = []\n#   # Keep track of cell IDs for each time series\n#   new_cell_IDs = []\n\n#   # Retrieve time series snow water equivalent data for each grid cell's nearest station\n#   for i in range(len(stations)):\n\n#     if stations[i] != '\\nNo observations within 62 miles\\n':\n\n#       for j in range(end_date.year - start_date.year + 1):\n\n#         response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n#         webContent = response.read().decode('UTF-8')\n#         parsed_html = BeautifulSoup(webContent)\n\n#         data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n#         for k in range(len(data_table)):\n#           new_cell_IDs.append(cell_ID[i])\n#           dates.append(data_table[k].find_all('td')[0].text)\n#           snow_water_eq.append(data_table[k].find_all('td')[2].text)\n#     else:\n#       new_cell_IDs.append(cell_ID[i])\n#       dates.append('N/A')\n#       snow_water_eq.append('N/A')\n\n#   df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n#   df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n#   print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/2K5NVRTCsW5c', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\ntesting...\nStart to get nearest stations..\n",
  "history_begin_time" : 1657723618325,
  "history_end_time" : 1657723626628,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "dbKrjd9FlSS7",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n    grid_cells = geojson.load(f)\n  \n#   # Retrieve and store cell IDs and their corresponding coordinates\n#   cell_ID = []\n#   ID_to_coord = {}\n\n#   for i in range(len(grid_cells['features'])):\n#     id = grid_cells['features'][i]['properties']['cell_id']\n#     coords = grid_cells['features'][i]['geometry']['coordinates']\n#     if id is not None and coords is not None: \n#       cell_ID.append(id)\n#       ID_to_coord[id] = coords\n\n#   nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n#   query_urls = []\n  \n#   stations = []\n  \n#   current_date = datetime.now()\n\n#   # Retrieve nearest stations for each grid cell\n#   for i in range(int(len(cell_ID))):\n#     for j in range(1):\n#       latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n#       longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n#       response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n#       webContent = response.read().decode('UTF-8')\n#       parsed_html = BeautifulSoup(webContent)\n\n#       snow_water_eq_table = parsed_html.find_all('table')[7]\n#       nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n#       stations.append(nearest_station)\n  \n#   # save stations somewhere for cache\n  \n#   print(\"Nearest station list is completed. Saving to cache..\")\n  \n#   with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n#     pickle.dump(stations, fp)\n          \n#   return stations\n\n# def get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n#   print(f\"Retrieving data from {start_date} to {end_date}\")\n#   # read the grid geometry file\n#   homedir = os.path.expanduser('~')\n#   print(homedir)\n#   # read grid cell\n#   github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n#   # read grid cell\n#   #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n#   #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n#   #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#   stations = get_nearest_stations_for_all_grids()\n\n#   start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n#   end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n#   # NOTE: this url only allows user to query one year's worth of data\n#   nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n#   dates = []\n#   snow_water_eq = []\n#   # Keep track of cell IDs for each time series\n#   new_cell_IDs = []\n\n#   # Retrieve time series snow water equivalent data for each grid cell's nearest station\n#   for i in range(len(stations)):\n\n#     if stations[i] != '\\nNo observations within 62 miles\\n':\n\n#       for j in range(end_date.year - start_date.year + 1):\n\n#         response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n#         webContent = response.read().decode('UTF-8')\n#         parsed_html = BeautifulSoup(webContent)\n\n#         data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n#         for k in range(len(data_table)):\n#           new_cell_IDs.append(cell_ID[i])\n#           dates.append(data_table[k].find_all('td')[0].text)\n#           snow_water_eq.append(data_table[k].find_all('td')[2].text)\n#     else:\n#       new_cell_IDs.append(cell_ID[i])\n#       dates.append('N/A')\n#       snow_water_eq.append('N/A')\n\n#   df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n#   df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n#   print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/dbKrjd9FlSS7', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\ntesting...\nStart to get nearest stations..\n",
  "history_begin_time" : 1657723604044,
  "history_end_time" : 1657723612456,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "C0d9Lsg5NR1Y",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n#   filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n#   # Read in grid cells\n#   with open(filepath) as f:\n#     grid_cells = geojson.load(f)\n  \n#   # Retrieve and store cell IDs and their corresponding coordinates\n#   cell_ID = []\n#   ID_to_coord = {}\n\n#   for i in range(len(grid_cells['features'])):\n#     id = grid_cells['features'][i]['properties']['cell_id']\n#     coords = grid_cells['features'][i]['geometry']['coordinates']\n#     if id is not None and coords is not None: \n#       cell_ID.append(id)\n#       ID_to_coord[id] = coords\n\n#   nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n#   query_urls = []\n  \n#   stations = []\n  \n#   current_date = datetime.now()\n\n#   # Retrieve nearest stations for each grid cell\n#   for i in range(int(len(cell_ID))):\n#     for j in range(1):\n#       latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n#       longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n#       response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n#       webContent = response.read().decode('UTF-8')\n#       parsed_html = BeautifulSoup(webContent)\n\n#       snow_water_eq_table = parsed_html.find_all('table')[7]\n#       nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n#       stations.append(nearest_station)\n  \n#   # save stations somewhere for cache\n  \n#   print(\"Nearest station list is completed. Saving to cache..\")\n  \n#   with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n#     pickle.dump(stations, fp)\n          \n#   return stations\n\n# def get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n#   print(f\"Retrieving data from {start_date} to {end_date}\")\n#   # read the grid geometry file\n#   homedir = os.path.expanduser('~')\n#   print(homedir)\n#   # read grid cell\n#   github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n#   # read grid cell\n#   #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n#   #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n#   #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#   stations = get_nearest_stations_for_all_grids()\n\n#   start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n#   end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n#   # NOTE: this url only allows user to query one year's worth of data\n#   nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n#   dates = []\n#   snow_water_eq = []\n#   # Keep track of cell IDs for each time series\n#   new_cell_IDs = []\n\n#   # Retrieve time series snow water equivalent data for each grid cell's nearest station\n#   for i in range(len(stations)):\n\n#     if stations[i] != '\\nNo observations within 62 miles\\n':\n\n#       for j in range(end_date.year - start_date.year + 1):\n\n#         response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n#         webContent = response.read().decode('UTF-8')\n#         parsed_html = BeautifulSoup(webContent)\n\n#         data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n#         for k in range(len(data_table)):\n#           new_cell_IDs.append(cell_ID[i])\n#           dates.append(data_table[k].find_all('td')[0].text)\n#           snow_water_eq.append(data_table[k].find_all('td')[2].text)\n#     else:\n#       new_cell_IDs.append(cell_ID[i])\n#       dates.append('N/A')\n#       snow_water_eq.append('N/A')\n\n#   df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n#   df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n#   print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/C0d9Lsg5NR1Y', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\ntesting...\nStart to get nearest stations..\n",
  "history_begin_time" : 1657723582455,
  "history_end_time" : 1657723590128,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "pausxvA6pPK7",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n    grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n    id = grid_cells['features'][i]['properties']['cell_id']\n    coords = grid_cells['features'][i]['geometry']['coordinates']\n    if id is not None and coords is not None: \n      cell_ID.append(id)\n      ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n    for j in range(1):\n      latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n      longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n      response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n      webContent = response.read().decode('UTF-8')\n      parsed_html = BeautifulSoup(webContent)\n\n      snow_water_eq_table = parsed_html.find_all('table')[7]\n      nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n      stations.append(nearest_station)\n  \n  # save stations somewhere for cache\n  \n  print(\"Nearest station list is completed. Saving to cache..\")\n  \n  with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n    pickle.dump(stations, fp)\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  print(f\"Retrieving data from {start_date} to {end_date}\")\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n    if stations[i] != '\\nNo observations within 62 miles\\n':\n\n      for j in range(end_date.year - start_date.year + 1):\n\n        response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n        webContent = response.read().decode('UTF-8')\n        parsed_html = BeautifulSoup(webContent)\n\n        data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n        for k in range(len(data_table)):\n          new_cell_IDs.append(cell_ID[i])\n          dates.append(data_table[k].find_all('td')[0].text)\n          snow_water_eq.append(data_table[k].find_all('td')[2].text)\n    else:\n      new_cell_IDs.append(cell_ID[i])\n      dates.append('N/A')\n      snow_water_eq.append('N/A')\n\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "/Users/joe/gw-workspace/pausxvA6pPK7/data_snotel_real_time.py:75: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\nThe code that caused this warning is on line 75 of the file /Users/joe/gw-workspace/pausxvA6pPK7/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n  parsed_html = BeautifulSoup(webContent)\n",
  "history_begin_time" : 1657723522823,
  "history_end_time" : 1657723559609,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "ndEC5Lk60Xnd",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n    with open(cache_file, \"rb\") as fp:\n      return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n    id = grid_cells['features'][i]['properties']['cell_id']\n    coords = grid_cells['features'][i]['geometry']['coordinates']\n    if id is not None and coords is not None: \n      cell_ID.append(id)\n      ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n    for j in range(1):\n      latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n      longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n      response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n      webContent = response.read().decode('UTF-8')\n      parsed_html = BeautifulSoup(webContent)\n\n      snow_water_eq_table = parsed_html.find_all('table')[7]\n      nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n      stations.append(nearest_station)\n  \n  # save stations somewhere for cache\n  \n  print(\"Nearest station list is completed. Saving to cache..\")\n  \n  with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n    pickle.dump(stations, fp)\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  print(f\"Retrieving data from {start_date} to {end_date}\")\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n    if stations[i] != '\\nNo observations within 62 miles\\n':\n\n      for j in range(end_date.year - start_date.year + 1):\n\n        response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n        webContent = response.read().decode('UTF-8')\n        parsed_html = BeautifulSoup(webContent)\n\n        data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n        for k in range(len(data_table)):\n          new_cell_IDs.append(cell_ID[i])\n          dates.append(data_table[k].find_all('td')[0].text)\n          snow_water_eq.append(data_table[k].find_all('td')[2].text)\n    else:\n      new_cell_IDs.append(cell_ID[i])\n      dates.append('N/A')\n      snow_water_eq.append('N/A')\n\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "Running",
  "history_begin_time" : 1657723483547,
  "history_end_time" : 1657723520113,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "tBAal9o8alnZ",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\nprint(\"testing...\")\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n      with open(cache_file, \"rb\") as fp:\n          return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n  \n  # save stations somewhere for cache\n  \n  print(\"Nearest station list is completed. Saving to cache..\")\n  \n  with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n    pickle.dump(stations, fp)\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  print(f\"Retrieving data from {start_date} to {end_date}\")\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "Running",
  "history_begin_time" : 1657723247572,
  "history_end_time" : 1657723479709,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "89n4CSFpv48D",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n      with open(cache_file, \"rb\") as fp:\n          return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n  \n  # save stations somewhere for cache\n  \n  print(\"Nearest station list is completed. Saving to cache..\")\n  \n  with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n    pickle.dump(stations, fp)\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  print(f\"Retrieving data from {start_date} to {end_date}\")\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "Running",
  "history_begin_time" : 1657723181795,
  "history_end_time" : 1657723222839,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "TXUSvrxuTsss",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\ndef get_nearest_stations_for_all_grids():\n  \n  print(\"Start to get nearest stations..\")\n  \n  cache_file = f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\"\n  \n  if os.path.exists(cache_file):\n      with open(, \"rb\") as fp:\n          return pickle.load(fp)\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n  \n  # save stations somewhere for cache\n  \n  print(\"Nearest station list is completed. Saving to cache..\")\n  \n  with open(f\"{github_dir}/data/snowcast_provided/nearest_stations_grid_eval.pkl\", \"wb\") as fp:\n    pickle.dump(stations, fp)\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  print(f\"Retrieving data from {start_date} to {end_date}\")\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"All SNOTEL time series are saved.\")\n\nget_nearest_stations_for_all_grids()\n#get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "  File \"/Users/joe/gw-workspace/TXUSvrxuTsss/data_snotel_real_time.py\", line 39\n    with open(, \"rb\") as fp:\n              ^\nSyntaxError: invalid syntax\n",
  "history_begin_time" : 1657723142399,
  "history_end_time" : 1657723142485,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "CSt2h6DtFqI6",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\n\ntry:\n  from BeautifulSoup import BeautifulSoup\nexcept ImportError:\n  from bs4 import BeautifulSoup\n\ndef get_nearest_stations_for_all_grids():\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n          \n  # save stations somewhere for cache\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"Saved\")\n\nget_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "/Users/joe/gw-workspace/CSt2h6DtFqI6/data_snotel_real_time.py:68: GuessedAtParserWarning: No parser was explicitly specified, so I'm using the best available HTML parser for this system (\"lxml\"). This usually isn't a problem, but if you run this code on another system, or in a different virtual environment, it may use a different parser and behave differently.\nThe code that caused this warning is on line 68 of the file /Users/joe/gw-workspace/CSt2h6DtFqI6/data_snotel_real_time.py. To get rid of this warning, pass the additional argument 'features=\"lxml\"' to the BeautifulSoup constructor.\n  parsed_html = BeautifulSoup(webContent)\n",
  "history_begin_time" : 1657722616402,
  "history_end_time" : 1657722907783,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "OSWtH3AM9hv8",
  "history_input" : "\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nfrom datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nprint(sys.path)\n\ndef get_nearest_stations_for_all_grids():\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n          \n  # save stations somewhere for cache\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  try:\n      from BeautifulSoup import BeautifulSoup\n  except ImportError:\n      from bs4 import BeautifulSoup\n\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"Saved\")\n\nget_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/OSWtH3AM9hv8', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\n/Users/joe\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/OSWtH3AM9hv8/data_snotel_real_time.py\", line 132, in <module>\n    get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n  File \"/Users/joe/gw-workspace/OSWtH3AM9hv8/data_snotel_real_time.py\", line 90, in get_snotel_time_series\n    stations = get_nearest_stations_for_all_grids()\n  File \"/Users/joe/gw-workspace/OSWtH3AM9hv8/data_snotel_real_time.py\", line 62, in get_nearest_stations_for_all_grids\n    parsed_html = BeautifulSoup(webContent)\nNameError: name 'BeautifulSoup' is not defined\n",
  "history_begin_time" : 1657722575997,
  "history_end_time" : 1657722585169,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "1lfi8hciLztH",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nprint(sys.path)\n\ndef get_nearest_stations_for_all_grids():\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n  \n  current_date = datetime.now()\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = current_date.year, month = current_date.month, day = current_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n          \n  # save stations somewhere for cache\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  try:\n      from BeautifulSoup import BeautifulSoup\n  except ImportError:\n      from bs4 import BeautifulSoup\n\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"Saved\")\n\nget_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/1lfi8hciLztH', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\n/Users/joe\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/1lfi8hciLztH/data_snotel_real_time.py\", line 130, in <module>\n    get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n  File \"/Users/joe/gw-workspace/1lfi8hciLztH/data_snotel_real_time.py\", line 88, in get_snotel_time_series\n    stations = get_nearest_stations_for_all_grids()\n  File \"/Users/joe/gw-workspace/1lfi8hciLztH/data_snotel_real_time.py\", line 49, in get_nearest_stations_for_all_grids\n    current_date = datetime.now()\nAttributeError: module 'datetime' has no attribute 'now'\n",
  "history_begin_time" : 1657722524243,
  "history_end_time" : 1657722533065,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "ZtXLVBWGDmwb",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom snowcast_utils import *\nimport traceback\n\nprint(sys.path)\n\ndef get_nearest_stations_for_all_grids():\n  \n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n  \n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  \n  query_urls = []\n  \n  stations = []\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = start_date.year, month = start_date.month, day = start_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n          \n  # save stations somewhere for cache\n          \n  return stations\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  try:\n      from BeautifulSoup import BeautifulSoup\n  except ImportError:\n      from bs4 import BeautifulSoup\n\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  stations = get_nearest_stations_for_all_grids()\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"Saved\")\n\nget_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/ZtXLVBWGDmwb', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\n/Users/joe\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/ZtXLVBWGDmwb/data_snotel_real_time.py\", line 128, in <module>\n    get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n  File \"/Users/joe/gw-workspace/ZtXLVBWGDmwb/data_snotel_real_time.py\", line 86, in get_snotel_time_series\n    stations = get_nearest_stations_for_all_grids()\n  File \"/Users/joe/gw-workspace/ZtXLVBWGDmwb/data_snotel_real_time.py\", line 56, in get_nearest_stations_for_all_grids\n    response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = start_date.year, month = start_date.month, day = start_date.day))\nNameError: name 'start_date' is not defined\n",
  "history_begin_time" : 1657722402661,
  "history_end_time" : 1657722413189,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "ehMWOkjwzGkE",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom datetime import date\nfrom snowcast_utils import *\nimport traceback\n\nprint(sys.path)\n\ndef get_snotel_time_series(start_date = '2016-1-1', end_date = '2022-7-12'):\n  \n  \n  \n  try:\n      from BeautifulSoup import BeautifulSoup\n  except ImportError:\n      from bs4 import BeautifulSoup\n\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n\n\n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  test_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=1, day=1)\n  #print(test_noaa_query_url)\n\n  query_urls = []\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n\n  stations = []\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = start_date.year, month = start_date.month, day = start_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n\n\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"Saved\")\n\nget_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n",
  "history_output" : "today date = 2022-07-13\n/Users/joe\n2022-06-25 06:00:00\n['/Users/joe/gw-workspace/ehMWOkjwzGkE', '/Users/l21-n02609-comm/opt/anaconda3/lib/python39.zip', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/lib-dynload', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/aeosa', '/Users/joe/Documents/GitHub/twitterscraper', '/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/IPython/extensions']\n/Users/joe\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/ehMWOkjwzGkE/data_snotel_real_time.py\", line 128, in <module>\n    get_snotel_time_series(\"2022-06-01\", \"2022-06-02\")\n  File \"/Users/joe/gw-workspace/ehMWOkjwzGkE/data_snotel_real_time.py\", line 68, in get_snotel_time_series\n    start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\nAttributeError: module 'datetime' has no attribute 'strptime'\n",
  "history_begin_time" : 1657722177275,
  "history_end_time" : 1657722188251,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "mZgDbtZX493O",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom datetime import date\nfrom snowcast_utils import *\nimport traceback\n\nprint(sys.path)\n\ndef get_snotel_time_series():\n  \n  try:\n      from BeautifulSoup import BeautifulSoup\n  except ImportError:\n      from bs4 import BeautifulSoup\n\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n\n\n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  test_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=1, day=1)\n  #print(test_noaa_query_url)\n\n  start_date = '2016-1-1'\n  end_date = '2022-7-12'\n  query_urls = []\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n\n  stations = []\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = start_date.year, month = start_date.month, day = start_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n\n\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv\")\n  print(\"Saved\")\n\nget_snotel_time_series()\n",
  "history_output" : "",
  "history_begin_time" : 1657722125439,
  "history_end_time" : 1657722133477,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "i6L0QnAP3ReA",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\n# Write first python in Geoweaver\nimport pandas as pd\nimport os\nimport urllib.request, urllib.error, urllib.parse\nimport sys\nimport geojson\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\nfrom datetime import date\nfrom snowcast_utils import *\nimport traceback\n\nprint(sys.path)\n\ndef get_snotel_time_series():\n  \n  try:\n      from BeautifulSoup import BeautifulSoup\n  except ImportError:\n      from bs4 import BeautifulSoup\n\n  # read the grid geometry file\n  homedir = os.path.expanduser('~')\n  print(homedir)\n  # read grid cell\n  github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n  # read grid cell\n  #submission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\n  #all_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\n  #all_cell_coords_pd = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n  filepath = f\"{github_dir}/data/snowcast_provided/grid_cells_eval.geojson\"\n  # Read in grid cells\n  with open(filepath) as f:\n      grid_cells = geojson.load(f)\n\n\n  # Retrieve and store cell IDs and their corresponding coordinates\n  cell_ID = []\n  ID_to_coord = {}\n\n  for i in range(len(grid_cells['features'])):\n      id = grid_cells['features'][i]['properties']['cell_id']\n      coords = grid_cells['features'][i]['geometry']['coordinates']\n      if id is not None and coords is not None: \n          cell_ID.append(id)\n          ID_to_coord[id] = coords\n\n  nohrsc_url_format_string = \"https://www.nohrsc.noaa.gov/nearest/index.html?city={lat}%2C{lon}&county=&l=5&u=e&y={year}&m={month}&d={day}\"\n  test_noaa_query_url = nohrsc_url_format_string.format(lat=40.05352381745094, lon=-106.04027196859343, year=2022, month=1, day=1)\n  #print(test_noaa_query_url)\n\n  start_date = '2016-1-1'\n  end_date = '2022-7-12'\n  query_urls = []\n\n  start_date = datetime.strptime(start_date, \"%Y-%m-%d\")\n  end_date = datetime.strptime(end_date, \"%Y-%m-%d\")\n\n  stations = []\n\n  # Retrieve nearest stations for each grid cell\n  for i in range(int(len(cell_ID))):\n      for j in range(1):\n          latitude = round(ID_to_coord.get(cell_ID[i])[0][j][1], 2)\n          longitude = round(ID_to_coord.get(cell_ID[i])[0][j][0], 2)\n\n          #response = urllib.request.urlopen(test_noaa_query_url)\n          response = urllib.request.urlopen(nohrsc_url_format_string.format(lat = latitude, lon = longitude, year = start_date.year, month = start_date.month, day = start_date.day))\n          webContent = response.read().decode('UTF-8')\n          parsed_html = BeautifulSoup(webContent)\n\n          snow_water_eq_table = parsed_html.find_all('table')[7]\n          nearest_station = snow_water_eq_table.find_all('td')[0].text\n\n          stations.append(nearest_station)\n\n\n  # NOTE: this url only allows user to query one year's worth of data\n  nohrsc_time_series_url = 'https://www.nohrsc.noaa.gov/interactive/html/graph.html?station={station}&w=600&h=400&o=a&uc=0&by={start_year}&bm={start_month}&bd={start_day}&bh=0&ey={end_year}&em={end_month}&ed={end_day}&eh=23&data=1&units=0&region=us'\n\n  dates = []\n  snow_water_eq = []\n  # Keep track of cell IDs for each time series\n  new_cell_IDs = []\n\n  # Retrieve time series snow water equivalent data for each grid cell's nearest station\n  for i in range(len(stations)):\n\n      if stations[i] != '\\nNo observations within 62 miles\\n':\n\n          for j in range(end_date.year - start_date.year + 1):\n\n              response = urllib.request.urlopen(nohrsc_time_series_url.format(station = stations[i], start_year = start_date.year + j, start_month = start_date.month, start_day = start_date.day, end_year = end_date.year, end_month = end_date.month, end_day = end_date.day))\n              webContent = response.read().decode('UTF-8')\n              parsed_html = BeautifulSoup(webContent)\n\n              data_table = parsed_html.find_all('tbody')[3].find_all('tr')\n\n              for k in range(len(data_table)):\n                  new_cell_IDs.append(cell_ID[i])\n                  dates.append(data_table[k].find_all('td')[0].text)\n                  snow_water_eq.append(data_table[k].find_all('td')[2].text)\n\n      else:\n          new_cell_IDs.append(cell_ID[i])\n          dates.append('N/A')\n          snow_water_eq.append('N/A')\n\n\n  #time_series = [new_cell_IDs, dates, snow_water_eq]\n  #print(time_series)\n  df = pd.DataFrame({'cell_IDs': new_cell_IDs, 'date_times': dates, 'swe': snow_water_eq})\n  df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv')\n  print(\"Saved\")\n\nget_snotel_time_series()\n",
  "history_output" : "  File \"/Users/joe/gw-workspace/i6L0QnAP3ReA/data_snotel_real_time.py\", line 125\n    df.to_csv(f\"{github_dir}/data/snotel/SNOTEL_time_series_all_grid_eval.csv')\n                                                                               ^\nSyntaxError: EOL while scanning string literal\n",
  "history_begin_time" : 1657722089959,
  "history_end_time" : 1657722090211,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "lr1ja58rjmw",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nsnotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\ndf = snotel_point.get_daily_data(\n    datetime(2020, 1, 2), datetime(2020, 1, 20),\n    [snotel_point.ALLOWED_VARIABLES.SWE]\n)\nprint(df)",
  "history_output" : "                                                                        geometry  ...  datasource\ndatetime                  site                                                    ...            \n2020-01-02 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-03 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-04 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-05 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-06 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-07 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-08 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-09 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-10 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-11 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-12 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-13 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-14 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-15 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-16 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-17 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-18 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-19 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-20 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n[19 rows x 4 columns]\n",
  "history_begin_time" : 1654519487343,
  "history_end_time" : 1654519489546,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "TyafqfQQDnVh",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nsnotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\ndf = snotel_point.get_daily_data(\n    datetime(2020, 1, 2), datetime(2020, 1, 20),\n    [snotel_point.ALLOWED_VARIABLES.SWE]\n)\nprint(df)",
  "history_output" : "                                                                        geometry  ...  datasource\ndatetime                  site                                                    ...            \n2020-01-02 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-03 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-04 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-05 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-06 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-07 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-08 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-09 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-10 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-11 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-12 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-13 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-14 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-15 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-16 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-17 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-18 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-19 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-20 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n[19 rows x 4 columns]\n",
  "history_begin_time" : 1654519412744,
  "history_end_time" : 1654519415600,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "7YvDLFJgCKL5",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nsnotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\ndf = snotel_point.get_daily_data(\n    datetime(2020, 1, 2), datetime(2020, 1, 20),\n    [snotel_point.ALLOWED_VARIABLES.SWE]\n)\nprint(df)",
  "history_output" : "                                                                        geometry  ...  datasource\ndatetime                  site                                                    ...            \n2020-01-02 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-03 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-04 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-05 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-06 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-07 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-08 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-09 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-10 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-11 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-12 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-13 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-14 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-15 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-16 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-17 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-18 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-19 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-20 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n[19 rows x 4 columns]\n",
  "history_begin_time" : 1654352628137,
  "history_end_time" : 1654352630624,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "rk6VnLnSmQsu",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nsnotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\ndf = snotel_point.get_daily_data(\n    datetime(2020, 1, 2), datetime(2020, 1, 20),\n    [snotel_point.ALLOWED_VARIABLES.SWE]\n)\nprint(df)",
  "history_output" : "                                                                        geometry  ...  datasource\ndatetime                  site                                                    ...            \n2020-01-02 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-03 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-04 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-05 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-06 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-07 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-08 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-09 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-10 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-11 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-12 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-13 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-14 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-15 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-16 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-17 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-18 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-19 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n2020-01-20 08:00:00+00:00 713:CO:SNTL  POINT Z (-107.71389 37.89168 11080.00000)  ...        NRCS\n[19 rows x 4 columns]\n",
  "history_begin_time" : 1654290337491,
  "history_end_time" : 1654290340959,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "lIdSPYNQQx0T",
  "history_input" : "from datetime import datetime\nfrom metloom.pointdata import SnotelPointData\n\nsnotel_point = SnotelPointData(\"713:CO:SNTL\", \"MyStation\")\ndf = snotel_point.get_daily_data(\n    datetime(2020, 1, 2), datetime(2020, 1, 20),\n    [snotel_point.ALLOWED_VARIABLES.SWE]\n)\nprint(df)",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/lIdSPYNQQx0T/data_snotel_real_time.py\", line 2, in <module>\n    from metloom.pointdata import SnotelPointData\nModuleNotFoundError: No module named 'metloom'\n",
  "history_begin_time" : 1654290321059,
  "history_end_time" : 1654290321135,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "PGQqshu1imog",
  "history_input" : "import os\nfrom datetime import datetime\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom shapely.geometry import Point\nimport contextily as ctx\n\nimport ulmo # this library has big trouble in Python 3.9\n\nsites = ulmo.cuahsi.wof.get_sites(wsdlurl)\n\n#Preview first item in dictionary\nprint(next(iter(sites.items())))\n\nsites_df = pd.DataFrame.from_dict(sites, orient='index').dropna()\nprint(sites_df.head())\n\nsites_df['geometry'] = [Point(float(loc['longitude']), float(loc['latitude'])) for loc in sites_df['location']]\n\nsites_df = sites_df.drop(columns='location')\nsites_df = sites_df.astype({\"elevation_m\":float})\n\nprint(sites_df.head())\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL'])\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL']['site_property'])\n\nsites_gdf_all = gpd.GeoDataFrame(sites_df, crs='EPSG:4326')\nprint(sites_gdf_all.head())\n\nprint(sites_gdf_all.shape)\n\n#geojson of state polygons\nstates_url = 'http://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_5m.json'\nstates_gdf = gpd.read_file(states_url)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_all.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\n#This prevents matplotlib from updating the axes extent (states polygons cover larger area than SNOTEL points)\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_gdf_conus = sites_gdf_all[~(sites_gdf_all.index.str.contains('AK'))]\n\nprint(sites_gdf_conus.shape)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_conus.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_fn = 'snotel_conus_sites.json'\nif not os.path.exists(sites_fn):\n    sites_gdf_conus.to_file(sites_fn, driver='GeoJSON')\n\n    ",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/PGQqshu1imog/data_snotel_real_time.py\", line 10, in <module>\n    import ulmo # this library has big trouble in Python 3.9\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/__init__.py\", line 9, in <module>\n    from . import cpc\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/cpc/__init__.py\", line 1, in <module>\n    from . import drought\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/cpc/drought/__init__.py\", line 8, in <module>\n    from .core import get_data\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/cpc/drought/core.py\", line 19, in <module>\n    from ulmo import util\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/util/__init__.py\", line 1, in <module>\n    from .misc import (\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/util/misc.py\", line 8, in <module>\n    import urlparse\nModuleNotFoundError: No module named 'urlparse'\n",
  "history_begin_time" : 1654289821663,
  "history_end_time" : 1654289824479,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "zZDxYhYoYJa0",
  "history_input" : "import os\nfrom datetime import datetime\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom shapely.geometry import Point\nimport contextily as ctx\nimport ulmo\n\nsites = ulmo.cuahsi.wof.get_sites(wsdlurl)\n\n#Preview first item in dictionary\nprint(next(iter(sites.items())))\n\nsites_df = pd.DataFrame.from_dict(sites, orient='index').dropna()\nprint(sites_df.head())\n\nsites_df['geometry'] = [Point(float(loc['longitude']), float(loc['latitude'])) for loc in sites_df['location']]\n\nsites_df = sites_df.drop(columns='location')\nsites_df = sites_df.astype({\"elevation_m\":float})\n\nprint(sites_df.head())\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL'])\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL']['site_property'])\n\nsites_gdf_all = gpd.GeoDataFrame(sites_df, crs='EPSG:4326')\nprint(sites_gdf_all.head())\n\nprint(sites_gdf_all.shape)\n\n#geojson of state polygons\nstates_url = 'http://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_5m.json'\nstates_gdf = gpd.read_file(states_url)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_all.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\n#This prevents matplotlib from updating the axes extent (states polygons cover larger area than SNOTEL points)\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_gdf_conus = sites_gdf_all[~(sites_gdf_all.index.str.contains('AK'))]\n\nprint(sites_gdf_conus.shape)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_conus.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_fn = 'snotel_conus_sites.json'\nif not os.path.exists(sites_fn):\n    sites_gdf_conus.to_file(sites_fn, driver='GeoJSON')",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/zZDxYhYoYJa0/data_snotel_real_time.py\", line 9, in <module>\n    import ulmo\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/__init__.py\", line 9, in <module>\n    from . import cpc\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/cpc/__init__.py\", line 1, in <module>\n    from . import drought\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/cpc/drought/__init__.py\", line 8, in <module>\n    from .core import get_data\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/cpc/drought/core.py\", line 19, in <module>\n    from ulmo import util\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/util/__init__.py\", line 1, in <module>\n    from .misc import (\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/ulmo/util/misc.py\", line 8, in <module>\n    import urlparse\nModuleNotFoundError: No module named 'urlparse'\n",
  "history_begin_time" : 1653916164155,
  "history_end_time" : 1653916166101,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "z8rfe8YRjyRe",
  "history_input" : "import os\nfrom datetime import datetime\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom shapely.geometry import Point\nimport contextily as ctx\nimport ulmo\n\nsites = ulmo.cuahsi.wof.get_sites(wsdlurl)\n\n#Preview first item in dictionary\nprint(next(iter(sites.items())))\n\nsites_df = pd.DataFrame.from_dict(sites, orient='index').dropna()\nprint(sites_df.head())\n\nsites_df['geometry'] = [Point(float(loc['longitude']), float(loc['latitude'])) for loc in sites_df['location']]\n\nsites_df = sites_df.drop(columns='location')\nsites_df = sites_df.astype({\"elevation_m\":float})\n\nprint(sites_df.head())\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL'])\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL']['site_property'])\n\nsites_gdf_all = gpd.GeoDataFrame(sites_df, crs='EPSG:4326')\nprint(sites_gdf_all.head())\n\nprint(sites_gdf_all.shape)\n\n#geojson of state polygons\nstates_url = 'http://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_5m.json'\nstates_gdf = gpd.read_file(states_url)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_all.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\n#This prevents matplotlib from updating the axes extent (states polygons cover larger area than SNOTEL points)\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_gdf_conus = sites_gdf_all[~(sites_gdf_all.index.str.contains('AK'))]\n\nprint(sites_gdf_conus.shape)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_conus.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_fn = 'snotel_conus_sites.json'\nif not os.path.exists(sites_fn):\n    sites_gdf_conus.to_file(sites_fn, driver='GeoJSON')",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/z8rfe8YRjyRe/data_snotel_real_time.py\", line 9, in <module>\n    import ulmo\nModuleNotFoundError: No module named 'ulmo'\n",
  "history_begin_time" : 1653916136107,
  "history_end_time" : 1653916139031,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "NzcbQhlCCWbM",
  "history_input" : "import os\nfrom datetime import datetime\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport geopandas as gpd\nfrom shapely.geometry import Point\nimport contextily as ctx\nimport ulmo\n\nsites = ulmo.cuahsi.wof.get_sites(wsdlurl)\n\n#Preview first item in dictionary\nprint(next(iter(sites.items())))\n\nsites_df = pd.DataFrame.from_dict(sites, orient='index').dropna()\nprint(sites_df.head())\n\nsites_df['geometry'] = [Point(float(loc['longitude']), float(loc['latitude'])) for loc in sites_df['location']]\n\nsites_df = sites_df.drop(columns='location')\nsites_df = sites_df.astype({\"elevation_m\":float})\n\nprint(sites_df.head())\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL'])\n\nprint(sites_df.loc['SNOTEL:301_CA_SNTL']['site_property'])\n\nsites_gdf_all = gpd.GeoDataFrame(sites_df, crs='EPSG:4326')\nprint(sites_gdf_all.head())\n\nprint(sites_gdf_all.shape)\n\n#geojson of state polygons\nstates_url = 'http://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_040_00_5m.json'\nstates_gdf = gpd.read_file(states_url)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_all.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\n#This prevents matplotlib from updating the axes extent (states polygons cover larger area than SNOTEL points)\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_gdf_conus = sites_gdf_all[~(sites_gdf_all.index.str.contains('AK'))]\n\nprint(sites_gdf_conus.shape)\n\nf, ax = plt.subplots(figsize=(10,6))\nsites_gdf_conus.plot(ax=ax, column='elevation_m', markersize=3, cmap='inferno', legend=True, legend_kwds={'label': \"Elevation (m)\"})\nax.autoscale(False)\nstates_gdf.plot(ax=ax, facecolor='none', edgecolor='k', alpha=0.3);\n\nsites_fn = 'snotel_conus_sites.json'\nif not os.path.exists(sites_fn):\n    sites_gdf_conus.to_file(sites_fn, driver='GeoJSON')",
  "history_output" : "Traceback (most recent call last):\n  File \"/Users/joe/gw-workspace/NzcbQhlCCWbM/data_snotel_real_time.py\", line 8, in <module>\n    import contextily as ctx\nModuleNotFoundError: No module named 'contextily'\n",
  "history_begin_time" : 1653916109409,
  "history_end_time" : 1653916111149,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "o8yx8n0p3q8",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809171459,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "077tv13d7jq",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678201703976,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "kl9cli6d5n8",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1694185611220,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "00zzrmkejow",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677785529431,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "g3aqahoj6oq",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677797113227,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "b2qhn8jtjde",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677784516786,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "cnl0wffvk5a",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677785383331,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "922aliua10h",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677796528249,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "uh1yjazmxf1",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809306585,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "r06w84f6s0n",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809554689,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "rp7yvrqu5il",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809573432,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "bvwwwekerbq",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809840755,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "pve9eg5a7ni",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677867648651,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "oo39bdh3syu",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958291204,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "pnhf4bk9ued",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958754127,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "lbs8g6pi10s",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958849887,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "cq58wgks1fw",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958952866,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "j10ls6r0rrl",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677959583146,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "an2f5oemvia",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677959722641,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "0tb29i1h94l",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678201687060,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "1awjmh8amfv",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678206143123,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "vq8r3tfr6av",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678206378262,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "bh1an8rq9ck",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678883775447,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "5wfkjl0k26h",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678884535352,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ftheja41w4b",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678884140266,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "vchotc2lpu2",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678887010628,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "bg79nwrzx0r",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678884042282,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "t56j8cwk31d",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1682984800296,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},]
