[{
  "history_id" : "v26sq0khw9l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1717473609760,
  "history_end_time" : 1717473609760,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6s2k3bm0yq2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1717387237275,
  "history_end_time" : 1717387237275,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nxe0bmtpli2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1717300810270,
  "history_end_time" : 1717300810270,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "29saqdcy4w4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1717214410394,
  "history_end_time" : 1717214410394,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cem0le0oa40",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1717128010294,
  "history_end_time" : 1717128010294,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gxmmasros7m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1717041610076,
  "history_end_time" : 1717041610076,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wslvsow84ju",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716955210055,
  "history_end_time" : 1716955210055,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gxsf47bci6e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716868810913,
  "history_end_time" : 1716868810913,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bc07v4ozzc5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716817415364,
  "history_end_time" : 1716817415364,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "79hf1uzm47w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716797560680,
  "history_end_time" : 1716797560680,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "myusehycoxl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716782411307,
  "history_end_time" : 1716782411307,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "popw7zdvjf8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716777609650,
  "history_end_time" : 1716777609650,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g1wr83lg0zr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716774915381,
  "history_end_time" : 1716774915381,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "har21qr9z3o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716754065209,
  "history_end_time" : 1716754065209,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a6z9e97dep1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716751217923,
  "history_end_time" : 1716751217923,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1nh5nx11kbh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716750881097,
  "history_end_time" : 1716751199720,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "z0d1kfg90sf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716746640551,
  "history_end_time" : 1716746640551,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oz558fgp3z9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716696011218,
  "history_end_time" : 1716696011218,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x72csu2sh1h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716618219086,
  "history_end_time" : 1716618219086,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i4qopia4lz8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716609611260,
  "history_end_time" : 1716609611260,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bwn9rzmoeq8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716563756613,
  "history_end_time" : 1716563756613,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i2l5d05rhbq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716524704925,
  "history_end_time" : 1716524704925,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "brvxr6mjh5c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716523211155,
  "history_end_time" : 1716523211155,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wcqwgzyngf4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716521650274,
  "history_end_time" : 1716521650274,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fom5y4eld5n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716519590229,
  "history_end_time" : 1716519590229,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mmyk2tpoxh4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716513818378,
  "history_end_time" : 1716513818378,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bw60cdj37p7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716471261996,
  "history_end_time" : 1716471261996,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sa9673k1kqe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716436814345,
  "history_end_time" : 1716799400468,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "3gays06eted",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716422698123,
  "history_end_time" : 1716422827954,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "buyjaw4hcxt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716422518657,
  "history_end_time" : 1716422518657,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3p2puhy91hl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716418167765,
  "history_end_time" : 1716418167765,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a25tlxo29ls",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716350423708,
  "history_end_time" : 1716418192324,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "nzej3400pmx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716264025888,
  "history_end_time" : 1716418192347,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jj00nqg4a8t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716215991473,
  "history_end_time" : 1716220261664,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "x4w9ufwt4bf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716184844793,
  "history_end_time" : 1716216036784,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "eutzmeztx3c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716177613960,
  "history_end_time" : 1716418192152,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "f8xq5udojq9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716091214221,
  "history_end_time" : 1716418191186,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "uhwdbzjni69",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716062449472,
  "history_end_time" : 1716124523834,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "509ti8h7iie",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716043610008,
  "history_end_time" : 1716057482690,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4gfc7h7z9e8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716035693383,
  "history_end_time" : 1716036846667,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1t7hzijsq3j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716004810081,
  "history_end_time" : 1716418194208,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "znga21k9bmj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715982779458,
  "history_end_time" : 1716035691982,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "n2vn7ijgu7x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715980750520,
  "history_end_time" : 1715982778749,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "w5eeoxo5vwt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715972396953,
  "history_end_time" : 1715980749628,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hzv740qnsxw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715967265198,
  "history_end_time" : 1715972396085,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rbqqnn73c36",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715960695217,
  "history_end_time" : 1715967264442,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "yah4bo93pc7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715957532929,
  "history_end_time" : 1715960694162,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lzdlo3dhww6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715952722420,
  "history_end_time" : 1715957517346,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ruu2sar8iz5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715939821494,
  "history_end_time" : 1716418196287,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9arh8f1xupv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715937541762,
  "history_end_time" : 1715937541762,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "arsuvdhgpi2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715937326877,
  "history_end_time" : 1715937540118,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "en87mtv7fb9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715927549733,
  "history_end_time" : 1715927549733,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t25cscaygd7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715918413483,
  "history_end_time" : 1716418198302,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6twbm46zkit",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715832031386,
  "history_end_time" : 1716418197890,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "7myr6n8j7hh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715799528295,
  "history_end_time" : 1716418199584,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gz8r96uqfo7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715798138047,
  "history_end_time" : 1715799518112,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bvrahaksovm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715780310614,
  "history_end_time" : 1715780310614,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6ja9pkgc7he",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715755079601,
  "history_end_time" : 1715780309812,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "t7os3wekera",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715745613867,
  "history_end_time" : 1716418200340,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "38fwqkjkomc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715670775352,
  "history_end_time" : 1715670775352,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7bm1gi9sfhu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715668379789,
  "history_end_time" : 1715668379789,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gbfo6wg83zk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715660606915,
  "history_end_time" : 1715660606915,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "su4x28ckbu3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715659214620,
  "history_end_time" : 1716418201749,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "57ru0bko7e3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715657268440,
  "history_end_time" : 1715657268440,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nm5u98id0t6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715654494373,
  "history_end_time" : 1715654494373,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "61kvszfvvu8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715651069913,
  "history_end_time" : 1715654493204,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bb39u1lh94t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715635694114,
  "history_end_time" : 1715635694114,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8u1cm58vd5x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715631991581,
  "history_end_time" : 1715631991581,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fd1xa7yqtx1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715593112790,
  "history_end_time" : 1715593112790,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wxtxi4ubi3c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715588598062,
  "history_end_time" : 1715588598062,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1meoboqmryn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715580982632,
  "history_end_time" : 1715588593063,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ejkrwusxj7g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715577232573,
  "history_end_time" : 1715577232573,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8nfz5lcgd6t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715572814196,
  "history_end_time" : 1716418204354,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bjar5vpvgmp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715569180336,
  "history_end_time" : 1715569180336,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xazmf5ey131",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715566645003,
  "history_end_time" : 1715569179353,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gsdhw2lwb4s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715564159030,
  "history_end_time" : 1715566643900,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rgx7eyygwj5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715553269514,
  "history_end_time" : 1715553269514,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aqzx7j16kt4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715551757540,
  "history_end_time" : 1716418204472,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "npagqulzid4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715550036523,
  "history_end_time" : 1715551587893,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "p4ury99h0e2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715548411187,
  "history_end_time" : 1715551556739,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "7cmvj3jtm4x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715526734869,
  "history_end_time" : 1715548400467,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1te9923k0yk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715486409637,
  "history_end_time" : 1715486409637,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hs42n59zxha",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715400010256,
  "history_end_time" : 1715549424584,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "d53z75u938a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715313617451,
  "history_end_time" : 1715549423039,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "chk4d33ae3b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715227215306,
  "history_end_time" : 1715549422503,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "nyfs8zz4k1f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715140822812,
  "history_end_time" : 1715549421794,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vy49fsaxl2e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715054415422,
  "history_end_time" : 1715549421338,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "e3cpt7nbkrp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715045815912,
  "history_end_time" : 1715045815912,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uezpasc69rt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715045635664,
  "history_end_time" : 1715045800484,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6m91mgbgwr3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714998837603,
  "history_end_time" : 1714998837603,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q1t4g3d5w33",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714977337639,
  "history_end_time" : 1714977337639,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "irkihbotx6p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714968024498,
  "history_end_time" : 1715549419203,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "cd5lsumkg48",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714956083841,
  "history_end_time" : 1714956344019,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "vbx6zc",
  "indicator" : "Stopped"
},{
  "history_id" : "2v9b5bvrjrw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714944538763,
  "history_end_time" : 1714944767580,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "vbx6zc",
  "indicator" : "Stopped"
},{
  "history_id" : "n2yfzpcdugi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714943546233,
  "history_end_time" : 1715549417794,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "myvgjzl3ugd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714897025222,
  "history_end_time" : 1714897025222,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wslyhihz6k5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714894044214,
  "history_end_time" : 1714895139381,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1ulkeecjesl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714881609950,
  "history_end_time" : 1715549416952,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hdfmprsawq0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714409076798,
  "history_end_time" : 1714409076798,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ttnn80ocp5s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714407283858,
  "history_end_time" : 1714407283858,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ybeozqivgmx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714404800156,
  "history_end_time" : 1714404800156,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nup64ch0bo3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714363210352,
  "history_end_time" : 1715549415949,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9crn8d5f2c3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714362032750,
  "history_end_time" : 1714362032750,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p2luu0n8l2r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714355595267,
  "history_end_time" : 1714355595267,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2ovm46ccf4s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714351396920,
  "history_end_time" : 1714351396920,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "azpmhvn8x3y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714348539330,
  "history_end_time" : 1714348539330,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r05p20k1e98",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714345973309,
  "history_end_time" : 1714345973309,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "h8timaqcz4g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714343583947,
  "history_end_time" : 1714343583947,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "shakur8w01d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714340841836,
  "history_end_time" : 1714340841836,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4oc83trxa4a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714332798210,
  "history_end_time" : 1714332798210,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "og0worogxkh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714328816246,
  "history_end_time" : 1714328816246,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "we8xmkm4zym",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714323529120,
  "history_end_time" : 1714323529120,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hkwbdixxys7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714320354982,
  "history_end_time" : 1714320354982,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0dsrlrdd6u0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714315863153,
  "history_end_time" : 1714315863153,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "plygkmorlg7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714283543384,
  "history_end_time" : 1714315862072,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5zm8qied5tn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714281871002,
  "history_end_time" : 1714283515042,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "kgl3zuo8xne",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714276838535,
  "history_end_time" : 1714315876920,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xnx9kouwlzz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714274662770,
  "history_end_time" : 1714281869554,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ycsfnvprxhq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714272894780,
  "history_end_time" : 1714274352453,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zkk49r29or0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714265253471,
  "history_end_time" : 1714272892786,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "niepq6h4ksy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714265112687,
  "history_end_time" : 1714265250946,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8r2bbav74xz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714192736557,
  "history_end_time" : 1714265111669,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rodzbe6ug1r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714190418517,
  "history_end_time" : 1714274351058,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lf68l2068fg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714104009667,
  "history_end_time" : 1714274350455,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "mvt5lhmmxc9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714017609991,
  "history_end_time" : 1714274349942,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "itotkybr5yh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713931210296,
  "history_end_time" : 1714274349400,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "neyfa3b079t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713844809973,
  "history_end_time" : 1714274348795,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9tij2m0o4qf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713758409549,
  "history_end_time" : 1714274347364,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vk19oe9usih",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713672009996,
  "history_end_time" : 1714274346371,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xxrk5r58oku",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713585609830,
  "history_end_time" : 1714274345857,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "m75qbpow1zr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713499210038,
  "history_end_time" : 1714274345303,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "brur6l10soj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713412809261,
  "history_end_time" : 1714274344731,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fgwgdyib9y1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713326409389,
  "history_end_time" : 1714274343307,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bxncvrwnl5r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713283461377,
  "history_end_time" : 1713283461377,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9pdy3a0vj5q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713240009343,
  "history_end_time" : 1714274342603,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "d1h37qf5v3g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711771209996,
  "history_end_time" : 1711771209996,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "otrmya3mmsz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711684814006,
  "history_end_time" : 1714282476124,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "aumh0epd8pv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711598415423,
  "history_end_time" : 1714282474743,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "laotsf4u73h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711592280542,
  "history_end_time" : 1711592280542,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "08e738ddyro",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711592081980,
  "history_end_time" : 1711592081980,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "fmupj8rdd9c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711512016737,
  "history_end_time" : 1711512016737,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hx9a9ex6fl7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711425614488,
  "history_end_time" : 1714282483211,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "195djgtcsq6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711339213057,
  "history_end_time" : 1714282483873,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ibejrzodxk5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711252813826,
  "history_end_time" : 1711252813826,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iak4wlrpq8z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711166414481,
  "history_end_time" : 1711166414481,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7weglhvr71q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711080009406,
  "history_end_time" : 1711080009406,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q0pdukerff4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710993610053,
  "history_end_time" : 1714282484658,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ywkhevtagql",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710907209493,
  "history_end_time" : 1714282485307,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fefm8v9dguf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710820809139,
  "history_end_time" : 1714282486312,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "cro0ig0742t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710734409871,
  "history_end_time" : 1714282486978,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "l2u1j8k6xpl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710690214227,
  "history_end_time" : 1710690214227,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "sh64knn9psf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710648009565,
  "history_end_time" : 1714282488985,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5ti5xp6bg3f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710561609034,
  "history_end_time" : 1714282489557,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "yf4ao90qhls",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710475209646,
  "history_end_time" : 1714282490332,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8l575d22k4k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710388809628,
  "history_end_time" : 1714282490854,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bwbrgyen8jv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710302409713,
  "history_end_time" : 1714282491526,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "tu37pm5rs4d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710216009789,
  "history_end_time" : 1714282492145,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "c6zwdrgqj3l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710172046548,
  "history_end_time" : 1710172046548,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "tno3vf71l6i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710129609459,
  "history_end_time" : 1714282493758,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "a67pw39d0l7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710080234085,
  "history_end_time" : 1710080234085,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "d4rijxvyarf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710043209108,
  "history_end_time" : 1714282495100,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1zy20snk2sq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709998716312,
  "history_end_time" : 1709998716312,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fjndmr1yd3q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709956809398,
  "history_end_time" : 1714282495740,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "am6naduqecj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709924987618,
  "history_end_time" : 1709924987618,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vs560cdf8tx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709870410386,
  "history_end_time" : 1714282496864,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "tfl7mi73vpu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709845595340,
  "history_end_time" : 1709845595340,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sftfdb29c1d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709844621993,
  "history_end_time" : 1709844621993,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "45rgzi300vk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709842923421,
  "history_end_time" : 1709842923421,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "82hc5uzct08",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709827652633,
  "history_end_time" : 1709844621188,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "a078qdopfqo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709826138732,
  "history_end_time" : 1709826138732,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9jlorhmkfx2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709797240871,
  "history_end_time" : 1709797240871,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hu1itv16j8e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709791538009,
  "history_end_time" : 1709791538009,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v9wttr2c75u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709784009856,
  "history_end_time" : 1714282504748,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "61m9rhromsj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709778056685,
  "history_end_time" : 1709778056685,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nh0ofutwx65",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709774843645,
  "history_end_time" : 1709774843645,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nruv4cnccsu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709765244702,
  "history_end_time" : 1709774842953,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "h1yix55qr3f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709763117650,
  "history_end_time" : 1709765243452,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "a3zbnbw318f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709751527405,
  "history_end_time" : 1709751527405,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zrxjpia2j6a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709751443213,
  "history_end_time" : 1709751495342,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "aqs7vq50atu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709697609682,
  "history_end_time" : 1714282506693,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "s4q53q3lvnr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709611209089,
  "history_end_time" : 1714282507226,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "63n2u1awlfj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709524809291,
  "history_end_time" : 1714282507739,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "moz5skei6bb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709438409068,
  "history_end_time" : 1709438409068,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0pw06enl1p0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709352009454,
  "history_end_time" : 1709352009454,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ei7ugn5pfpf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709265609834,
  "history_end_time" : 1709265609834,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m11bjd7x6m6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709179209778,
  "history_end_time" : 1709179209778,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w846wqbnljt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709137313003,
  "history_end_time" : 1709137313003,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "x05k708tozp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709092809430,
  "history_end_time" : 1709092809430,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1fr8p8e3eyo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709085684239,
  "history_end_time" : 1709085684239,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "59nr65f56r2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709078942190,
  "history_end_time" : 1709085672816,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "qyx2ta67qni",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709038894881,
  "history_end_time" : 1709038894881,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "zns8qn6ju6o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709038873006,
  "history_end_time" : 1709038879075,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "sd7fyvbp2iz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709006408992,
  "history_end_time" : 1709006408992,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "81g64g7o8n8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708971826235,
  "history_end_time" : 1708971826235,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "ymu3uskk0jw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708958410906,
  "history_end_time" : 1708958410906,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "9t3w4iaqdwd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708954624237,
  "history_end_time" : 1708954624237,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "djgrabnizxj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708920009816,
  "history_end_time" : 1708920009816,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wz5bt66nafm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708833609502,
  "history_end_time" : 1708833609502,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mdp4wf16ef9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708747209262,
  "history_end_time" : 1708747209262,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "15hv3659pj3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708660809366,
  "history_end_time" : 1708660809366,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6a2vd6lk5fa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708574410045,
  "history_end_time" : 1708574410045,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b23xvrou5dr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708488010564,
  "history_end_time" : 1708488010564,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f7wi6rmfgye",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708401609282,
  "history_end_time" : 1708401609282,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y4ros4opfbp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708352215578,
  "history_end_time" : 1708352215578,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "5lhuh2ceest",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708348193313,
  "history_end_time" : 1708352214879,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "auo2wezbnbg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708315209441,
  "history_end_time" : 1708315209441,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "976f3nniq4a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708312689992,
  "history_end_time" : 1708312689992,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "oh8pm6vhjim",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708305309954,
  "history_end_time" : 1708312689142,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "4xiosdd64ks",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708242679335,
  "history_end_time" : 1708242679335,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "ydkp29hfmav",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708240733547,
  "history_end_time" : 1708240733547,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "x2slgcp7vie",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708238770034,
  "history_end_time" : 1708238770034,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "6q3ga02h3uc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708237144910,
  "history_end_time" : 1708237144910,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "i4c0v6gz4qk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708235187286,
  "history_end_time" : 1708235187286,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "ts6737ha0rw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708233874711,
  "history_end_time" : 1708233874711,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "dn9285acfws",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708228809551,
  "history_end_time" : 1708228809551,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mo1a4ddq4yg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708227613840,
  "history_end_time" : 1708227613840,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "rp8rdtlahor",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708142409760,
  "history_end_time" : 1708142409760,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nwt4gm6q103",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708056009616,
  "history_end_time" : 1708056009616,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "03preljixwu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707969609387,
  "history_end_time" : 1707969609387,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uqg47df81z6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707883209160,
  "history_end_time" : 1707883209160,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i60zyas7y1g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707796809680,
  "history_end_time" : 1707796809680,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "awn0ikjvxxp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707750669795,
  "history_end_time" : 1707750669795,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "h5uxqb0rui7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707710409726,
  "history_end_time" : 1707710409726,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3iqcdx2ohxk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707624009798,
  "history_end_time" : 1707624009798,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zzk58q6wmf9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707537608964,
  "history_end_time" : 1707537608964,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fajcpyl8hu6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707491746733,
  "history_end_time" : 1707491746733,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "vr611zyyug3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707484657974,
  "history_end_time" : 1707484657974,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "5l31nzm980p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707451210019,
  "history_end_time" : 1707451210019,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7gee21e25hx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707434644215,
  "history_end_time" : 1707434644215,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "bhtykloem6v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707432571832,
  "history_end_time" : 1707432571832,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "mu7u12k9kvq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707431129269,
  "history_end_time" : 1707432053961,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "pl8unrmm2du",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707418188696,
  "history_end_time" : 1707418188696,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "mahjd7",
  "indicator" : "Skipped"
},{
  "history_id" : "4qlflva6jqp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707413610379,
  "history_end_time" : 1707413610379,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "mahjd7",
  "indicator" : "Skipped"
},{
  "history_id" : "zuue0c9ssgd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707364809053,
  "history_end_time" : 1707364809053,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ssdyiuad4bc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707278409270,
  "history_end_time" : 1707278409270,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mdbpkl8sh78",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707192718906,
  "history_end_time" : 1707192718906,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aifysqakapq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707192009458,
  "history_end_time" : 1707448888659,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "pypudbk83aj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707189399153,
  "history_end_time" : 1707189399153,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z9htw0g0stf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707105609490,
  "history_end_time" : 1707750639198,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "det4wui9y7t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707019209507,
  "history_end_time" : 1707750639667,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1btmkwu30bw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706932809378,
  "history_end_time" : 1707750640211,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1uqpaa5hpjj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706846409855,
  "history_end_time" : 1707750640645,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "mnvxihjy0i9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706760010125,
  "history_end_time" : 1707750643303,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "iuyi9btk9us",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706673609650,
  "history_end_time" : 1707750643807,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6g160bl2l92",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706587209571,
  "history_end_time" : 1707750644991,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "87qlzlqskev",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706500809161,
  "history_end_time" : 1707750645667,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "176albnvtc5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706414409491,
  "history_end_time" : 1707750646112,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6oc09fevo7q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706366105924,
  "history_end_time" : 1706366105924,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "czs56zwot92",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706364888478,
  "history_end_time" : 1706364888478,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uuhqnr7znu5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706328009718,
  "history_end_time" : 1707750646911,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rjnd79dadoc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706280497992,
  "history_end_time" : 1706280497992,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rv7k1tzkjqw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706244881253,
  "history_end_time" : 1706244881253,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hxl6yo6cc4d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706241609905,
  "history_end_time" : 1706244810660,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "7ex1dq0v6jg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706155209775,
  "history_end_time" : 1706244801321,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jtuhmpke8yb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706068809284,
  "history_end_time" : 1706244800348,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ok18foif6dc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705982409171,
  "history_end_time" : 1706244799983,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rg94c59iaeg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705896759372,
  "history_end_time" : 1706244799018,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "33aegdt8i3x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705896009972,
  "history_end_time" : 1706244798538,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2igr26o1jb4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705849064221,
  "history_end_time" : 1706244798025,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "dzjid8equ7j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705809609110,
  "history_end_time" : 1705849649608,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bplzx1l2uax",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705793527278,
  "history_end_time" : 1705849647067,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "93802ubdlen",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705790835117,
  "history_end_time" : 1705790835117,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z4bar04dky2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705770628274,
  "history_end_time" : 1705849642253,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "92g6rw3bash",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705762761067,
  "history_end_time" : 1705849640897,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "140ji6n8lz4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705723209693,
  "history_end_time" : 1705789738457,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "m38ver9t94w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705636808997,
  "history_end_time" : 1705770636244,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "oo5peguxrds",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705550409475,
  "history_end_time" : 1705770635558,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "f9q51wbkfti",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705464009057,
  "history_end_time" : 1705770635071,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qvlzzxp3zoi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705422422548,
  "history_end_time" : 1705422422548,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u64od9l50u9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705377609626,
  "history_end_time" : 1705770633070,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4y2qil9f89h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705291209262,
  "history_end_time" : 1705770632188,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "pz8hzrdelob",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705278850601,
  "history_end_time" : 1705278850601,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a7xjhont2vw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705270952814,
  "history_end_time" : 1705270952814,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "527ysh0uidb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705204809707,
  "history_end_time" : 1705789662014,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ifsx5hv6bbm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705169057242,
  "history_end_time" : 1705169057242,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z2cpbws6hsu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705118409846,
  "history_end_time" : 1705789660783,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hpvnm58duys",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705072448193,
  "history_end_time" : 1705072448193,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n4x5vejfy4i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705032009697,
  "history_end_time" : 1705789659555,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5xr7rzgxwd7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704979918398,
  "history_end_time" : 1704979918398,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tuy8dn7qbog",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704945609832,
  "history_end_time" : 1705789658826,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rtpyounzor6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704918977862,
  "history_end_time" : 1704918977862,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rvvo50muynq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704908919879,
  "history_end_time" : 1704908919879,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "detst67tvjh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704859207768,
  "history_end_time" : 1705789668268,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xh8tb72008s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704775840767,
  "history_end_time" : 1704775840767,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n37qa3oyuzg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704772806976,
  "history_end_time" : 1705789667298,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "nknkv74ewpz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704726161294,
  "history_end_time" : 1704727049033,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "068u61vab45",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704686408564,
  "history_end_time" : 1705789666655,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "o7hcpc9x295",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704644803746,
  "history_end_time" : 1704644803746,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ezm9yh4de1e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704600008407,
  "history_end_time" : 1705789665929,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "yieo6bebnev",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704566156642,
  "history_end_time" : 1704566156642,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ydi4aquewsm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704565587399,
  "history_end_time" : 1704565587399,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pnnb9vfywtk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704564424173,
  "history_end_time" : 1704564424173,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mlvc9i5ah22",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704562992196,
  "history_end_time" : 1704562992196,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0q8k88fxex3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704561889813,
  "history_end_time" : 1704561889813,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hp0m1mqqh2j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704561861188,
  "history_end_time" : 1704561887042,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2xc1jon3i2i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704555479223,
  "history_end_time" : 1704555479223,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aro916hsmuu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704555028214,
  "history_end_time" : 1704555028214,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v1uk4wmrxx5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704553241784,
  "history_end_time" : 1704553241784,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tmht5vmng72",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704552254652,
  "history_end_time" : 1704552254652,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "iu9pajdkyea",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704513607547,
  "history_end_time" : 1705789671138,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "i49dzq6smgj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704427207747,
  "history_end_time" : 1705789671878,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ciz8xxen5k5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704340807764,
  "history_end_time" : 1705789673121,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xos45umqq5q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704330109338,
  "history_end_time" : 1704330109338,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b8sktctylmn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704329364885,
  "history_end_time" : 1704329364885,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eljti6cssvc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704254407721,
  "history_end_time" : 1705789675691,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "35pux2cssg7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704208947971,
  "history_end_time" : 1704208947971,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q28l46o6a02",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704207352033,
  "history_end_time" : 1704207352033,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fa94a30hxid",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704205859391,
  "history_end_time" : 1704205859391,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "911le4d0v3u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704168007576,
  "history_end_time" : 1705789676835,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "mjnvxdcldhj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704081607686,
  "history_end_time" : 1705789677628,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bto4p4dfizj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703995208617,
  "history_end_time" : 1705789678823,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rnemcfsrjah",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703962871419,
  "history_end_time" : 1703962871419,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6b5crpfns6c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703960265458,
  "history_end_time" : 1703960265458,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s10rnrlhax6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703959737863,
  "history_end_time" : 1703959737863,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v5wrc7u30a2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703958611606,
  "history_end_time" : 1703958611606,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6dldsuum4l6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703955838242,
  "history_end_time" : 1703955838242,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c59pdnpqtz5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703954150398,
  "history_end_time" : 1703954150398,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9xcxw47mini",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703915768087,
  "history_end_time" : 1703915768087,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u3rk67nate3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703915283503,
  "history_end_time" : 1703915283503,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4gay705ovjn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703914476659,
  "history_end_time" : 1703914476659,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b5khf08gl9z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703912302193,
  "history_end_time" : 1703912302193,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5r3knenx2u0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703908807335,
  "history_end_time" : 1705789681241,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "dnf1d8yun91",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703906215397,
  "history_end_time" : 1703906215397,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "254bbyf4dn5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703900919160,
  "history_end_time" : 1703900919160,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ivhihzmnv05",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703899837783,
  "history_end_time" : 1703899837783,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a6s5j0np4ht",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703897422967,
  "history_end_time" : 1703897422967,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "06tji9zwyxr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703896125601,
  "history_end_time" : 1703896125601,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "283o39gjznm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703890276007,
  "history_end_time" : 1703890276007,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dhsvixh061d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703886800825,
  "history_end_time" : 1703886800825,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uvns335ip9w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703885997783,
  "history_end_time" : 1703885997783,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vdx7okn54sk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703880194732,
  "history_end_time" : 1703880194732,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zokyi0fjamv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703872753050,
  "history_end_time" : 1703872753050,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vngdwp4bfdg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703869828250,
  "history_end_time" : 1703869828250,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "owjb1obbuil",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703868616948,
  "history_end_time" : 1703868616948,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b4mn5dl5mfp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703867114062,
  "history_end_time" : 1703867114062,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sc7eg8kqikz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703864885463,
  "history_end_time" : 1703864885463,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7pp9g4v3bbc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703862637390,
  "history_end_time" : 1703862637390,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "whwpaiaho44",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703827227370,
  "history_end_time" : 1703827227370,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k7w4gt7d5wl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703822411663,
  "history_end_time" : 1703822411663,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xm0fsns8q7y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703786924649,
  "history_end_time" : 1703789718830,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qutf81yp6qg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703786053503,
  "history_end_time" : 1703786917619,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "pmmfl0is0kd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703778395410,
  "history_end_time" : 1703778395410,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qrfqow09lzg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703739034625,
  "history_end_time" : 1703739034625,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7zxq4rdab7s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703738754673,
  "history_end_time" : 1703792459281,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "x32f703ejek",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703736166924,
  "history_end_time" : 1703737316890,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4zioe054xi4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703694763599,
  "history_end_time" : 1703694763599,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2a0iou86upa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703659541214,
  "history_end_time" : 1703659541214,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rzaeebq1nb6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703658144724,
  "history_end_time" : 1703658144724,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "khjchp3olvt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703650855788,
  "history_end_time" : 1703650855788,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q3ulmin4rzz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703646751550,
  "history_end_time" : 1703650812448,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wbsscmiq26v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703642120908,
  "history_end_time" : 1703646749629,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "whxe6tqnp3b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988964,
  "history_end_time" : 1703642074637,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bfzbpipnwi4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703629665521,
  "history_end_time" : 1703629665521,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gusza6v8f6c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703626688002,
  "history_end_time" : 1703627783062,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9jh69ex7gns",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703625782117,
  "history_end_time" : 1703625782117,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fsq2cjz7ejp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703624784041,
  "history_end_time" : 1703624784041,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aFc1Z0tUmDcj",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_all_active_stations_v1.csv_sorted.csv_time_series_cumulative_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  \n  pass\n\ndef check_amsr(row):\n  \n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  \n  pass\n\n\ndef check_observed_columns():\n  original_df = pd.read_csv(f\"{work_dir}/final_merged_data_3yrs_all_active_stations_v1.csv_sorted.csv\")\n  print(original_df.shape)\n  print(original_df.head())\n  empty_rows_count = original_df['swe_value'].isnull().sum()\n  print(f\"Number of empty rows in 'swe_value': {empty_rows_count}\")\n\nif __name__ == \"__main__\":\n  # random_sample.apply(check_gridmet, axis=1)\n  # random_sample.apply(check_elevation, axis=1)\n  # random_sample.apply(check_amsr, axis=1)\n  # random_sample.apply(check_snow_cover_area, axis=1)\n  # random_sample.apply(check_passive_microwave, axis=1)\n#   random_sample.apply(check_snotel_cdec, axis=1)\n  check_observed_columns()\n\n  print(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-12-26\ntest start date:  2023-01-20\ntest end date:  2023-10-11\n/home/chetana\n2022275\n/home/chetana/gw-workspace/aFc1Z0tUmDcj/training_sanity_check.py:13: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.\n  df = pd.read_csv(current_training_csv_path)\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'station_name', 'swe_value',\n       'change_in_swe_inch', 'snow_depth', 'air_temperature_observed_f',\n       'air_temperature_tmmn',\n       ...\n       'cumulative_SWE', 'cumulative_air_temperature_tmmn',\n       'cumulative_potential_evapotranspiration',\n       'cumulative_mean_vapor_pressure_deficit',\n       'cumulative_relative_humidity_rmax',\n       'cumulative_relative_humidity_rmin', 'cumulative_precipitation_amount',\n       'cumulative_air_temperature_tmmx', 'cumulative_wind_speed',\n       'cumulative_fsca'],\n      dtype='object', length=107)\n              date       lat  ...  cumulative_wind_speed  cumulative_fsca\n13265   2019-01-22  32.85468  ...             554.600008       200.502745\n72216   2021-06-05  34.10000  ...            1074.100015       722.003002\n171298  2020-11-21  35.68906  ...             261.400003       319.994497\n306137  2021-09-12  36.46666  ...            1118.800011      1804.497536\n92108   2018-11-16  34.56666  ...             182.200002        22.498120\n75719   2021-01-24  34.11666  ...            2285.038222      1647.543720\n35967   2021-03-16  33.40682  ...            1070.600013      3429.673125\n249004  2020-09-06  36.23333  ...            1539.500016       801.005979\n90444   2020-04-27  34.55528  ...            1051.900010      1612.563340\n211190  2021-02-04  36.03333  ...            1849.080958      5660.813246\n[10 rows x 107 columns]\n(5831374, 26)\n         date       lat        lon  ...  Northness  Eastness  fsca\n0  2018-01-01  31.41666 -110.95000  ...   0.782593 -0.105243     0\n1  2018-01-01  31.54960 -100.50748  ...  -0.785356  0.012926   250\n2  2018-01-01  31.55000 -110.30000  ...   0.456880 -0.716468     0\n3  2018-01-01  31.63333 -110.16667  ...  -0.357024  0.747979     0\n4  2018-01-01  31.73333 -110.05000  ...   0.737351  0.396302     0\n[5 rows x 26 columns]\nNumber of empty rows in 'swe_value': 4393313\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1703621061559,
  "history_end_time" : 1703621157161,
  "history_notes" : "use dask here",
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "nrWXe2QCeG5i",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_all_active_stations_v1.csv_sorted.csv_time_series_cumulative_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  \n  pass\n\ndef check_amsr(row):\n  \n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  \n  pass\n\n\ndef check_observed_columns(training_df):\n  print(training_df.shape)\n  print(training_df.head())\n  empty_rows_count = training_df['swe_value'].isnull().sum()\n  print(f\"Number of empty rows in 'swe_value': {empty_rows_count}\")\n\nif __name__ == \"__main__\":\n  # random_sample.apply(check_gridmet, axis=1)\n  # random_sample.apply(check_elevation, axis=1)\n  # random_sample.apply(check_amsr, axis=1)\n  # random_sample.apply(check_snow_cover_area, axis=1)\n  # random_sample.apply(check_passive_microwave, axis=1)\n#   random_sample.apply(check_snotel_cdec, axis=1)\n  check_observed_columns(df)\n\n  print(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-12-26\ntest start date:  2023-01-20\ntest end date:  2023-10-11\n/home/chetana\n2022275\n/home/chetana/gw-workspace/nrWXe2QCeG5i/training_sanity_check.py:13: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.\n  df = pd.read_csv(current_training_csv_path)\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'station_name', 'swe_value',\n       'change_in_swe_inch', 'snow_depth', 'air_temperature_observed_f',\n       'air_temperature_tmmn',\n       ...\n       'cumulative_SWE', 'cumulative_air_temperature_tmmn',\n       'cumulative_potential_evapotranspiration',\n       'cumulative_mean_vapor_pressure_deficit',\n       'cumulative_relative_humidity_rmax',\n       'cumulative_relative_humidity_rmin', 'cumulative_precipitation_amount',\n       'cumulative_air_temperature_tmmx', 'cumulative_wind_speed',\n       'cumulative_fsca'],\n      dtype='object', length=107)\n               date       lat  ...  cumulative_wind_speed  cumulative_fsca\n266898   2020-06-27  36.66667  ...            1439.200017      4664.531161\n1118785  2020-11-02  39.88333  ...             180.600002       757.000000\n363450   2021-03-27  37.24465  ...            1043.500018      8574.011223\n1443612  2020-03-23  40.86293  ...             593.400005      7883.237900\n1453198  2021-09-07  40.88520  ...            1770.900024      8851.534792\n899406   2021-03-12  39.18083  ...             707.400004      4310.267492\n511551   2021-09-08  37.71433  ...            1726.800021     14856.501433\n1440316  2020-03-19  40.84758  ...             797.100008      8184.720119\n3065403  2020-07-28  47.97010  ...            1240.600016      9183.523896\n1811213  2020-01-29  42.35673  ...             399.500004      4164.394513\n[10 rows x 107 columns]\n(3288946, 107)\n         date       lat  ...  cumulative_wind_speed  cumulative_fsca\n0  2019-10-01  31.41666  ...                    5.1              0.0\n1  2019-10-02  31.41666  ...                    7.3              0.0\n2  2019-10-03  31.41666  ...                   10.2              0.0\n3  2019-10-04  31.41666  ...                   13.4              0.0\n4  2019-10-05  31.41666  ...                   15.8              0.0\n[5 rows x 107 columns]\nNumber of empty rows in 'swe_value': 0\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1703619665027,
  "history_end_time" : 1703619898675,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "DaMPAKy0WucN",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_all_active_stations_v1.csv_sorted.csv_time_series_cumulative_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  \n  pass\n\ndef check_amsr(row):\n  \n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  \n  pass\n\n\ndef check_observed_columns(training_df):\n  print(training_df.shape)\n  print(training_df.head())\n  empty_rows_count = training_df['swe_value'].isnull().sum()\n  print(f\"Number of empty rows in 'swe_value': {empty_rows_count}\")\n\nif __name__ == \"__main__\":\n  random_sample.apply(check_gridmet, axis=1)\n  # random_sample.apply(check_elevation, axis=1)\n  # random_sample.apply(check_amsr, axis=1)\n  # random_sample.apply(check_snow_cover_area, axis=1)\n  # random_sample.apply(check_passive_microwave, axis=1)\n#   random_sample.apply(check_snotel_cdec, axis=1)\n  check_observed_columns(df)\n\n  print(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-12-26\ntest start date:  2023-01-20\ntest end date:  2023-10-11\n/home/chetana\n2022275\n/home/chetana/gw-workspace/DaMPAKy0WucN/training_sanity_check.py:13: DtypeWarning: Columns (4) have mixed types. Specify dtype option on import or set low_memory=False.\n  df = pd.read_csv(current_training_csv_path)\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'station_name', 'swe_value',\n       'change_in_swe_inch', 'snow_depth', 'air_temperature_observed_f',\n       'air_temperature_tmmn',\n       ...\n       'cumulative_SWE', 'cumulative_air_temperature_tmmn',\n       'cumulative_potential_evapotranspiration',\n       'cumulative_mean_vapor_pressure_deficit',\n       'cumulative_relative_humidity_rmax',\n       'cumulative_relative_humidity_rmin', 'cumulative_precipitation_amount',\n       'cumulative_air_temperature_tmmx', 'cumulative_wind_speed',\n       'cumulative_fsca'],\n      dtype='object', length=107)\n               date       lat  ...  cumulative_wind_speed  cumulative_fsca\n1304301  2021-11-04  40.49167  ...             147.400001      1589.508567\n1058015  2021-03-14  39.62554  ...             934.200010      6808.219666\n490418   2020-02-20  37.63453  ...             574.600007      5834.514858\n1044547  2020-05-18  39.56666  ...             860.400010      5870.566751\n2192771  2020-11-26  43.98658  ...             184.200001       722.502687\n2709336  2020-07-30  45.98797  ...            5039.607248     14325.659025\n1666253  2021-06-09  41.75093  ...            1171.900013      8476.528397\n639656   2020-04-23  38.25000  ...            2522.334603        40.020107\n703734   2020-03-27  38.45000  ...            3249.238726     22385.955748\n2652338  2020-03-19  45.67008  ...             566.800004      5930.773768\n[10 rows x 107 columns]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFailed sanity check. Gridmet doesn't match\n",
  "history_begin_time" : 1703619038666,
  "history_end_time" : 1703619361884,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "XJmpDLY0a7Bv",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_all_active_stations_v1.csv_sorted.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  \n  pass\n\ndef check_amsr(row):\n  \n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  \n  pass\n\n\ndef check_observed_columns(training_df):\n  empty_rows_count = training_df['swe_value'].isnull().sum()\n  print(f\"Number of empty rows in 'swe_value': {empty_rows_count}\")\n\nif __name__ == \"__main__\":\n  random_sample.apply(check_gridmet, axis=1)\n  # random_sample.apply(check_elevation, axis=1)\n  # random_sample.apply(check_amsr, axis=1)\n  # random_sample.apply(check_snow_cover_area, axis=1)\n  # random_sample.apply(check_passive_microwave, axis=1)\n#   random_sample.apply(check_snotel_cdec, axis=1)\n  check_observed_columns(df)\n\n  print(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-12-26\ntest start date:  2023-01-20\ntest end date:  2023-10-11\n/home/chetana\n2022275\nall the current columns:  Index(['date', 'lat', 'lon', 'AMSR_SWE', 'station_name', 'swe_value',\n       'change_in_swe_inch', 'snow_depth', 'air_temperature_observed_f',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'stationTriplet', 'elevation',\n       'Elevation', 'Slope', 'Aspect', 'Curvature', 'Northness', 'Eastness',\n       'fsca'],\n      dtype='object')\n               date       lat        lon  ...  Northness  Eastness  fsca\n294281   2018-03-15  44.31666 -102.46666  ...   0.377161 -0.742778   250\n2600485  2019-10-15  43.02503 -118.94785  ...   0.747854  0.357529     0\n3972575  2020-09-23  37.37050 -108.23210  ...  -0.359536  0.747357     0\n2241541  2019-07-17  40.14000 -120.71500  ...  -0.554422 -0.665669     0\n3621654  2020-06-27  40.15000 -106.15000  ...  -0.766940 -0.260741   250\n823182   2018-07-26  37.75000 -109.46667  ...  -0.784640 -0.054963     0\n5099424  2021-07-01  48.20161 -114.51495  ...  -0.251328 -0.768352     0\n1056102  2018-09-22  41.51828 -111.74624  ...   0.743342  0.375068     0\n2378376  2019-08-20  45.00886 -106.83618  ...   0.738360  0.392873     0\n3491068  2020-05-25  44.39565 -118.02990  ...  -0.582421 -0.645076     0\n[10 rows x 26 columns]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nNumber of empty rows in 'swe_value': 4393313\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1703618938678,
  "history_end_time" : 1703619009425,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "tzd0WQHhGNs9",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_all_active_stations_v1.csv_sorted.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  \n  pass\n\ndef check_amsr(row):\n  \n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\n\nif __name__ == \"__main__\":\n  random_sample.apply(check_gridmet, axis=1)\n  # random_sample.apply(check_elevation, axis=1)\n  # random_sample.apply(check_amsr, axis=1)\n  # random_sample.apply(check_snow_cover_area, axis=1)\n  # random_sample.apply(check_passive_microwave, axis=1)\n  # random_sample.apply(check_snotel_cdec, axis=1)\n\n  print(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-12-26\ntest start date:  2023-01-20\ntest end date:  2023-10-11\n/home/chetana\n2022275\nall the current columns:  Index(['date', 'lat', 'lon', 'AMSR_SWE', 'station_name', 'swe_value',\n       'change_in_swe_inch', 'snow_depth', 'air_temperature_observed_f',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'stationTriplet', 'elevation',\n       'Elevation', 'Slope', 'Aspect', 'Curvature', 'Northness', 'Eastness',\n       'fsca'],\n      dtype='object')\n               date       lat        lon  ...  Northness  Eastness  fsca\n1589217  2019-02-03  38.26040 -104.72480  ...   0.464243 -0.713478   250\n1265086  2018-11-13  46.42996 -109.84074  ...   0.612550 -0.618379   250\n1880575  2019-04-17  42.41903 -111.23443  ...  -0.710010 -0.472454   250\n814191   2018-07-23  47.58318 -120.61953  ...  -0.720458  0.446613     0\n1640869  2019-02-16  38.27203 -119.45124  ...   0.755878  0.322191   250\n3262442  2020-03-29  42.06910 -122.61282  ...  -0.476486  0.708254   250\n4381865  2021-01-03  41.30500 -122.49300  ...  -0.631106 -0.598939   250\n3136819  2020-02-27  37.25800 -118.99700  ...   0.626955 -0.603519    49\n5242951  2021-08-06  46.34963 -121.51435  ...   0.766499  0.263586     0\n5332574  2021-08-29  38.98192 -111.24934  ...  -0.664794 -0.555713     0\n[10 rows x 26 columns]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2018.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1703615181599,
  "history_end_time" : 1703615205434,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "edb7vj3gnwu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702875592863,
  "history_end_time" : 1702875592863,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "37m6jlpl8oi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702871264390,
  "history_end_time" : 1702871264390,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sb0ymea34wv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702867996410,
  "history_end_time" : 1702867996410,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "52vvq0gfl0g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702866593408,
  "history_end_time" : 1702866593408,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v0ixmodj6aw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702866137656,
  "history_end_time" : 1702866137656,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zsy1ntmg856",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702657305652,
  "history_end_time" : 1702657305652,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "if536c855eq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702633223061,
  "history_end_time" : 1702633223061,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e6y4h9lblqu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702633156948,
  "history_end_time" : 1702633163905,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "y424k32ummx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702274520898,
  "history_end_time" : 1702274520898,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t5ccl6fssys",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702257109215,
  "history_end_time" : 1702257109215,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vuvlssoo0wa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702253506561,
  "history_end_time" : 1702253506561,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pct5jx3f9tw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702047800957,
  "history_end_time" : 1702047800957,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i2x91wm18ua",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702046671896,
  "history_end_time" : 1702047789490,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "q42kvj5fc4a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701838624132,
  "history_end_time" : 1701838624132,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e61lnqdwxwo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701272631494,
  "history_end_time" : 1701272875117,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "iq4ylywm3py",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701272152715,
  "history_end_time" : 1701272363361,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9onio9th837",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701269761364,
  "history_end_time" : 1701269761364,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aqn4bohirts",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701245472035,
  "history_end_time" : 1701245472035,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gyiags6kep2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701234300631,
  "history_end_time" : 1701234300631,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y15c3ewi2qf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701232375295,
  "history_end_time" : 1701234158048,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "t7n3cnm3iie",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701231048681,
  "history_end_time" : 1701231048681,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i779asabat8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701230933479,
  "history_end_time" : 1701230952354,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "kn10l2euuda",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701230796358,
  "history_end_time" : 1701230932261,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "e7dpl458hhz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701230384902,
  "history_end_time" : 1701230384902,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q1v52pbvk1x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701229983521,
  "history_end_time" : 1701229983521,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mv3u31u4i3v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228899385,
  "history_end_time" : 1701228899385,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r9qqjg4x3ds",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228374819,
  "history_end_time" : 1701228374819,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nyhogk9ryhy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228236356,
  "history_end_time" : 1701228236356,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "30okdz12syv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228118523,
  "history_end_time" : 1701228118523,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qmv26ki66cf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228056545,
  "history_end_time" : 1701228056545,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t0hweyc9o10",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701227912549,
  "history_end_time" : 1701227912549,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pdsrebu0k38",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701013937425,
  "history_end_time" : 1701015920043,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "37c2jpnh6f7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700974688743,
  "history_end_time" : 1700974688743,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eyj4ldddk6q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700885116861,
  "history_end_time" : 1700885116861,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "veszsbxy1cx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700471590218,
  "history_end_time" : 1700471590218,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9ihh6up4xl4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700468936455,
  "history_end_time" : 1700468936455,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zk5mpua6fwe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700461923062,
  "history_end_time" : 1700462913703,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lauun9lh09l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700448500155,
  "history_end_time" : 1700448500155,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ratia1tqjfj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700447319861,
  "history_end_time" : 1700447319861,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w38cqv1r03w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700230067261,
  "history_end_time" : 1700230067261,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qexfyga9lks",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700229012385,
  "history_end_time" : 1700229012385,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uyb4q5t8k1h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700210213827,
  "history_end_time" : 1700210213827,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "emzii06z22a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700209780179,
  "history_end_time" : 1700209780179,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kkwyzv7j5j0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700209729265,
  "history_end_time" : 1700209729265,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5ty1mwg5wl4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700203478703,
  "history_end_time" : 1700204245690,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fmhqoojxjmn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700201828283,
  "history_end_time" : 1700201828283,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rg8ql8pa4dv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700200332873,
  "history_end_time" : 1700200332873,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c6vaeiuo0e8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700145667884,
  "history_end_time" : 1700145667884,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n7v9asita7d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700143295324,
  "history_end_time" : 1700143295324,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ymjjjjy86yt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700141615827,
  "history_end_time" : 1700141615827,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4hjsk5t7zdg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700134126856,
  "history_end_time" : 1700134126856,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rrwx8uqdeda",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700133783724,
  "history_end_time" : 1700133783724,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rliu9wuzq3t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699992839777,
  "history_end_time" : 1699992839777,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bqkdql429qa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699982145476,
  "history_end_time" : 1699982145476,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "62w3h8w3brl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699941614818,
  "history_end_time" : 1699941614818,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "idkn9483033",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699939440630,
  "history_end_time" : 1699939440630,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pxxonymrxsr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699937910480,
  "history_end_time" : 1699937910480,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2wnd5zqhkjh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699805634721,
  "history_end_time" : 1699806085204,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "p4h37tv5so6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699684154082,
  "history_end_time" : 1705789690250,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xrpg5z4ix48",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699681071386,
  "history_end_time" : 1699681071386,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eepGBPRGwn4G",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  \n  pass\n\ndef check_amsr(row):\n  \n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-11-08\ntest start date:  2018-01-01\ntest end date:  2023-11-08\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...      aspect  eastness  northness\n668813  2022-05-20  39.786417 -120.879402  ...  342.312070 -0.294969   0.761193\n330556  2022-09-02  37.975414 -111.833366  ...  332.099430 -0.437671   0.723770\n632739  2020-03-06  47.456778 -115.705106  ...  103.955590  0.770420  -0.236651\n289384  2022-06-26  46.234160 -117.393939  ...  298.728700 -0.719908   0.448059\n192078  2019-01-20  45.262573 -117.169359  ...    4.690525  0.081592   0.783721\n377358  2020-08-08  38.918144 -120.205665  ...   40.579857  0.576732   0.649554\n322810  2020-07-22  37.975414 -111.833366  ...  332.099430 -0.437671   0.723770\n876585  2020-02-17  33.650385 -109.309100  ...   80.320560  0.778229   0.166578\n368505  2022-09-20  37.727154 -107.269925  ...  331.955400 -0.439491   0.723108\n168928  2020-02-24  48.929770 -121.193811  ...  188.099300 -0.139968  -0.780386\n[10 rows x 21 columns]\nAn error occurred while downloading the file: <urlopen error [Errno 110] Connection timed out>\nAn error occurred while downloading the file: <urlopen error [Errno 110] Connection timed out>\nAn error occurred while downloading the file: <urlopen error [Errno 110] Connection timed out>\nAn error occurred while downloading the file: <urlopen error [Errno 110] Connection timed out>\nAn error occurred while downloading the file: <urlopen error [Errno 110] Connection timed out>\n",
  "history_begin_time" : 1699402885196,
  "history_end_time" : 1699403626408,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "okf9yrqapqy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698228211031,
  "history_end_time" : 1698228211031,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yIaz1gmMy81L",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  \n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-25\ntest start date:  2023-05-26\ntest end date:  2023-10-25\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...      aspect  eastness  northness\n496907  2021-04-22  42.762907 -116.899865  ...  305.881650 -0.680947   0.530146\n785135  2019-02-01  40.562024 -111.653704  ...  154.835480  0.402056  -0.735620\n546103  2022-09-30  46.240373 -113.773728  ...  136.256180  0.604955  -0.625627\n878292  2020-11-11  48.431557 -113.935424  ...  117.194900  0.726960  -0.428675\n101397  2022-11-07  38.504580 -119.621760  ...   18.832296  0.312240   0.757903\n859896  2022-10-19  38.911155 -120.376345  ...  184.636410 -0.080657  -0.783759\n875647  2022-03-13  33.650385 -109.309100  ...   80.320560  0.778229   0.166578\n326859  2021-04-25  37.975414 -111.833366  ...  332.099430 -0.437671   0.723770\n899774  2021-11-23  42.079885 -123.340785  ...  184.790190 -0.083314  -0.783649\n277582  2020-05-13  41.685290 -111.420141  ...  354.065250 -0.103030   0.782711\n[10 rows x 21 columns]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698208556674,
  "history_end_time" : 1698208560590,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "BO3zhUZ1gl1g",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 10\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  \n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-25\ntest start date:  2023-05-26\ntest end date:  2023-10-25\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n397171  2020-05-30  37.385326 -118.912091  ...   65.84640  0.739652   0.388399\n676286  2021-05-25  38.890182 -106.955515  ...  188.39952 -0.145049  -0.780006\n558240  2019-03-12  36.314286 -118.615646  ...  246.76215 -0.743146  -0.375799\n310173  2021-05-28  42.299527 -110.674539  ...  120.18355  0.712806  -0.465862\n851290  2022-01-22  47.066609 -121.589071  ...  343.43826 -0.277684   0.764218\n936161  2019-06-20  47.274245 -121.337542  ...  328.17673 -0.485249   0.704307\n87366   2020-01-02  39.134482 -111.438108  ...  169.13013  0.186390  -0.776346\n500682  2020-01-26  43.938651 -110.440978  ...  178.96121  0.018127  -0.785316\n39153   2022-09-04  47.176636 -114.330683  ...  306.37845 -0.677853   0.535342\n702362  2021-06-21  41.779142 -116.028498  ...  287.36066 -0.762094   0.289975\n[10 rows x 21 columns]\ndate                            2020-05-30\nlat                              37.385326\nlon                            -118.912091\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          802884\nair_temperature_tmmn                 272.0\npotential_evapotranspiration           3.2\nmean_vapor_pressure_deficit           0.46\nrelative_humidity_rmax                90.5\nrelative_humidity_rmin                 9.2\nprecipitation_amount                   0.0\nair_temperature_tmmx                 289.2\nwind_speed                             1.8\nelevation                         3142.891\nslope                             46.79604\ncurvature                        2415.1184\naspect                             65.8464\neastness                          0.739652\nnorthness                         0.388399\nName: 397171, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\ndate                            2021-05-25\nlat                              38.890182\nlon                            -106.955515\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          365874\nair_temperature_tmmn                 271.3\npotential_evapotranspiration           4.8\nmean_vapor_pressure_deficit           1.49\nrelative_humidity_rmax                69.8\nrelative_humidity_rmin                19.9\nprecipitation_amount                   0.0\nair_temperature_tmmx                 289.3\nwind_speed                             4.9\nelevation                        3032.6316\nslope                             76.03361\ncurvature                         9069.726\naspect                           188.39952\neastness                         -0.145049\nnorthness                        -0.780006\nName: 676286, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\ndate                            2019-03-12\nlat                              36.314286\nlon                            -118.615646\nSWE                                    255\nFlag                                   255\nswe_value                             22.4\nUnnamed: 0                          537350\nair_temperature_tmmn                 264.3\npotential_evapotranspiration           3.0\nmean_vapor_pressure_deficit           0.35\nrelative_humidity_rmax               100.0\nrelative_humidity_rmin                21.0\nprecipitation_amount                   0.0\nair_temperature_tmmx                 278.4\nwind_speed                             5.3\nelevation                        2930.7275\nslope                            53.695515\ncurvature                        -10950.93\naspect                           246.76215\neastness                         -0.743146\nnorthness                        -0.375799\nName: 558240, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\ndate                            2021-05-28\nlat                              42.299527\nlon                            -110.674539\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          453477\nair_temperature_tmmn                 274.7\npotential_evapotranspiration           2.7\nmean_vapor_pressure_deficit           0.29\nrelative_humidity_rmax               100.0\nrelative_humidity_rmin           45.100002\nprecipitation_amount                   4.7\nair_temperature_tmmx                 287.7\nwind_speed                             2.8\nelevation                        2669.0112\nslope                            63.477413\ncurvature                       -3634.7256\naspect                           120.18355\neastness                          0.712806\nnorthness                        -0.465862\nName: 310173, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\ndate                            2022-01-22\nlat                              47.066609\nlon                            -121.589071\nSWE                                      0\nFlag                                   241\nswe_value                              9.8\nUnnamed: 0                           52581\nair_temperature_tmmn                 270.7\npotential_evapotranspiration           4.1\nmean_vapor_pressure_deficit           0.44\nrelative_humidity_rmax                99.3\nrelative_humidity_rmin                60.2\nprecipitation_amount                   0.0\nair_temperature_tmmx                 277.3\nwind_speed                             2.4\nelevation                         758.4437\nslope                            55.562225\ncurvature                          6754.87\naspect                           343.43826\neastness                         -0.277684\nnorthness                         0.764218\nName: 851290, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\ndate                            2019-06-20\nlat                              47.274245\nlon                            -121.337542\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          645490\nair_temperature_tmmn                 276.7\npotential_evapotranspiration           8.7\nmean_vapor_pressure_deficit           1.67\nrelative_humidity_rmax                93.9\nrelative_humidity_rmin                31.9\nprecipitation_amount                   0.0\nair_temperature_tmmx                 286.0\nwind_speed                             3.2\nelevation                        1087.2363\nslope                            52.227528\ncurvature                        -62.77138\naspect                           328.17673\neastness                         -0.485249\nnorthness                         0.704307\nName: 936161, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\ndate                            2020-01-02\nlat                              39.134482\nlon                            -111.438108\nSWE                                      0\nFlag                                   241\nswe_value                              3.5\nUnnamed: 0                          900091\nair_temperature_tmmn                 263.3\npotential_evapotranspiration           2.8\nmean_vapor_pressure_deficit           0.61\nrelative_humidity_rmax                84.4\nrelative_humidity_rmin                50.7\nprecipitation_amount                   1.1\nair_temperature_tmmx                 267.5\nwind_speed                             2.3\nelevation                        3221.4092\nslope                             72.78799\ncurvature                        -6479.865\naspect                           169.13013\neastness                           0.18639\nnorthness                        -0.776346\nName: 87366, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\ndate                            2020-01-26\nlat                              43.938651\nlon                            -110.440978\nSWE                                      0\nFlag                                   241\nswe_value                              7.6\nUnnamed: 0                          926833\nair_temperature_tmmn                 268.6\npotential_evapotranspiration           2.5\nmean_vapor_pressure_deficit           0.27\nrelative_humidity_rmax                70.8\nrelative_humidity_rmin           42.100002\nprecipitation_amount                  10.0\nair_temperature_tmmx                 274.0\nwind_speed                             3.6\nelevation                        2223.8767\nslope                             51.47747\ncurvature                        -74.89446\naspect                           178.96121\neastness                          0.018127\nnorthness                        -0.785316\nName: 500682, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\ndate                            2022-09-04\nlat                              47.176636\nlon                            -114.330683\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          239686\nair_temperature_tmmn                 286.3\npotential_evapotranspiration           0.3\nmean_vapor_pressure_deficit           1.37\nrelative_humidity_rmax                55.7\nrelative_humidity_rmin                24.0\nprecipitation_amount                   0.0\nair_temperature_tmmx                 295.8\nwind_speed                             3.1\nelevation                        1766.3296\nslope                             42.42503\ncurvature                       -11932.881\naspect                           306.37845\neastness                         -0.677853\nnorthness                         0.535342\nName: 39153, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\ndate                            2021-06-21\nlat                              41.779142\nlon                            -116.028498\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          474306\nair_temperature_tmmn                 282.2\npotential_evapotranspiration           6.0\nmean_vapor_pressure_deficit           1.25\nrelative_humidity_rmax                80.9\nrelative_humidity_rmin                35.3\nprecipitation_amount                   0.0\nair_temperature_tmmx                 302.5\nwind_speed                             2.9\nelevation                        2088.3218\nslope                             80.85415\ncurvature                       -1409.2012\naspect                           287.36066\neastness                         -0.762094\nnorthness                         0.289975\nName: 702362, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698208435683,
  "history_end_time" : 1698208439262,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "MGLU8A3T4XKe",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  \n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-25\ntest start date:  2023-05-26\ntest end date:  2023-10-25\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date       lat         lon  ...     aspect  eastness  northness\n986995  2019-03-25  43.51019 -121.975347  ...  302.42468 -0.701057   0.492179\n[1 rows x 21 columns]\ndate                            2019-03-25\nlat                               43.51019\nlon                            -121.975347\nSWE                                      0\nFlag                                   241\nswe_value                             21.7\nUnnamed: 0                          703803\nair_temperature_tmmn                 271.3\npotential_evapotranspiration           5.5\nmean_vapor_pressure_deficit           0.76\nrelative_humidity_rmax           82.700005\nrelative_humidity_rmin                 3.6\nprecipitation_amount                   0.0\nair_temperature_tmmx                 296.2\nwind_speed                             7.6\nelevation                        1453.4065\nslope                            51.855648\ncurvature                        3180.6292\naspect                           302.42468\neastness                         -0.701057\nnorthness                         0.492179\nName: 986995, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698208422866,
  "history_end_time" : 1698208426251,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "LW3MU0bGvxYN",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  download_gridmet_of_specific_variables(yearlist)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n\ndef check_elevation(row):\n  \n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n             date        lat         lon  ...     aspect  eastness  northness\n70086  2019-07-15  38.279274 -119.612776  ...  315.26376 -0.613301   0.617641\n[1 rows x 21 columns]\ndate                            2019-07-15\nlat                              38.279274\nlon                            -119.612776\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          521050\nair_temperature_tmmn                 279.6\npotential_evapotranspiration           6.4\nmean_vapor_pressure_deficit           1.57\nrelative_humidity_rmax                37.9\nrelative_humidity_rmin                25.5\nprecipitation_amount                   0.0\nair_temperature_tmmx                 283.0\nwind_speed                             2.9\nelevation                         2925.199\nslope                              71.3254\ncurvature                       -5626.0874\naspect                           315.26376\neastness                         -0.613301\nnorthness                         0.617641\nName: 70086, dtype: object\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698183787153,
  "history_end_time" : 1698183790469,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "rdQCjm11Hr6J",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  print(\"lat_diff: \", lat_diff)\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  print(\"training.csv value: \", row[\"air_temperature_tmmn\"])\n  \n  if str(tmmn_check_values) != str(row[\"air_temperature_tmmn\"]):\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n384968  2020-11-22  38.918144 -120.205665  ...  40.579857  0.576732   0.649554\n[1 rows x 21 columns]\ndate                            2020-11-22\nlat                              38.918144\nlon                            -120.205665\nSWE                                      0\nFlag                                   241\nswe_value                              1.9\nUnnamed: 0                          997040\nair_temperature_tmmn                 269.6\npotential_evapotranspiration           5.6\nmean_vapor_pressure_deficit           1.26\nrelative_humidity_rmax           58.600002\nrelative_humidity_rmin           35.600002\nprecipitation_amount                   0.5\nair_temperature_tmmx                 289.1\nwind_speed                             3.0\nelevation                        2481.0059\nslope                             76.83347\ncurvature                        -9113.715\naspect                           40.579857\neastness                          0.576732\nnorthness                         0.649554\nName: 384968, dtype: object\n[2020]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\n<class 'datetime.date'> 38.9181445 -120.205665\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 366, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2020-01-01 2020-01-02 ... 2020-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       306\n    last_early_slice:           366\n    last_provisional_slice:     360\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44155\nlat_diff:  [ 10.4818555   10.44018883  10.39852217  10.3568555   10.31518883\n  10.27352217  10.2318555   10.19018883  10.14852217  10.1068555\n  10.06518883  10.02352217   9.9818555    9.94018883   9.89852217\n   9.8568555    9.81518883   9.77352217   9.7318555    9.69018883\n   9.64852217   9.6068555    9.56518883   9.52352217   9.4818555\n   9.44018883   9.39852217   9.3568555    9.31518883   9.27352217\n   9.2318555    9.19018883   9.14852217   9.1068555    9.06518883\n   9.02352217   8.9818555    8.94018883   8.89852217   8.8568555\n   8.81518883   8.77352217   8.7318555    8.69018883   8.64852217\n   8.6068555    8.56518883   8.52352217   8.4818555    8.44018883\n   8.39852217   8.3568555    8.31518883   8.27352217   8.2318555\n   8.19018883   8.14852217   8.1068555    8.06518883   8.02352217\n   7.9818555    7.94018883   7.89852217   7.8568555    7.81518883\n   7.77352217   7.7318555    7.69018883   7.64852217   7.6068555\n   7.56518883   7.52352217   7.4818555    7.44018883   7.39852217\n   7.3568555    7.31518883   7.27352217   7.2318555    7.19018883\n   7.14852217   7.1068555    7.06518883   7.02352217   6.9818555\n   6.94018883   6.89852217   6.8568555    6.81518883   6.77352217\n   6.7318555    6.69018883   6.64852217   6.6068555    6.56518883\n   6.52352217   6.4818555    6.44018883   6.39852217   6.3568555\n   6.31518883   6.27352217   6.2318555    6.19018883   6.14852217\n   6.1068555    6.06518883   6.02352217   5.9818555    5.94018883\n   5.89852217   5.8568555    5.81518883   5.77352217   5.7318555\n   5.69018883   5.64852217   5.6068555    5.56518883   5.52352217\n   5.4818555    5.44018883   5.39852217   5.3568555    5.31518883\n   5.27352217   5.2318555    5.19018883   5.14852217   5.1068555\n   5.06518883   5.02352217   4.9818555    4.94018883   4.89852217\n   4.8568555    4.81518883   4.77352217   4.7318555    4.69018883\n   4.64852217   4.6068555    4.56518883   4.52352217   4.4818555\n   4.44018883   4.39852217   4.3568555    4.31518883   4.27352217\n   4.2318555    4.19018883   4.14852217   4.1068555    4.06518883\n   4.02352217   3.9818555    3.94018883   3.89852217   3.8568555\n   3.81518883   3.77352217   3.7318555    3.69018883   3.64852217\n   3.6068555    3.56518883   3.52352217   3.4818555    3.44018883\n   3.39852217   3.3568555    3.31518883   3.27352217   3.2318555\n   3.19018883   3.14852217   3.1068555    3.06518883   3.02352217\n   2.9818555    2.94018883   2.89852217   2.8568555    2.81518883\n   2.77352217   2.7318555    2.69018883   2.64852217   2.6068555\n   2.56518883   2.52352217   2.4818555    2.44018883   2.39852217\n   2.3568555    2.31518883   2.27352217   2.2318555    2.19018883\n   2.14852217   2.1068555    2.06518883   2.02352217   1.9818555\n   1.94018883   1.89852217   1.8568555    1.81518883   1.77352217\n   1.7318555    1.69018883   1.64852217   1.6068555    1.56518883\n   1.52352217   1.4818555    1.44018883   1.39852217   1.3568555\n   1.31518883   1.27352217   1.2318555    1.19018883   1.14852217\n   1.1068555    1.06518883   1.02352217   0.9818555    0.94018883\n   0.89852217   0.8568555    0.81518883   0.77352217   0.7318555\n   0.69018883   0.64852217   0.6068555    0.56518883   0.52352217\n   0.4818555    0.44018883   0.39852217   0.3568555    0.31518883\n   0.27352217   0.2318555    0.19018883   0.14852217   0.1068555\n   0.06518883   0.02352217  -0.0181445   -0.05981117  -0.10147783\n  -0.1431445   -0.18481117  -0.22647783  -0.2681445   -0.30981117\n  -0.35147783  -0.3931445   -0.43481117  -0.47647783  -0.5181445\n  -0.55981117  -0.60147783  -0.6431445   -0.68481117  -0.72647783\n  -0.7681445   -0.80981117  -0.85147783  -0.8931445   -0.93481117\n  -0.97647783  -1.0181445   -1.05981117  -1.10147783  -1.1431445\n  -1.18481117  -1.22647783  -1.2681445   -1.30981117  -1.35147783\n  -1.3931445   -1.43481117  -1.47647783  -1.5181445   -1.55981117\n  -1.60147783  -1.6431445   -1.68481117  -1.72647783  -1.7681445\n  -1.80981117  -1.85147783  -1.8931445   -1.93481117  -1.97647783\n  -2.0181445   -2.05981117  -2.10147783  -2.1431445   -2.18481117\n  -2.22647783  -2.2681445   -2.30981117  -2.35147783  -2.3931445\n  -2.43481117  -2.47647783  -2.5181445   -2.55981117  -2.60147783\n  -2.6431445   -2.68481117  -2.72647783  -2.7681445   -2.80981117\n  -2.85147783  -2.8931445   -2.93481117  -2.97647783  -3.0181445\n  -3.05981117  -3.10147783  -3.1431445   -3.18481117  -3.22647783\n  -3.2681445   -3.30981117  -3.35147783  -3.3931445   -3.43481117\n  -3.47647783  -3.5181445   -3.55981117  -3.60147783  -3.6431445\n  -3.68481117  -3.72647783  -3.7681445   -3.80981117  -3.85147783\n  -3.8931445   -3.93481117  -3.97647783  -4.0181445   -4.05981117\n  -4.10147783  -4.1431445   -4.18481117  -4.22647783  -4.2681445\n  -4.30981117  -4.35147783  -4.3931445   -4.43481117  -4.47647783\n  -4.5181445   -4.55981117  -4.60147783  -4.6431445   -4.68481117\n  -4.72647783  -4.7681445   -4.80981117  -4.85147783  -4.8931445\n  -4.93481117  -4.97647783  -5.0181445   -5.05981117  -5.10147783\n  -5.1431445   -5.18481117  -5.22647783  -5.2681445   -5.30981117\n  -5.35147783  -5.3931445   -5.43481117  -5.47647783  -5.5181445\n  -5.55981117  -5.60147783  -5.6431445   -5.68481117  -5.72647783\n  -5.7681445   -5.80981117  -5.85147783  -5.8931445   -5.93481117\n  -5.97647783  -6.0181445   -6.05981117  -6.10147783  -6.1431445\n  -6.18481117  -6.22647783  -6.2681445   -6.30981117  -6.35147783\n  -6.3931445   -6.43481117  -6.47647783  -6.5181445   -6.55981117\n  -6.60147783  -6.6431445   -6.68481117  -6.72647783  -6.7681445\n  -6.80981117  -6.85147783  -6.8931445   -6.93481117  -6.97647783\n  -7.0181445   -7.05981117  -7.10147783  -7.1431445   -7.18481117\n  -7.22647783  -7.2681445   -7.30981117  -7.35147783  -7.3931445\n  -7.43481117  -7.47647783  -7.5181445   -7.55981117  -7.60147783\n  -7.6431445   -7.68481117  -7.72647783  -7.7681445   -7.80981117\n  -7.85147783  -7.8931445   -7.93481117  -7.97647783  -8.0181445\n  -8.05981117  -8.10147783  -8.1431445   -8.18481117  -8.22647783\n  -8.2681445   -8.30981117  -8.35147783  -8.3931445   -8.43481117\n  -8.47647783  -8.5181445   -8.55981117  -8.60147783  -8.6431445\n  -8.68481117  -8.72647783  -8.7681445   -8.80981117  -8.85147783\n  -8.8931445   -8.93481117  -8.97647783  -9.0181445   -9.05981117\n  -9.10147783  -9.1431445   -9.18481117  -9.22647783  -9.2681445\n  -9.30981117  -9.35147783  -9.3931445   -9.43481117  -9.47647783\n  -9.5181445   -9.55981117  -9.60147783  -9.6431445   -9.68481117\n  -9.72647783  -9.7681445   -9.80981117  -9.85147783  -9.8931445\n  -9.93481117  -9.97647783 -10.0181445  -10.05981117 -10.10147783\n -10.1431445  -10.18481117 -10.22647783 -10.2681445  -10.30981117\n -10.35147783 -10.3931445  -10.43481117 -10.47647783 -10.5181445\n -10.55981117 -10.60147783 -10.6431445  -10.68481117 -10.72647783\n -10.7681445  -10.80981117 -10.85147783 -10.8931445  -10.93481117\n -10.97647783 -11.0181445  -11.05981117 -11.10147783 -11.1431445\n -11.18481117 -11.22647783 -11.2681445  -11.30981117 -11.35147783\n -11.3931445  -11.43481117 -11.47647783 -11.5181445  -11.55981117\n -11.60147783 -11.6431445  -11.68481117 -11.72647783 -11.7681445\n -11.80981117 -11.85147783 -11.8931445  -11.93481117 -11.97647783\n -12.0181445  -12.05981117 -12.10147783 -12.1431445  -12.18481117\n -12.22647783 -12.2681445  -12.30981117 -12.35147783 -12.3931445\n -12.43481117 -12.47647783 -12.5181445  -12.55981117 -12.60147783\n -12.6431445  -12.68481117 -12.72647783 -12.7681445  -12.80981117\n -12.85147783 -12.8931445  -12.93481117 -12.97647783 -13.0181445\n -13.05981117 -13.10147783 -13.1431445  -13.18481117 -13.22647783\n -13.2681445  -13.30981117 -13.35147783 -13.3931445  -13.43481117\n -13.47647783 -13.5181445  -13.55981117 -13.60147783 -13.6431445\n -13.68481117 -13.72647783 -13.7681445  -13.80981117 -13.85147783]\n<xarray.Dataset>\nDimensions:          (crs: 1)\nCoordinates:\n    lon              float64 -120.2\n    lat              float64 38.9\n    day              datetime64[ns] 2020-11-22\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       306\n    last_early_slice:           366\n    last_provisional_slice:     360\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\ntmmn values:  269.6\ntraining.csv value:  269.6\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698183521720,
  "history_end_time" : 1698183525080,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "rVuavEUI3rMK",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  print(\"lat_diff: \", lat_diff)\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  print(\"training.csv value: \", row[\"air_temperature_tmmn\"])\n  \n  if tmmn_check_values != row[\"air_temperature_tmmn\"]:\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n656848  2022-07-10  45.218295 -110.234365  ...  33.307423  0.502176   0.696155\n[1 rows x 21 columns]\ndate                            2022-07-10\nlat                              45.218295\nlon                            -110.234365\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          134875\nair_temperature_tmmn                 277.7\npotential_evapotranspiration           4.9\nmean_vapor_pressure_deficit           1.05\nrelative_humidity_rmax                69.0\nrelative_humidity_rmin                17.7\nprecipitation_amount                   0.0\nair_temperature_tmmx                 294.7\nwind_speed                             2.1\nelevation                         2974.851\nslope                             61.10683\ncurvature                       -2261.8494\naspect                           33.307423\neastness                          0.502176\nnorthness                         0.696155\nName: 656848, dtype: object\n[2022]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\n<class 'datetime.date'> 45.218295 -110.2343655\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2022-01-01 2022-01-02 ... 2022-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       305\n    last_early_slice:           365\n    last_provisional_slice:     359\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44750\nlat_diff:  [ 4.18170500e+00  4.14003833e+00  4.09837167e+00  4.05670500e+00\n  4.01503833e+00  3.97337167e+00  3.93170500e+00  3.89003833e+00\n  3.84837167e+00  3.80670500e+00  3.76503833e+00  3.72337167e+00\n  3.68170500e+00  3.64003833e+00  3.59837167e+00  3.55670500e+00\n  3.51503833e+00  3.47337167e+00  3.43170500e+00  3.39003833e+00\n  3.34837167e+00  3.30670500e+00  3.26503833e+00  3.22337167e+00\n  3.18170500e+00  3.14003833e+00  3.09837167e+00  3.05670500e+00\n  3.01503833e+00  2.97337167e+00  2.93170500e+00  2.89003833e+00\n  2.84837167e+00  2.80670500e+00  2.76503833e+00  2.72337167e+00\n  2.68170500e+00  2.64003833e+00  2.59837167e+00  2.55670500e+00\n  2.51503833e+00  2.47337167e+00  2.43170500e+00  2.39003833e+00\n  2.34837167e+00  2.30670500e+00  2.26503833e+00  2.22337167e+00\n  2.18170500e+00  2.14003833e+00  2.09837167e+00  2.05670500e+00\n  2.01503833e+00  1.97337167e+00  1.93170500e+00  1.89003833e+00\n  1.84837167e+00  1.80670500e+00  1.76503833e+00  1.72337167e+00\n  1.68170500e+00  1.64003833e+00  1.59837167e+00  1.55670500e+00\n  1.51503833e+00  1.47337167e+00  1.43170500e+00  1.39003833e+00\n  1.34837167e+00  1.30670500e+00  1.26503833e+00  1.22337167e+00\n  1.18170500e+00  1.14003833e+00  1.09837167e+00  1.05670500e+00\n  1.01503833e+00  9.73371667e-01  9.31705000e-01  8.90038333e-01\n  8.48371667e-01  8.06705000e-01  7.65038333e-01  7.23371667e-01\n  6.81705000e-01  6.40038333e-01  5.98371667e-01  5.56705000e-01\n  5.15038333e-01  4.73371667e-01  4.31705000e-01  3.90038333e-01\n  3.48371667e-01  3.06705000e-01  2.65038333e-01  2.23371667e-01\n  1.81705000e-01  1.40038333e-01  9.83716667e-02  5.67050000e-02\n  1.50383333e-02 -2.66283333e-02 -6.82950000e-02 -1.09961667e-01\n -1.51628333e-01 -1.93295000e-01 -2.34961667e-01 -2.76628333e-01\n -3.18295000e-01 -3.59961667e-01 -4.01628333e-01 -4.43295000e-01\n -4.84961667e-01 -5.26628333e-01 -5.68295000e-01 -6.09961667e-01\n -6.51628333e-01 -6.93295000e-01 -7.34961667e-01 -7.76628333e-01\n -8.18295000e-01 -8.59961667e-01 -9.01628333e-01 -9.43295000e-01\n -9.84961667e-01 -1.02662833e+00 -1.06829500e+00 -1.10996167e+00\n -1.15162833e+00 -1.19329500e+00 -1.23496167e+00 -1.27662833e+00\n -1.31829500e+00 -1.35996167e+00 -1.40162833e+00 -1.44329500e+00\n -1.48496167e+00 -1.52662833e+00 -1.56829500e+00 -1.60996167e+00\n -1.65162833e+00 -1.69329500e+00 -1.73496167e+00 -1.77662833e+00\n -1.81829500e+00 -1.85996167e+00 -1.90162833e+00 -1.94329500e+00\n -1.98496167e+00 -2.02662833e+00 -2.06829500e+00 -2.10996167e+00\n -2.15162833e+00 -2.19329500e+00 -2.23496167e+00 -2.27662833e+00\n -2.31829500e+00 -2.35996167e+00 -2.40162833e+00 -2.44329500e+00\n -2.48496167e+00 -2.52662833e+00 -2.56829500e+00 -2.60996167e+00\n -2.65162833e+00 -2.69329500e+00 -2.73496167e+00 -2.77662833e+00\n -2.81829500e+00 -2.85996167e+00 -2.90162833e+00 -2.94329500e+00\n -2.98496167e+00 -3.02662833e+00 -3.06829500e+00 -3.10996167e+00\n -3.15162833e+00 -3.19329500e+00 -3.23496167e+00 -3.27662833e+00\n -3.31829500e+00 -3.35996167e+00 -3.40162833e+00 -3.44329500e+00\n -3.48496167e+00 -3.52662833e+00 -3.56829500e+00 -3.60996167e+00\n -3.65162833e+00 -3.69329500e+00 -3.73496167e+00 -3.77662833e+00\n -3.81829500e+00 -3.85996167e+00 -3.90162833e+00 -3.94329500e+00\n -3.98496167e+00 -4.02662833e+00 -4.06829500e+00 -4.10996167e+00\n -4.15162833e+00 -4.19329500e+00 -4.23496167e+00 -4.27662833e+00\n -4.31829500e+00 -4.35996167e+00 -4.40162833e+00 -4.44329500e+00\n -4.48496167e+00 -4.52662833e+00 -4.56829500e+00 -4.60996167e+00\n -4.65162833e+00 -4.69329500e+00 -4.73496167e+00 -4.77662833e+00\n -4.81829500e+00 -4.85996167e+00 -4.90162833e+00 -4.94329500e+00\n -4.98496167e+00 -5.02662833e+00 -5.06829500e+00 -5.10996167e+00\n -5.15162833e+00 -5.19329500e+00 -5.23496167e+00 -5.27662833e+00\n -5.31829500e+00 -5.35996167e+00 -5.40162833e+00 -5.44329500e+00\n -5.48496167e+00 -5.52662833e+00 -5.56829500e+00 -5.60996167e+00\n -5.65162833e+00 -5.69329500e+00 -5.73496167e+00 -5.77662833e+00\n -5.81829500e+00 -5.85996167e+00 -5.90162833e+00 -5.94329500e+00\n -5.98496167e+00 -6.02662833e+00 -6.06829500e+00 -6.10996167e+00\n -6.15162833e+00 -6.19329500e+00 -6.23496167e+00 -6.27662833e+00\n -6.31829500e+00 -6.35996167e+00 -6.40162833e+00 -6.44329500e+00\n -6.48496167e+00 -6.52662833e+00 -6.56829500e+00 -6.60996167e+00\n -6.65162833e+00 -6.69329500e+00 -6.73496167e+00 -6.77662833e+00\n -6.81829500e+00 -6.85996167e+00 -6.90162833e+00 -6.94329500e+00\n -6.98496167e+00 -7.02662833e+00 -7.06829500e+00 -7.10996167e+00\n -7.15162833e+00 -7.19329500e+00 -7.23496167e+00 -7.27662833e+00\n -7.31829500e+00 -7.35996167e+00 -7.40162833e+00 -7.44329500e+00\n -7.48496167e+00 -7.52662833e+00 -7.56829500e+00 -7.60996167e+00\n -7.65162833e+00 -7.69329500e+00 -7.73496167e+00 -7.77662833e+00\n -7.81829500e+00 -7.85996167e+00 -7.90162833e+00 -7.94329500e+00\n -7.98496167e+00 -8.02662833e+00 -8.06829500e+00 -8.10996167e+00\n -8.15162833e+00 -8.19329500e+00 -8.23496167e+00 -8.27662833e+00\n -8.31829500e+00 -8.35996167e+00 -8.40162833e+00 -8.44329500e+00\n -8.48496167e+00 -8.52662833e+00 -8.56829500e+00 -8.60996167e+00\n -8.65162833e+00 -8.69329500e+00 -8.73496167e+00 -8.77662833e+00\n -8.81829500e+00 -8.85996167e+00 -8.90162833e+00 -8.94329500e+00\n -8.98496167e+00 -9.02662833e+00 -9.06829500e+00 -9.10996167e+00\n -9.15162833e+00 -9.19329500e+00 -9.23496167e+00 -9.27662833e+00\n -9.31829500e+00 -9.35996167e+00 -9.40162833e+00 -9.44329500e+00\n -9.48496167e+00 -9.52662833e+00 -9.56829500e+00 -9.60996167e+00\n -9.65162833e+00 -9.69329500e+00 -9.73496167e+00 -9.77662833e+00\n -9.81829500e+00 -9.85996167e+00 -9.90162833e+00 -9.94329500e+00\n -9.98496167e+00 -1.00266283e+01 -1.00682950e+01 -1.01099617e+01\n -1.01516283e+01 -1.01932950e+01 -1.02349617e+01 -1.02766283e+01\n -1.03182950e+01 -1.03599617e+01 -1.04016283e+01 -1.04432950e+01\n -1.04849617e+01 -1.05266283e+01 -1.05682950e+01 -1.06099617e+01\n -1.06516283e+01 -1.06932950e+01 -1.07349617e+01 -1.07766283e+01\n -1.08182950e+01 -1.08599617e+01 -1.09016283e+01 -1.09432950e+01\n -1.09849617e+01 -1.10266283e+01 -1.10682950e+01 -1.11099617e+01\n -1.11516283e+01 -1.11932950e+01 -1.12349617e+01 -1.12766283e+01\n -1.13182950e+01 -1.13599617e+01 -1.14016283e+01 -1.14432950e+01\n -1.14849617e+01 -1.15266283e+01 -1.15682950e+01 -1.16099617e+01\n -1.16516283e+01 -1.16932950e+01 -1.17349617e+01 -1.17766283e+01\n -1.18182950e+01 -1.18599617e+01 -1.19016283e+01 -1.19432950e+01\n -1.19849617e+01 -1.20266283e+01 -1.20682950e+01 -1.21099617e+01\n -1.21516283e+01 -1.21932950e+01 -1.22349617e+01 -1.22766283e+01\n -1.23182950e+01 -1.23599617e+01 -1.24016283e+01 -1.24432950e+01\n -1.24849617e+01 -1.25266283e+01 -1.25682950e+01 -1.26099617e+01\n -1.26516283e+01 -1.26932950e+01 -1.27349617e+01 -1.27766283e+01\n -1.28182950e+01 -1.28599617e+01 -1.29016283e+01 -1.29432950e+01\n -1.29849617e+01 -1.30266283e+01 -1.30682950e+01 -1.31099617e+01\n -1.31516283e+01 -1.31932950e+01 -1.32349617e+01 -1.32766283e+01\n -1.33182950e+01 -1.33599617e+01 -1.34016283e+01 -1.34432950e+01\n -1.34849617e+01 -1.35266283e+01 -1.35682950e+01 -1.36099617e+01\n -1.36516283e+01 -1.36932950e+01 -1.37349617e+01 -1.37766283e+01\n -1.38182950e+01 -1.38599617e+01 -1.39016283e+01 -1.39432950e+01\n -1.39849617e+01 -1.40266283e+01 -1.40682950e+01 -1.41099617e+01\n -1.41516283e+01 -1.41932950e+01 -1.42349617e+01 -1.42766283e+01\n -1.43182950e+01 -1.43599617e+01 -1.44016283e+01 -1.44432950e+01\n -1.44849617e+01 -1.45266283e+01 -1.45682950e+01 -1.46099617e+01\n -1.46516283e+01 -1.46932950e+01 -1.47349617e+01 -1.47766283e+01\n -1.48182950e+01 -1.48599617e+01 -1.49016283e+01 -1.49432950e+01\n -1.49849617e+01 -1.50266283e+01 -1.50682950e+01 -1.51099617e+01\n -1.51516283e+01 -1.51932950e+01 -1.52349617e+01 -1.52766283e+01\n -1.53182950e+01 -1.53599617e+01 -1.54016283e+01 -1.54432950e+01\n -1.54849617e+01 -1.55266283e+01 -1.55682950e+01 -1.56099617e+01\n -1.56516283e+01 -1.56932950e+01 -1.57349617e+01 -1.57766283e+01\n -1.58182950e+01 -1.58599617e+01 -1.59016283e+01 -1.59432950e+01\n -1.59849617e+01 -1.60266283e+01 -1.60682950e+01 -1.61099617e+01\n -1.61516283e+01 -1.61932950e+01 -1.62349617e+01 -1.62766283e+01\n -1.63182950e+01 -1.63599617e+01 -1.64016283e+01 -1.64432950e+01\n -1.64849617e+01 -1.65266283e+01 -1.65682950e+01 -1.66099617e+01\n -1.66516283e+01 -1.66932950e+01 -1.67349617e+01 -1.67766283e+01\n -1.68182950e+01 -1.68599617e+01 -1.69016283e+01 -1.69432950e+01\n -1.69849617e+01 -1.70266283e+01 -1.70682950e+01 -1.71099617e+01\n -1.71516283e+01 -1.71932950e+01 -1.72349617e+01 -1.72766283e+01\n -1.73182950e+01 -1.73599617e+01 -1.74016283e+01 -1.74432950e+01\n -1.74849617e+01 -1.75266283e+01 -1.75682950e+01 -1.76099617e+01\n -1.76516283e+01 -1.76932950e+01 -1.77349617e+01 -1.77766283e+01\n -1.78182950e+01 -1.78599617e+01 -1.79016283e+01 -1.79432950e+01\n -1.79849617e+01 -1.80266283e+01 -1.80682950e+01 -1.81099617e+01\n -1.81516283e+01 -1.81932950e+01 -1.82349617e+01 -1.82766283e+01\n -1.83182950e+01 -1.83599617e+01 -1.84016283e+01 -1.84432950e+01\n -1.84849617e+01 -1.85266283e+01 -1.85682950e+01 -1.86099617e+01\n -1.86516283e+01 -1.86932950e+01 -1.87349617e+01 -1.87766283e+01\n -1.88182950e+01 -1.88599617e+01 -1.89016283e+01 -1.89432950e+01\n -1.89849617e+01 -1.90266283e+01 -1.90682950e+01 -1.91099617e+01\n -1.91516283e+01 -1.91932950e+01 -1.92349617e+01 -1.92766283e+01\n -1.93182950e+01 -1.93599617e+01 -1.94016283e+01 -1.94432950e+01\n -1.94849617e+01 -1.95266283e+01 -1.95682950e+01 -1.96099617e+01\n -1.96516283e+01 -1.96932950e+01 -1.97349617e+01 -1.97766283e+01\n -1.98182950e+01 -1.98599617e+01 -1.99016283e+01 -1.99432950e+01\n -1.99849617e+01 -2.00266283e+01 -2.00682950e+01 -2.01099617e+01\n -2.01516283e+01]\n<xarray.Dataset>\nDimensions:          (crs: 1)\nCoordinates:\n    lon              float64 -110.2\n    lat              float64 45.23\n    day              datetime64[ns] 2022-07-10\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       305\n    last_early_slice:           365\n    last_provisional_slice:     359\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\ntmmn values:  277.7\ntraining.csv value:  277.7\nFailed sanity check. Gridmet doesn't match\n",
  "history_begin_time" : 1698183500295,
  "history_end_time" : 1698183503716,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "NjJweZaAQm5k",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  print(\"lat_diff: \", lat_diff)\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  if tmmn_check_values != row[\"air_temperature_tmmn\"]:\n    print(\"Failed sanity check. Gridmet doesn't match\")\n    exit(1)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n726381  2022-03-01  42.359297 -111.563872  ...  358.65628 -0.023446   0.785261\n[1 rows x 21 columns]\ndate                            2022-03-01\nlat                              42.359297\nlon                            -111.563872\nSWE                                    255\nFlag                                   255\nswe_value                              9.7\nUnnamed: 0                          185114\nair_temperature_tmmn                 270.2\npotential_evapotranspiration           4.6\nmean_vapor_pressure_deficit           0.58\nrelative_humidity_rmax               100.0\nrelative_humidity_rmin                26.2\nprecipitation_amount                   0.0\nair_temperature_tmmx                 273.2\nwind_speed                             2.9\nelevation                        2334.7449\nslope                             76.41468\ncurvature                        -5176.182\naspect                           358.65628\neastness                         -0.023446\nnorthness                         0.785261\nName: 726381, dtype: object\n[2022]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\n<class 'datetime.date'> 42.359297 -111.563872\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2022-01-01 2022-01-02 ... 2022-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       305\n    last_early_slice:           365\n    last_provisional_slice:     359\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44619\nlat_diff:  [ 7.04070300e+00  6.99903633e+00  6.95736967e+00  6.91570300e+00\n  6.87403633e+00  6.83236967e+00  6.79070300e+00  6.74903633e+00\n  6.70736967e+00  6.66570300e+00  6.62403633e+00  6.58236967e+00\n  6.54070300e+00  6.49903633e+00  6.45736967e+00  6.41570300e+00\n  6.37403633e+00  6.33236967e+00  6.29070300e+00  6.24903633e+00\n  6.20736967e+00  6.16570300e+00  6.12403633e+00  6.08236967e+00\n  6.04070300e+00  5.99903633e+00  5.95736967e+00  5.91570300e+00\n  5.87403633e+00  5.83236967e+00  5.79070300e+00  5.74903633e+00\n  5.70736967e+00  5.66570300e+00  5.62403633e+00  5.58236967e+00\n  5.54070300e+00  5.49903633e+00  5.45736967e+00  5.41570300e+00\n  5.37403633e+00  5.33236967e+00  5.29070300e+00  5.24903633e+00\n  5.20736967e+00  5.16570300e+00  5.12403633e+00  5.08236967e+00\n  5.04070300e+00  4.99903633e+00  4.95736967e+00  4.91570300e+00\n  4.87403633e+00  4.83236967e+00  4.79070300e+00  4.74903633e+00\n  4.70736967e+00  4.66570300e+00  4.62403633e+00  4.58236967e+00\n  4.54070300e+00  4.49903633e+00  4.45736967e+00  4.41570300e+00\n  4.37403633e+00  4.33236967e+00  4.29070300e+00  4.24903633e+00\n  4.20736967e+00  4.16570300e+00  4.12403633e+00  4.08236967e+00\n  4.04070300e+00  3.99903633e+00  3.95736967e+00  3.91570300e+00\n  3.87403633e+00  3.83236967e+00  3.79070300e+00  3.74903633e+00\n  3.70736967e+00  3.66570300e+00  3.62403633e+00  3.58236967e+00\n  3.54070300e+00  3.49903633e+00  3.45736967e+00  3.41570300e+00\n  3.37403633e+00  3.33236967e+00  3.29070300e+00  3.24903633e+00\n  3.20736967e+00  3.16570300e+00  3.12403633e+00  3.08236967e+00\n  3.04070300e+00  2.99903633e+00  2.95736967e+00  2.91570300e+00\n  2.87403633e+00  2.83236967e+00  2.79070300e+00  2.74903633e+00\n  2.70736967e+00  2.66570300e+00  2.62403633e+00  2.58236967e+00\n  2.54070300e+00  2.49903633e+00  2.45736967e+00  2.41570300e+00\n  2.37403633e+00  2.33236967e+00  2.29070300e+00  2.24903633e+00\n  2.20736967e+00  2.16570300e+00  2.12403633e+00  2.08236967e+00\n  2.04070300e+00  1.99903633e+00  1.95736967e+00  1.91570300e+00\n  1.87403633e+00  1.83236967e+00  1.79070300e+00  1.74903633e+00\n  1.70736967e+00  1.66570300e+00  1.62403633e+00  1.58236967e+00\n  1.54070300e+00  1.49903633e+00  1.45736967e+00  1.41570300e+00\n  1.37403633e+00  1.33236967e+00  1.29070300e+00  1.24903633e+00\n  1.20736967e+00  1.16570300e+00  1.12403633e+00  1.08236967e+00\n  1.04070300e+00  9.99036333e-01  9.57369667e-01  9.15703000e-01\n  8.74036333e-01  8.32369667e-01  7.90703000e-01  7.49036333e-01\n  7.07369667e-01  6.65703000e-01  6.24036333e-01  5.82369667e-01\n  5.40703000e-01  4.99036333e-01  4.57369667e-01  4.15703000e-01\n  3.74036333e-01  3.32369667e-01  2.90703000e-01  2.49036333e-01\n  2.07369667e-01  1.65703000e-01  1.24036333e-01  8.23696667e-02\n  4.07030000e-02 -9.63666667e-04 -4.26303333e-02 -8.42970000e-02\n -1.25963667e-01 -1.67630333e-01 -2.09297000e-01 -2.50963667e-01\n -2.92630333e-01 -3.34297000e-01 -3.75963667e-01 -4.17630333e-01\n -4.59297000e-01 -5.00963667e-01 -5.42630333e-01 -5.84297000e-01\n -6.25963667e-01 -6.67630333e-01 -7.09297000e-01 -7.50963667e-01\n -7.92630333e-01 -8.34297000e-01 -8.75963667e-01 -9.17630333e-01\n -9.59297000e-01 -1.00096367e+00 -1.04263033e+00 -1.08429700e+00\n -1.12596367e+00 -1.16763033e+00 -1.20929700e+00 -1.25096367e+00\n -1.29263033e+00 -1.33429700e+00 -1.37596367e+00 -1.41763033e+00\n -1.45929700e+00 -1.50096367e+00 -1.54263033e+00 -1.58429700e+00\n -1.62596367e+00 -1.66763033e+00 -1.70929700e+00 -1.75096367e+00\n -1.79263033e+00 -1.83429700e+00 -1.87596367e+00 -1.91763033e+00\n -1.95929700e+00 -2.00096367e+00 -2.04263033e+00 -2.08429700e+00\n -2.12596367e+00 -2.16763033e+00 -2.20929700e+00 -2.25096367e+00\n -2.29263033e+00 -2.33429700e+00 -2.37596367e+00 -2.41763033e+00\n -2.45929700e+00 -2.50096367e+00 -2.54263033e+00 -2.58429700e+00\n -2.62596367e+00 -2.66763033e+00 -2.70929700e+00 -2.75096367e+00\n -2.79263033e+00 -2.83429700e+00 -2.87596367e+00 -2.91763033e+00\n -2.95929700e+00 -3.00096367e+00 -3.04263033e+00 -3.08429700e+00\n -3.12596367e+00 -3.16763033e+00 -3.20929700e+00 -3.25096367e+00\n -3.29263033e+00 -3.33429700e+00 -3.37596367e+00 -3.41763033e+00\n -3.45929700e+00 -3.50096367e+00 -3.54263033e+00 -3.58429700e+00\n -3.62596367e+00 -3.66763033e+00 -3.70929700e+00 -3.75096367e+00\n -3.79263033e+00 -3.83429700e+00 -3.87596367e+00 -3.91763033e+00\n -3.95929700e+00 -4.00096367e+00 -4.04263033e+00 -4.08429700e+00\n -4.12596367e+00 -4.16763033e+00 -4.20929700e+00 -4.25096367e+00\n -4.29263033e+00 -4.33429700e+00 -4.37596367e+00 -4.41763033e+00\n -4.45929700e+00 -4.50096367e+00 -4.54263033e+00 -4.58429700e+00\n -4.62596367e+00 -4.66763033e+00 -4.70929700e+00 -4.75096367e+00\n -4.79263033e+00 -4.83429700e+00 -4.87596367e+00 -4.91763033e+00\n -4.95929700e+00 -5.00096367e+00 -5.04263033e+00 -5.08429700e+00\n -5.12596367e+00 -5.16763033e+00 -5.20929700e+00 -5.25096367e+00\n -5.29263033e+00 -5.33429700e+00 -5.37596367e+00 -5.41763033e+00\n -5.45929700e+00 -5.50096367e+00 -5.54263033e+00 -5.58429700e+00\n -5.62596367e+00 -5.66763033e+00 -5.70929700e+00 -5.75096367e+00\n -5.79263033e+00 -5.83429700e+00 -5.87596367e+00 -5.91763033e+00\n -5.95929700e+00 -6.00096367e+00 -6.04263033e+00 -6.08429700e+00\n -6.12596367e+00 -6.16763033e+00 -6.20929700e+00 -6.25096367e+00\n -6.29263033e+00 -6.33429700e+00 -6.37596367e+00 -6.41763033e+00\n -6.45929700e+00 -6.50096367e+00 -6.54263033e+00 -6.58429700e+00\n -6.62596367e+00 -6.66763033e+00 -6.70929700e+00 -6.75096367e+00\n -6.79263033e+00 -6.83429700e+00 -6.87596367e+00 -6.91763033e+00\n -6.95929700e+00 -7.00096367e+00 -7.04263033e+00 -7.08429700e+00\n -7.12596367e+00 -7.16763033e+00 -7.20929700e+00 -7.25096367e+00\n -7.29263033e+00 -7.33429700e+00 -7.37596367e+00 -7.41763033e+00\n -7.45929700e+00 -7.50096367e+00 -7.54263033e+00 -7.58429700e+00\n -7.62596367e+00 -7.66763033e+00 -7.70929700e+00 -7.75096367e+00\n -7.79263033e+00 -7.83429700e+00 -7.87596367e+00 -7.91763033e+00\n -7.95929700e+00 -8.00096367e+00 -8.04263033e+00 -8.08429700e+00\n -8.12596367e+00 -8.16763033e+00 -8.20929700e+00 -8.25096367e+00\n -8.29263033e+00 -8.33429700e+00 -8.37596367e+00 -8.41763033e+00\n -8.45929700e+00 -8.50096367e+00 -8.54263033e+00 -8.58429700e+00\n -8.62596367e+00 -8.66763033e+00 -8.70929700e+00 -8.75096367e+00\n -8.79263033e+00 -8.83429700e+00 -8.87596367e+00 -8.91763033e+00\n -8.95929700e+00 -9.00096367e+00 -9.04263033e+00 -9.08429700e+00\n -9.12596367e+00 -9.16763033e+00 -9.20929700e+00 -9.25096367e+00\n -9.29263033e+00 -9.33429700e+00 -9.37596367e+00 -9.41763033e+00\n -9.45929700e+00 -9.50096367e+00 -9.54263033e+00 -9.58429700e+00\n -9.62596367e+00 -9.66763033e+00 -9.70929700e+00 -9.75096367e+00\n -9.79263033e+00 -9.83429700e+00 -9.87596367e+00 -9.91763033e+00\n -9.95929700e+00 -1.00009637e+01 -1.00426303e+01 -1.00842970e+01\n -1.01259637e+01 -1.01676303e+01 -1.02092970e+01 -1.02509637e+01\n -1.02926303e+01 -1.03342970e+01 -1.03759637e+01 -1.04176303e+01\n -1.04592970e+01 -1.05009637e+01 -1.05426303e+01 -1.05842970e+01\n -1.06259637e+01 -1.06676303e+01 -1.07092970e+01 -1.07509637e+01\n -1.07926303e+01 -1.08342970e+01 -1.08759637e+01 -1.09176303e+01\n -1.09592970e+01 -1.10009637e+01 -1.10426303e+01 -1.10842970e+01\n -1.11259637e+01 -1.11676303e+01 -1.12092970e+01 -1.12509637e+01\n -1.12926303e+01 -1.13342970e+01 -1.13759637e+01 -1.14176303e+01\n -1.14592970e+01 -1.15009637e+01 -1.15426303e+01 -1.15842970e+01\n -1.16259637e+01 -1.16676303e+01 -1.17092970e+01 -1.17509637e+01\n -1.17926303e+01 -1.18342970e+01 -1.18759637e+01 -1.19176303e+01\n -1.19592970e+01 -1.20009637e+01 -1.20426303e+01 -1.20842970e+01\n -1.21259637e+01 -1.21676303e+01 -1.22092970e+01 -1.22509637e+01\n -1.22926303e+01 -1.23342970e+01 -1.23759637e+01 -1.24176303e+01\n -1.24592970e+01 -1.25009637e+01 -1.25426303e+01 -1.25842970e+01\n -1.26259637e+01 -1.26676303e+01 -1.27092970e+01 -1.27509637e+01\n -1.27926303e+01 -1.28342970e+01 -1.28759637e+01 -1.29176303e+01\n -1.29592970e+01 -1.30009637e+01 -1.30426303e+01 -1.30842970e+01\n -1.31259637e+01 -1.31676303e+01 -1.32092970e+01 -1.32509637e+01\n -1.32926303e+01 -1.33342970e+01 -1.33759637e+01 -1.34176303e+01\n -1.34592970e+01 -1.35009637e+01 -1.35426303e+01 -1.35842970e+01\n -1.36259637e+01 -1.36676303e+01 -1.37092970e+01 -1.37509637e+01\n -1.37926303e+01 -1.38342970e+01 -1.38759637e+01 -1.39176303e+01\n -1.39592970e+01 -1.40009637e+01 -1.40426303e+01 -1.40842970e+01\n -1.41259637e+01 -1.41676303e+01 -1.42092970e+01 -1.42509637e+01\n -1.42926303e+01 -1.43342970e+01 -1.43759637e+01 -1.44176303e+01\n -1.44592970e+01 -1.45009637e+01 -1.45426303e+01 -1.45842970e+01\n -1.46259637e+01 -1.46676303e+01 -1.47092970e+01 -1.47509637e+01\n -1.47926303e+01 -1.48342970e+01 -1.48759637e+01 -1.49176303e+01\n -1.49592970e+01 -1.50009637e+01 -1.50426303e+01 -1.50842970e+01\n -1.51259637e+01 -1.51676303e+01 -1.52092970e+01 -1.52509637e+01\n -1.52926303e+01 -1.53342970e+01 -1.53759637e+01 -1.54176303e+01\n -1.54592970e+01 -1.55009637e+01 -1.55426303e+01 -1.55842970e+01\n -1.56259637e+01 -1.56676303e+01 -1.57092970e+01 -1.57509637e+01\n -1.57926303e+01 -1.58342970e+01 -1.58759637e+01 -1.59176303e+01\n -1.59592970e+01 -1.60009637e+01 -1.60426303e+01 -1.60842970e+01\n -1.61259637e+01 -1.61676303e+01 -1.62092970e+01 -1.62509637e+01\n -1.62926303e+01 -1.63342970e+01 -1.63759637e+01 -1.64176303e+01\n -1.64592970e+01 -1.65009637e+01 -1.65426303e+01 -1.65842970e+01\n -1.66259637e+01 -1.66676303e+01 -1.67092970e+01 -1.67509637e+01\n -1.67926303e+01 -1.68342970e+01 -1.68759637e+01 -1.69176303e+01\n -1.69592970e+01 -1.70009637e+01 -1.70426303e+01 -1.70842970e+01\n -1.71259637e+01 -1.71676303e+01 -1.72092970e+01 -1.72509637e+01\n -1.72926303e+01]\n<xarray.Dataset>\nDimensions:          (crs: 1)\nCoordinates:\n    lon              float64 -111.6\n    lat              float64 42.36\n    day              datetime64[ns] 2022-03-01\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       305\n    last_early_slice:           365\n    last_provisional_slice:     359\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\ntmmn values:  270.2\nFailed sanity check. Gridmet doesn't match\n",
  "history_begin_time" : 1698183470597,
  "history_end_time" : 1698183474120,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "2HfXTtM7nCkL",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'].values - lat\n  lon_diff = dataset['lon'].values - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  print(\"lat_diff: \", lat_diff)\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n374140  2019-04-03  37.499443 -106.865683  ...  183.17847 -0.055389  -0.784628\n[1 rows x 21 columns]\ndate                            2019-04-03\nlat                              37.499443\nlon                            -106.865683\nSWE                                     88\nFlag                                   241\nswe_value                             20.4\nUnnamed: 0                          747612\nair_temperature_tmmn                 265.5\npotential_evapotranspiration           5.4\nmean_vapor_pressure_deficit           0.55\nrelative_humidity_rmax                40.2\nrelative_humidity_rmin                20.7\nprecipitation_amount                   3.9\nair_temperature_tmmx                 296.7\nwind_speed                             4.9\nelevation                        3447.6802\nslope                             52.81878\ncurvature                       -5214.0396\naspect                           183.17847\neastness                         -0.055389\nnorthness                        -0.784628\nName: 374140, dtype: object\n[2019]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\n<class 'datetime.date'> 37.4994435 -106.865683\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2019-01-01 2019-01-02 ... 2019-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/19)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    date:                       26 April 2021\n    note1:                      The projection information for this file is: ...\n    note2:                      Citation: Abatzoglou, J.T., 2013, Development...\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 43556\nlat_diff:  [ 11.9005565   11.85888983  11.81722317  11.7755565   11.73388983\n  11.69222317  11.6505565   11.60888983  11.56722317  11.5255565\n  11.48388983  11.44222317  11.4005565   11.35888983  11.31722317\n  11.2755565   11.23388983  11.19222317  11.1505565   11.10888983\n  11.06722317  11.0255565   10.98388983  10.94222317  10.9005565\n  10.85888983  10.81722317  10.7755565   10.73388983  10.69222317\n  10.6505565   10.60888983  10.56722317  10.5255565   10.48388983\n  10.44222317  10.4005565   10.35888983  10.31722317  10.2755565\n  10.23388983  10.19222317  10.1505565   10.10888983  10.06722317\n  10.0255565    9.98388983   9.94222317   9.9005565    9.85888983\n   9.81722317   9.7755565    9.73388983   9.69222317   9.6505565\n   9.60888983   9.56722317   9.5255565    9.48388983   9.44222317\n   9.4005565    9.35888983   9.31722317   9.2755565    9.23388983\n   9.19222317   9.1505565    9.10888983   9.06722317   9.0255565\n   8.98388983   8.94222317   8.9005565    8.85888983   8.81722317\n   8.7755565    8.73388983   8.69222317   8.6505565    8.60888983\n   8.56722317   8.5255565    8.48388983   8.44222317   8.4005565\n   8.35888983   8.31722317   8.2755565    8.23388983   8.19222317\n   8.1505565    8.10888983   8.06722317   8.0255565    7.98388983\n   7.94222317   7.9005565    7.85888983   7.81722317   7.7755565\n   7.73388983   7.69222317   7.6505565    7.60888983   7.56722317\n   7.5255565    7.48388983   7.44222317   7.4005565    7.35888983\n   7.31722317   7.2755565    7.23388983   7.19222317   7.1505565\n   7.10888983   7.06722317   7.0255565    6.98388983   6.94222317\n   6.9005565    6.85888983   6.81722317   6.7755565    6.73388983\n   6.69222317   6.6505565    6.60888983   6.56722317   6.5255565\n   6.48388983   6.44222317   6.4005565    6.35888983   6.31722317\n   6.2755565    6.23388983   6.19222317   6.1505565    6.10888983\n   6.06722317   6.0255565    5.98388983   5.94222317   5.9005565\n   5.85888983   5.81722317   5.7755565    5.73388983   5.69222317\n   5.6505565    5.60888983   5.56722317   5.5255565    5.48388983\n   5.44222317   5.4005565    5.35888983   5.31722317   5.2755565\n   5.23388983   5.19222317   5.1505565    5.10888983   5.06722317\n   5.0255565    4.98388983   4.94222317   4.9005565    4.85888983\n   4.81722317   4.7755565    4.73388983   4.69222317   4.6505565\n   4.60888983   4.56722317   4.5255565    4.48388983   4.44222317\n   4.4005565    4.35888983   4.31722317   4.2755565    4.23388983\n   4.19222317   4.1505565    4.10888983   4.06722317   4.0255565\n   3.98388983   3.94222317   3.9005565    3.85888983   3.81722317\n   3.7755565    3.73388983   3.69222317   3.6505565    3.60888983\n   3.56722317   3.5255565    3.48388983   3.44222317   3.4005565\n   3.35888983   3.31722317   3.2755565    3.23388983   3.19222317\n   3.1505565    3.10888983   3.06722317   3.0255565    2.98388983\n   2.94222317   2.9005565    2.85888983   2.81722317   2.7755565\n   2.73388983   2.69222317   2.6505565    2.60888983   2.56722317\n   2.5255565    2.48388983   2.44222317   2.4005565    2.35888983\n   2.31722317   2.2755565    2.23388983   2.19222317   2.1505565\n   2.10888983   2.06722317   2.0255565    1.98388983   1.94222317\n   1.9005565    1.85888983   1.81722317   1.7755565    1.73388983\n   1.69222317   1.6505565    1.60888983   1.56722317   1.5255565\n   1.48388983   1.44222317   1.4005565    1.35888983   1.31722317\n   1.2755565    1.23388983   1.19222317   1.1505565    1.10888983\n   1.06722317   1.0255565    0.98388983   0.94222317   0.9005565\n   0.85888983   0.81722317   0.7755565    0.73388983   0.69222317\n   0.6505565    0.60888983   0.56722317   0.5255565    0.48388983\n   0.44222317   0.4005565    0.35888983   0.31722317   0.2755565\n   0.23388983   0.19222317   0.1505565    0.10888983   0.06722317\n   0.0255565   -0.01611017  -0.05777683  -0.0994435   -0.14111017\n  -0.18277683  -0.2244435   -0.26611017  -0.30777683  -0.3494435\n  -0.39111017  -0.43277683  -0.4744435   -0.51611017  -0.55777683\n  -0.5994435   -0.64111017  -0.68277683  -0.7244435   -0.76611017\n  -0.80777683  -0.8494435   -0.89111017  -0.93277683  -0.9744435\n  -1.01611017  -1.05777683  -1.0994435   -1.14111017  -1.18277683\n  -1.2244435   -1.26611017  -1.30777683  -1.3494435   -1.39111017\n  -1.43277683  -1.4744435   -1.51611017  -1.55777683  -1.5994435\n  -1.64111017  -1.68277683  -1.7244435   -1.76611017  -1.80777683\n  -1.8494435   -1.89111017  -1.93277683  -1.9744435   -2.01611017\n  -2.05777683  -2.0994435   -2.14111017  -2.18277683  -2.2244435\n  -2.26611017  -2.30777683  -2.3494435   -2.39111017  -2.43277683\n  -2.4744435   -2.51611017  -2.55777683  -2.5994435   -2.64111017\n  -2.68277683  -2.7244435   -2.76611017  -2.80777683  -2.8494435\n  -2.89111017  -2.93277683  -2.9744435   -3.01611017  -3.05777683\n  -3.0994435   -3.14111017  -3.18277683  -3.2244435   -3.26611017\n  -3.30777683  -3.3494435   -3.39111017  -3.43277683  -3.4744435\n  -3.51611017  -3.55777683  -3.5994435   -3.64111017  -3.68277683\n  -3.7244435   -3.76611017  -3.80777683  -3.8494435   -3.89111017\n  -3.93277683  -3.9744435   -4.01611017  -4.05777683  -4.0994435\n  -4.14111017  -4.18277683  -4.2244435   -4.26611017  -4.30777683\n  -4.3494435   -4.39111017  -4.43277683  -4.4744435   -4.51611017\n  -4.55777683  -4.5994435   -4.64111017  -4.68277683  -4.7244435\n  -4.76611017  -4.80777683  -4.8494435   -4.89111017  -4.93277683\n  -4.9744435   -5.01611017  -5.05777683  -5.0994435   -5.14111017\n  -5.18277683  -5.2244435   -5.26611017  -5.30777683  -5.3494435\n  -5.39111017  -5.43277683  -5.4744435   -5.51611017  -5.55777683\n  -5.5994435   -5.64111017  -5.68277683  -5.7244435   -5.76611017\n  -5.80777683  -5.8494435   -5.89111017  -5.93277683  -5.9744435\n  -6.01611017  -6.05777683  -6.0994435   -6.14111017  -6.18277683\n  -6.2244435   -6.26611017  -6.30777683  -6.3494435   -6.39111017\n  -6.43277683  -6.4744435   -6.51611017  -6.55777683  -6.5994435\n  -6.64111017  -6.68277683  -6.7244435   -6.76611017  -6.80777683\n  -6.8494435   -6.89111017  -6.93277683  -6.9744435   -7.01611017\n  -7.05777683  -7.0994435   -7.14111017  -7.18277683  -7.2244435\n  -7.26611017  -7.30777683  -7.3494435   -7.39111017  -7.43277683\n  -7.4744435   -7.51611017  -7.55777683  -7.5994435   -7.64111017\n  -7.68277683  -7.7244435   -7.76611017  -7.80777683  -7.8494435\n  -7.89111017  -7.93277683  -7.9744435   -8.01611017  -8.05777683\n  -8.0994435   -8.14111017  -8.18277683  -8.2244435   -8.26611017\n  -8.30777683  -8.3494435   -8.39111017  -8.43277683  -8.4744435\n  -8.51611017  -8.55777683  -8.5994435   -8.64111017  -8.68277683\n  -8.7244435   -8.76611017  -8.80777683  -8.8494435   -8.89111017\n  -8.93277683  -8.9744435   -9.01611017  -9.05777683  -9.0994435\n  -9.14111017  -9.18277683  -9.2244435   -9.26611017  -9.30777683\n  -9.3494435   -9.39111017  -9.43277683  -9.4744435   -9.51611017\n  -9.55777683  -9.5994435   -9.64111017  -9.68277683  -9.7244435\n  -9.76611017  -9.80777683  -9.8494435   -9.89111017  -9.93277683\n  -9.9744435  -10.01611017 -10.05777683 -10.0994435  -10.14111017\n -10.18277683 -10.2244435  -10.26611017 -10.30777683 -10.3494435\n -10.39111017 -10.43277683 -10.4744435  -10.51611017 -10.55777683\n -10.5994435  -10.64111017 -10.68277683 -10.7244435  -10.76611017\n -10.80777683 -10.8494435  -10.89111017 -10.93277683 -10.9744435\n -11.01611017 -11.05777683 -11.0994435  -11.14111017 -11.18277683\n -11.2244435  -11.26611017 -11.30777683 -11.3494435  -11.39111017\n -11.43277683 -11.4744435  -11.51611017 -11.55777683 -11.5994435\n -11.64111017 -11.68277683 -11.7244435  -11.76611017 -11.80777683\n -11.8494435  -11.89111017 -11.93277683 -11.9744435  -12.01611017\n -12.05777683 -12.0994435  -12.14111017 -12.18277683 -12.2244435\n -12.26611017 -12.30777683 -12.3494435  -12.39111017 -12.43277683]\n<xarray.Dataset>\nDimensions:          (crs: 1)\nCoordinates:\n    lon              float64 -106.8\n    lat              float64 37.48\n    day              datetime64[ns] 2019-04-03\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  float32 ...\nAttributes: (12/19)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    date:                       26 April 2021\n    note1:                      The projection information for this file is: ...\n    note2:                      Citation: Abatzoglou, J.T., 2013, Development...\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\ntmmn values:  265.5\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698183357959,
  "history_end_time" : 1698183361367,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "eJucODYuiM1W",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  print(\"lat_diff: \", lat_diff)\n  i = np.argmin(np.abs(lat_diff))\n  j = np.argmin(np.abs(lon_diff))\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...    aspect  eastness  northness\n467959  2019-09-09  37.077776 -106.452458  ...  174.9554  0.087706  -0.783458\n[1 rows x 21 columns]\ndate                            2019-09-09\nlat                              37.077776\nlon                            -106.452458\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          634621\nair_temperature_tmmn                 276.6\npotential_evapotranspiration           5.0\nmean_vapor_pressure_deficit           0.94\nrelative_humidity_rmax                39.9\nrelative_humidity_rmin                 9.1\nprecipitation_amount                   0.0\nair_temperature_tmmx                 290.0\nwind_speed                             2.5\nelevation                        3234.4045\nslope                            63.159355\ncurvature                        -4126.849\naspect                            174.9554\neastness                          0.087706\nnorthness                        -0.783458\nName: 467959, dtype: object\n[2019]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\n<class 'datetime.date'> 37.0777755 -106.452458\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2019-01-01 2019-01-02 ... 2019-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/19)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    date:                       26 April 2021\n    note1:                      The projection information for this file is: ...\n    note2:                      Citation: Abatzoglou, J.T., 2013, Development...\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 43715\nlat_diff:  <xarray.DataArray 'lat' (lat: 585)>\narray([ 1.23222245e+01,  1.22805578e+01,  1.22388912e+01,  1.21972245e+01,\n        1.21555578e+01,  1.21138912e+01,  1.20722245e+01,  1.20305578e+01,\n        1.19888912e+01,  1.19472245e+01,  1.19055578e+01,  1.18638912e+01,\n        1.18222245e+01,  1.17805578e+01,  1.17388912e+01,  1.16972245e+01,\n        1.16555578e+01,  1.16138912e+01,  1.15722245e+01,  1.15305578e+01,\n        1.14888912e+01,  1.14472245e+01,  1.14055578e+01,  1.13638912e+01,\n        1.13222245e+01,  1.12805578e+01,  1.12388912e+01,  1.11972245e+01,\n        1.11555578e+01,  1.11138912e+01,  1.10722245e+01,  1.10305578e+01,\n        1.09888912e+01,  1.09472245e+01,  1.09055578e+01,  1.08638912e+01,\n        1.08222245e+01,  1.07805578e+01,  1.07388912e+01,  1.06972245e+01,\n        1.06555578e+01,  1.06138912e+01,  1.05722245e+01,  1.05305578e+01,\n        1.04888912e+01,  1.04472245e+01,  1.04055578e+01,  1.03638912e+01,\n        1.03222245e+01,  1.02805578e+01,  1.02388912e+01,  1.01972245e+01,\n        1.01555578e+01,  1.01138912e+01,  1.00722245e+01,  1.00305578e+01,\n        9.98889117e+00,  9.94722450e+00,  9.90555783e+00,  9.86389117e+00,\n        9.82222450e+00,  9.78055783e+00,  9.73889117e+00,  9.69722450e+00,\n        9.65555783e+00,  9.61389117e+00,  9.57222450e+00,  9.53055783e+00,\n        9.48889117e+00,  9.44722450e+00,  9.40555783e+00,  9.36389117e+00,\n        9.32222450e+00,  9.28055783e+00,  9.23889117e+00,  9.19722450e+00,\n        9.15555783e+00,  9.11389117e+00,  9.07222450e+00,  9.03055783e+00,\n...\n       -8.84444217e+00, -8.88610883e+00, -8.92777550e+00, -8.96944217e+00,\n       -9.01110883e+00, -9.05277550e+00, -9.09444217e+00, -9.13610883e+00,\n       -9.17777550e+00, -9.21944217e+00, -9.26110883e+00, -9.30277550e+00,\n       -9.34444217e+00, -9.38610883e+00, -9.42777550e+00, -9.46944217e+00,\n       -9.51110883e+00, -9.55277550e+00, -9.59444217e+00, -9.63610883e+00,\n       -9.67777550e+00, -9.71944217e+00, -9.76110883e+00, -9.80277550e+00,\n       -9.84444217e+00, -9.88610883e+00, -9.92777550e+00, -9.96944217e+00,\n       -1.00111088e+01, -1.00527755e+01, -1.00944422e+01, -1.01361088e+01,\n       -1.01777755e+01, -1.02194422e+01, -1.02611088e+01, -1.03027755e+01,\n       -1.03444422e+01, -1.03861088e+01, -1.04277755e+01, -1.04694422e+01,\n       -1.05111088e+01, -1.05527755e+01, -1.05944422e+01, -1.06361088e+01,\n       -1.06777755e+01, -1.07194422e+01, -1.07611088e+01, -1.08027755e+01,\n       -1.08444422e+01, -1.08861088e+01, -1.09277755e+01, -1.09694422e+01,\n       -1.10111088e+01, -1.10527755e+01, -1.10944422e+01, -1.11361088e+01,\n       -1.11777755e+01, -1.12194422e+01, -1.12611088e+01, -1.13027755e+01,\n       -1.13444422e+01, -1.13861088e+01, -1.14277755e+01, -1.14694422e+01,\n       -1.15111088e+01, -1.15527755e+01, -1.15944422e+01, -1.16361088e+01,\n       -1.16777755e+01, -1.17194422e+01, -1.17611088e+01, -1.18027755e+01,\n       -1.18444422e+01, -1.18861088e+01, -1.19277755e+01, -1.19694422e+01,\n       -1.20111088e+01])\nCoordinates:\n  * lat      (lat) float64 49.4 49.36 49.32 49.28 ... 25.19 25.15 25.11 25.07\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 57, in _wrapfunc\n    return bound(*args, **kwds)\nTypeError: argmin() got an unexpected keyword argument 'out'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/eJucODYuiM1W/training_sanity_check.py\", line 126, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/eJucODYuiM1W/training_sanity_check.py\", line 98, in check_gridmet\n    i = np.argmin(np.abs(lat_diff))\n  File \"<__array_function__ internals>\", line 200, in argmin\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 1338, in argmin\n    return _wrapfunc(a, 'argmin', axis=axis, out=out, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 66, in _wrapfunc\n    return _wrapit(obj, method, *args, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 47, in _wrapit\n    result = wrap(result)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataarray.py\", line 4613, in __array_wrap__\n    new_var = self.variable.__array_wrap__(obj, context)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 2663, in __array_wrap__\n    return Variable(self.dims, obj)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 359, in __init__\n    self._dims = self._parse_dimensions(dims)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 675, in _parse_dimensions\n    raise ValueError(\nValueError: dimensions ('lat',) must have the same length as the number of data dimensions, ndim=0\n",
  "history_begin_time" : 1698183304655,
  "history_end_time" : 1698183307991,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "KlPdAvwL32ml",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  print(\"lat_diff: \", lat_diff)\n  i = np.argmin(lat_diff)\n  j = np.argmin(lon_diff)\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...    aspect  eastness  northness\n903259  2020-11-05  46.358294 -112.264557  ...  182.0274 -0.035363  -0.785085\n[1 rows x 21 columns]\ndate                            2020-11-05\nlat                              46.358294\nlon                            -112.264557\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          904425\nair_temperature_tmmn                 277.8\npotential_evapotranspiration           2.2\nmean_vapor_pressure_deficit           0.33\nrelative_humidity_rmax                54.7\nrelative_humidity_rmin                 7.9\nprecipitation_amount                   0.3\nair_temperature_tmmx                 280.7\nwind_speed                             2.0\nelevation                        2462.1355\nslope                            56.401375\ncurvature                        -6185.013\naspect                            182.0274\neastness                         -0.035363\nnorthness                        -0.785085\nName: 903259, dtype: object\n[2020]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\n<class 'datetime.date'> 46.3582945 -112.2645575\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 366, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2020-01-01 2020-01-02 ... 2020-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       306\n    last_early_slice:           366\n    last_provisional_slice:     360\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44138\nlat_diff:  <xarray.DataArray 'lat' (lat: 585)>\narray([ 3.04170550e+00,  3.00003883e+00,  2.95837217e+00,  2.91670550e+00,\n        2.87503883e+00,  2.83337217e+00,  2.79170550e+00,  2.75003883e+00,\n        2.70837217e+00,  2.66670550e+00,  2.62503883e+00,  2.58337217e+00,\n        2.54170550e+00,  2.50003883e+00,  2.45837217e+00,  2.41670550e+00,\n        2.37503883e+00,  2.33337217e+00,  2.29170550e+00,  2.25003883e+00,\n        2.20837217e+00,  2.16670550e+00,  2.12503883e+00,  2.08337217e+00,\n        2.04170550e+00,  2.00003883e+00,  1.95837217e+00,  1.91670550e+00,\n        1.87503883e+00,  1.83337217e+00,  1.79170550e+00,  1.75003883e+00,\n        1.70837217e+00,  1.66670550e+00,  1.62503883e+00,  1.58337217e+00,\n        1.54170550e+00,  1.50003883e+00,  1.45837217e+00,  1.41670550e+00,\n        1.37503883e+00,  1.33337217e+00,  1.29170550e+00,  1.25003883e+00,\n        1.20837217e+00,  1.16670550e+00,  1.12503883e+00,  1.08337217e+00,\n        1.04170550e+00,  1.00003883e+00,  9.58372167e-01,  9.16705500e-01,\n        8.75038833e-01,  8.33372167e-01,  7.91705500e-01,  7.50038833e-01,\n        7.08372167e-01,  6.66705500e-01,  6.25038833e-01,  5.83372167e-01,\n        5.41705500e-01,  5.00038833e-01,  4.58372167e-01,  4.16705500e-01,\n        3.75038833e-01,  3.33372167e-01,  2.91705500e-01,  2.50038833e-01,\n        2.08372167e-01,  1.66705500e-01,  1.25038833e-01,  8.33721667e-02,\n        4.17055000e-02,  3.88333333e-05, -4.16278333e-02, -8.32945000e-02,\n       -1.24961167e-01, -1.66627833e-01, -2.08294500e-01, -2.49961167e-01,\n...\n       -1.81249612e+01, -1.81666278e+01, -1.82082945e+01, -1.82499612e+01,\n       -1.82916278e+01, -1.83332945e+01, -1.83749612e+01, -1.84166278e+01,\n       -1.84582945e+01, -1.84999612e+01, -1.85416278e+01, -1.85832945e+01,\n       -1.86249612e+01, -1.86666278e+01, -1.87082945e+01, -1.87499612e+01,\n       -1.87916278e+01, -1.88332945e+01, -1.88749612e+01, -1.89166278e+01,\n       -1.89582945e+01, -1.89999612e+01, -1.90416278e+01, -1.90832945e+01,\n       -1.91249612e+01, -1.91666278e+01, -1.92082945e+01, -1.92499612e+01,\n       -1.92916278e+01, -1.93332945e+01, -1.93749612e+01, -1.94166278e+01,\n       -1.94582945e+01, -1.94999612e+01, -1.95416278e+01, -1.95832945e+01,\n       -1.96249612e+01, -1.96666278e+01, -1.97082945e+01, -1.97499612e+01,\n       -1.97916278e+01, -1.98332945e+01, -1.98749612e+01, -1.99166278e+01,\n       -1.99582945e+01, -1.99999612e+01, -2.00416278e+01, -2.00832945e+01,\n       -2.01249612e+01, -2.01666278e+01, -2.02082945e+01, -2.02499612e+01,\n       -2.02916278e+01, -2.03332945e+01, -2.03749612e+01, -2.04166278e+01,\n       -2.04582945e+01, -2.04999612e+01, -2.05416278e+01, -2.05832945e+01,\n       -2.06249612e+01, -2.06666278e+01, -2.07082945e+01, -2.07499612e+01,\n       -2.07916278e+01, -2.08332945e+01, -2.08749612e+01, -2.09166278e+01,\n       -2.09582945e+01, -2.09999612e+01, -2.10416278e+01, -2.10832945e+01,\n       -2.11249612e+01, -2.11666278e+01, -2.12082945e+01, -2.12499612e+01,\n       -2.12916278e+01])\nCoordinates:\n  * lat      (lat) float64 49.4 49.36 49.32 49.28 ... 25.19 25.15 25.11 25.07\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 57, in _wrapfunc\n    return bound(*args, **kwds)\nTypeError: argmin() got an unexpected keyword argument 'out'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/KlPdAvwL32ml/training_sanity_check.py\", line 126, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/KlPdAvwL32ml/training_sanity_check.py\", line 98, in check_gridmet\n    i = np.argmin(lat_diff)\n  File \"<__array_function__ internals>\", line 200, in argmin\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 1338, in argmin\n    return _wrapfunc(a, 'argmin', axis=axis, out=out, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 66, in _wrapfunc\n    return _wrapit(obj, method, *args, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 47, in _wrapit\n    result = wrap(result)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataarray.py\", line 4613, in __array_wrap__\n    new_var = self.variable.__array_wrap__(obj, context)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 2663, in __array_wrap__\n    return Variable(self.dims, obj)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 359, in __init__\n    self._dims = self._parse_dimensions(dims)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 675, in _parse_dimensions\n    raise ValueError(\nValueError: dimensions ('lat',) must have the same length as the number of data dimensions, ndim=0\n",
  "history_begin_time" : 1698183210424,
  "history_end_time" : 1698183213893,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "5wjwnTcuW69Z",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  i = np.argmin(lat_diff)\n  j = np.argmin(lon_diff)\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...      aspect  eastness  northness\n256603  2022-01-12  46.494518 -115.794937  ...  120.052216  0.713464  -0.464279\n[1 rows x 21 columns]\ndate                            2022-01-12\nlat                              46.494518\nlon                            -115.794937\nSWE                                      0\nFlag                                   241\nswe_value                              9.8\nUnnamed: 0                          204776\nair_temperature_tmmn                 268.7\npotential_evapotranspiration           6.0\nmean_vapor_pressure_deficit           0.09\nrelative_humidity_rmax               100.0\nrelative_humidity_rmin                74.3\nprecipitation_amount                  38.2\nair_temperature_tmmx                 275.0\nwind_speed                             3.8\nelevation                         988.9874\nslope                            26.573898\ncurvature                        2710.3152\naspect                          120.052216\neastness                          0.713464\nnorthness                        -0.464279\nName: 256603, dtype: object\n[2022]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\n<class 'datetime.date'> 46.494518 -115.7949365\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2022-01-01 2022-01-02 ... 2022-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       305\n    last_early_slice:           365\n    last_provisional_slice:     359\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44571\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 57, in _wrapfunc\n    return bound(*args, **kwds)\nTypeError: argmin() got an unexpected keyword argument 'out'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/5wjwnTcuW69Z/training_sanity_check.py\", line 125, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/5wjwnTcuW69Z/training_sanity_check.py\", line 97, in check_gridmet\n    i = np.argmin(lat_diff)\n  File \"<__array_function__ internals>\", line 200, in argmin\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 1338, in argmin\n    return _wrapfunc(a, 'argmin', axis=axis, out=out, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 66, in _wrapfunc\n    return _wrapit(obj, method, *args, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 47, in _wrapit\n    result = wrap(result)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataarray.py\", line 4613, in __array_wrap__\n    new_var = self.variable.__array_wrap__(obj, context)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 2663, in __array_wrap__\n    return Variable(self.dims, obj)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 359, in __init__\n    self._dims = self._parse_dimensions(dims)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 675, in _parse_dimensions\n    raise ValueError(\nValueError: dimensions ('lat',) must have the same length as the number of data dimensions, ndim=0\n",
  "history_begin_time" : 1698182098536,
  "history_end_time" : 1698182101997,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "wAUCfUGQHDE2",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  #distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  print(\"distance shape: \", distance.shape)\n  #argmin_res = np.argmin(distance)\n  #i,j = np.unravel_index(argmin_res, distance.shape)\n  i = np.argmin(lat_diff)\n  j = np.argmin(lon_diff)\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n             date        lat         lon  ...     aspect  eastness  northness\n55428  2021-08-02  38.925134 -119.918205  ...  21.647856  0.353413    0.74886\n[1 rows x 21 columns]\ndate                            2021-08-02\nlat                              38.925134\nlon                            -119.918205\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          398428\nair_temperature_tmmn                 285.2\npotential_evapotranspiration           6.1\nmean_vapor_pressure_deficit           0.58\nrelative_humidity_rmax           89.700005\nrelative_humidity_rmin                17.2\nprecipitation_amount                   0.0\nair_temperature_tmmx                 300.6\nwind_speed                             1.8\nelevation                        2812.8616\nslope                            31.390024\ncurvature                        -9637.513\naspect                           21.647856\neastness                          0.353413\nnorthness                          0.74886\nName: 55428, dtype: object\n[2021]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc exists\n<class 'datetime.date'> 38.9251335 -119.9182045\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2021-01-01 2021-01-02 ... 2021-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/19)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    date:                       30 March 2023\n    note1:                      The projection information for this file is: ...\n    note2:                      Citation: Abatzoglou, J.T., 2013, Development...\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44408\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/wAUCfUGQHDE2/training_sanity_check.py\", line 126, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/wAUCfUGQHDE2/training_sanity_check.py\", line 95, in check_gridmet\n    print(\"distance shape: \", distance.shape)\nNameError: name 'distance' is not defined\n",
  "history_begin_time" : 1698182046674,
  "history_end_time" : 1698182049991,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "ThSSPseWOIyW",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 1\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  print(\"distance shape: \", distance.shape)\n  i,j = np.unravel_index(np.argmin(distance), distance.shape)\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat        lon  ...     aspect  eastness  northness\n607414  2019-06-23  41.328746 -106.37161  ...  141.17511  0.559995  -0.661845\n[1 rows x 21 columns]\ndate                            2019-06-23\nlat                              41.328746\nlon                             -106.37161\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          585998\nair_temperature_tmmn                 271.6\npotential_evapotranspiration           5.6\nmean_vapor_pressure_deficit           1.09\nrelative_humidity_rmax                34.5\nrelative_humidity_rmin                27.9\nprecipitation_amount                   0.0\nair_temperature_tmmx                 279.7\nwind_speed                             3.8\nelevation                        3131.1328\nslope                             75.52329\ncurvature                        -3660.024\naspect                           141.17511\neastness                          0.559995\nnorthness                        -0.661845\nName: 607414, dtype: object\n[2019]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\n<class 'datetime.date'> 41.328746 -106.3716095\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2019-01-01 2019-01-02 ... 2019-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/19)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    date:                       26 April 2021\n    note1:                      The projection information for this file is: ...\n    note2:                      Citation: Abatzoglou, J.T., 2013, Development...\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 43637\ndistance shape:  (585, 1386)\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 57, in _wrapfunc\n    return bound(*args, **kwds)\nTypeError: argmin() got an unexpected keyword argument 'out'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/ThSSPseWOIyW/training_sanity_check.py\", line 123, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/ThSSPseWOIyW/training_sanity_check.py\", line 96, in check_gridmet\n    i,j = np.unravel_index(np.argmin(distance), distance.shape)\n  File \"<__array_function__ internals>\", line 200, in argmin\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 1338, in argmin\n    return _wrapfunc(a, 'argmin', axis=axis, out=out, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 66, in _wrapfunc\n    return _wrapit(obj, method, *args, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 47, in _wrapit\n    result = wrap(result)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataarray.py\", line 4613, in __array_wrap__\n    new_var = self.variable.__array_wrap__(obj, context)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 2663, in __array_wrap__\n    return Variable(self.dims, obj)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 359, in __init__\n    self._dims = self._parse_dimensions(dims)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 675, in _parse_dimensions\n    raise ValueError(\nValueError: dimensions ('lat', 'lon') must have the same length as the number of data dimensions, ndim=0\n",
  "history_begin_time" : 1698181902753,
  "history_end_time" : 1698181906171,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "l665jkUGP1dG",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i,j = np.unravel_index(np.argmin(distance), distance.shape)\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n163322  2022-09-06  48.306234 -116.073414  ...  206.48532 -0.419496  -0.730073\n222453  2021-06-04  39.876097 -107.602301  ...  275.79056 -0.782840   0.100552\n[2 rows x 21 columns]\ndate                            2022-09-06\nlat                              48.306234\nlon                            -116.073414\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          200633\nair_temperature_tmmn                 282.8\npotential_evapotranspiration           4.8\nmean_vapor_pressure_deficit            1.5\nrelative_humidity_rmax           81.700005\nrelative_humidity_rmin           34.100002\nprecipitation_amount                   0.0\nair_temperature_tmmx                 290.4\nwind_speed                             4.8\nelevation                          1615.59\nslope                            48.767998\ncurvature                        -2622.978\naspect                           206.48532\neastness                         -0.419496\nnorthness                        -0.730073\nName: 163322, dtype: object\n[2022]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\n<class 'datetime.date'> 48.306233500000005 -116.0734145\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2022-01-01 2022-01-02 ... 2022-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       305\n    last_early_slice:           365\n    last_provisional_slice:     359\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44808\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 57, in _wrapfunc\n    return bound(*args, **kwds)\nTypeError: argmin() got an unexpected keyword argument 'out'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/l665jkUGP1dG/training_sanity_check.py\", line 122, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/l665jkUGP1dG/training_sanity_check.py\", line 95, in check_gridmet\n    i,j = np.unravel_index(np.argmin(distance), distance.shape)\n  File \"<__array_function__ internals>\", line 200, in argmin\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 1338, in argmin\n    return _wrapfunc(a, 'argmin', axis=axis, out=out, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 66, in _wrapfunc\n    return _wrapit(obj, method, *args, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 47, in _wrapit\n    result = wrap(result)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataarray.py\", line 4613, in __array_wrap__\n    new_var = self.variable.__array_wrap__(obj, context)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 2663, in __array_wrap__\n    return Variable(self.dims, obj)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 359, in __init__\n    self._dims = self._parse_dimensions(dims)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 675, in _parse_dimensions\n    raise ValueError(\nValueError: dimensions ('lat', 'lon') must have the same length as the number of data dimensions, ndim=0\n",
  "history_begin_time" : 1698181836404,
  "history_end_time" : 1698181839777,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "RnRT4YrORjWF",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\nimport numpy as np\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i, j = np.unravel_index(np.argmin(distance, axis=None), distance.shape)\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n867337  2020-12-25  38.911155 -120.376345  ...  184.63641 -0.080657  -0.783759\n751773  2021-11-16  48.971066 -115.956633  ...  345.47733 -0.245697   0.769164\n[2 rows x 21 columns]\ndate                            2020-12-25\nlat                              38.911155\nlon                            -120.376345\nSWE                                    255\nFlag                                   255\nswe_value                              3.7\nUnnamed: 0                          780767\nair_temperature_tmmn                 274.5\npotential_evapotranspiration           3.2\nmean_vapor_pressure_deficit           0.59\nrelative_humidity_rmax           76.700005\nrelative_humidity_rmin                61.5\nprecipitation_amount                  12.6\nair_temperature_tmmx                 277.1\nwind_speed                             3.3\nelevation                        1660.5905\nslope                             10.08542\ncurvature                        1654.7963\naspect                           184.63641\neastness                         -0.080657\nnorthness                        -0.783759\nName: 867337, dtype: object\n[2020]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\n<class 'datetime.date'> 38.911155 -120.3763445\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 366, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2020-01-01 2020-01-02 ... 2020-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       306\n    last_early_slice:           366\n    last_provisional_slice:     360\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44188\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 57, in _wrapfunc\n    return bound(*args, **kwds)\nTypeError: argmin() got an unexpected keyword argument 'out'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/RnRT4YrORjWF/training_sanity_check.py\", line 122, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/RnRT4YrORjWF/training_sanity_check.py\", line 95, in check_gridmet\n    i, j = np.unravel_index(np.argmin(distance, axis=None), distance.shape)\n  File \"<__array_function__ internals>\", line 200, in argmin\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 1338, in argmin\n    return _wrapfunc(a, 'argmin', axis=axis, out=out, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 66, in _wrapfunc\n    return _wrapit(obj, method, *args, **kwds)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/numpy/core/fromnumeric.py\", line 47, in _wrapit\n    result = wrap(result)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataarray.py\", line 4613, in __array_wrap__\n    new_var = self.variable.__array_wrap__(obj, context)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 2663, in __array_wrap__\n    return Variable(self.dims, obj)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 359, in __init__\n    self._dims = self._parse_dimensions(dims)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/variable.py\", line 675, in _parse_dimensions\n    raise ValueError(\nValueError: dimensions ('lat', 'lon') must have the same length as the number of data dimensions, ndim=0\n",
  "history_begin_time" : 1698181734401,
  "history_end_time" : 1698181737850,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "QvdFNGI7U04Z",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  # Calculate the Euclidean distance between the target coordinate and all grid points\n  lat_diff = dataset['lat'] - lat\n  lon_diff = dataset['lon'] - lon\n  distance = np.sqrt(lat_diff**2 + lon_diff**2)\n\n  # Find the indices (i, j) of the grid cell with the minimum distance\n  i, j = np.unravel_index(np.argmin(distance, axis=None), distance.shape)\n  nearest_gridmet_lat = dataset['lat'][i]\n  nearest_gridmet_lon = dataset['lon'][j]\n  \n  selected_data = dataset.sel(day=date_value, lat=nearest_gridmet_lat, lon=nearest_gridmet_lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...      aspect  eastness  northness\n376096  2022-11-05  38.918144 -120.205665  ...   40.579857  0.576732   0.649554\n283882  2019-12-24  40.398035 -105.850587  ...  214.347270 -0.513686  -0.690177\n[2 rows x 21 columns]\ndate                            2022-11-05\nlat                              38.918144\nlon                            -120.205665\nSWE                                      0\nFlag                                   241\nswe_value                              1.2\nUnnamed: 0                          225878\nair_temperature_tmmn                 274.3\npotential_evapotranspiration           2.2\nmean_vapor_pressure_deficit            0.1\nrelative_humidity_rmax                38.4\nrelative_humidity_rmin           20.800001\nprecipitation_amount                   0.0\nair_temperature_tmmx                 288.3\nwind_speed                             3.3\nelevation                        2481.0059\nslope                             76.83347\ncurvature                        -9113.715\naspect                           40.579857\neastness                          0.576732\nnorthness                         0.649554\nName: 376096, dtype: object\n[2022]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\n<class 'datetime.date'> 38.9181445 -120.205665\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2022-01-01 2022-01-02 ... 2022-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       305\n    last_early_slice:           365\n    last_provisional_slice:     359\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 44868\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/QvdFNGI7U04Z/training_sanity_check.py\", line 121, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/QvdFNGI7U04Z/training_sanity_check.py\", line 91, in check_gridmet\n    distance = np.sqrt(lat_diff**2 + lon_diff**2)\nNameError: name 'np' is not defined\n",
  "history_begin_time" : 1698181707261,
  "history_end_time" : 1698181710744,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "kXnkBPzdTP2r",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  selected_data = dataset.sel(day=date_value, lat=lat, lon=lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n223095  2019-02-09  39.876097 -107.602301  ...  275.79056 -0.782840   0.100552\n448187  2022-10-17  38.483487 -112.390322  ...  322.00595 -0.551797   0.667427\n[2 rows x 21 columns]\ndate                            2019-02-09\nlat                              39.876097\nlon                            -107.602301\nSWE                                    255\nFlag                                   255\nswe_value                             13.1\nUnnamed: 0                          613239\nair_temperature_tmmn                 262.0\npotential_evapotranspiration           2.3\nmean_vapor_pressure_deficit           0.26\nrelative_humidity_rmax                46.5\nrelative_humidity_rmin                28.6\nprecipitation_amount                   0.9\nair_temperature_tmmx                 291.7\nwind_speed                             2.9\nelevation                        2924.4155\nslope                            38.652397\ncurvature                       -1300.5392\naspect                           275.79056\neastness                          -0.78284\nnorthness                         0.100552\nName: 223095, dtype: object\n[2019]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\n<class 'datetime.date'> 39.876097 -107.6023015\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 365, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2019-01-01 2019-01-02 ... 2019-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/19)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    date:                       26 April 2021\n    note1:                      The projection information for this file is: ...\n    note2:                      Citation: Abatzoglou, J.T., 2013, Development...\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 43503\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3802, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 138, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 165, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1577, in pandas._libs.hashtable.Float64HashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1587, in pandas._libs.hashtable.Float64HashTable.get_item\nKeyError: 39.876097\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexes.py\", line 769, in sel\n    indexer = self.index.get_loc(label_value)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3804, in get_loc\n    raise KeyError(key) from err\nKeyError: 39.876097\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/kXnkBPzdTP2r/training_sanity_check.py\", line 111, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/kXnkBPzdTP2r/training_sanity_check.py\", line 88, in check_gridmet\n    selected_data = dataset.sel(day=date_value, lat=lat, lon=lon)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataset.py\", line 3020, in sel\n    query_results = map_index_queries(\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexing.py\", line 190, in map_index_queries\n    results.append(index.sel(labels, **options))\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexes.py\", line 771, in sel\n    raise KeyError(\nKeyError: \"not all values found in index 'lat'. Try setting the `method` keyword argument (example: method='nearest').\"\n",
  "history_begin_time" : 1698181482609,
  "history_end_time" : 1698181486036,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "M8hvHviJxdZD",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  print(dataset)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  selected_data = dataset.sel(day=days_difference, lat=lat, lon=lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n               date        lat         lon  ...      aspect  eastness  northness\n439007   2020-03-14  39.765704 -105.904486  ...   61.189377  0.719519   0.449076\n1020597  2020-01-24  37.006073 -106.272795  ...  192.083860 -0.206363  -0.774196\n[2 rows x 21 columns]\ndate                            2020-03-14\nlat                              39.765704\nlon                            -105.904486\nSWE                                      0\nFlag                                   241\nswe_value                              6.7\nUnnamed: 0                          807931\nair_temperature_tmmn                 264.3\npotential_evapotranspiration           7.2\nmean_vapor_pressure_deficit           0.95\nrelative_humidity_rmax                72.5\nrelative_humidity_rmin                29.6\nprecipitation_amount                   0.0\nair_temperature_tmmx                 296.2\nwind_speed                             2.6\nelevation                         3317.783\nslope                             82.90507\ncurvature                       -4467.9272\naspect                           61.189377\neastness                          0.719519\nnorthness                         0.449076\nName: 439007, dtype: object\n[2020]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc exists\n<class 'datetime.date'> 39.7657045 -105.9044855\n<xarray.Dataset>\nDimensions:          (lon: 1386, lat: 585, day: 366, crs: 1)\nCoordinates:\n  * lon              (lon) float64 -124.8 -124.7 -124.7 ... -67.14 -67.1 -67.06\n  * lat              (lat) float64 49.4 49.36 49.32 49.28 ... 25.15 25.11 25.07\n  * day              (day) datetime64[ns] 2020-01-01 2020-01-02 ... 2020-12-31\n  * crs              (crs) uint16 3\nData variables:\n    air_temperature  (day, lat, lon) float32 ...\nAttributes: (12/22)\n    geospatial_bounds_crs:      EPSG:4326\n    Conventions:                CF-1.6\n    geospatial_bounds:          POLYGON((-124.7666666333333 49.40000000000000...\n    geospatial_lat_min:         25.066666666666666\n    geospatial_lat_max:         49.40000000000000\n    geospatial_lon_min:         -124.7666666333333\n    ...                         ...\n    last_permanent_slice:       306\n    last_early_slice:           366\n    last_provisional_slice:     360\n    note3:                      Data in slices after last_permanent_slice (1-...\n    note4:                      Data in slices after last_provisional_slice (...\n    note5:                      Days correspond approximately to calendar day...\nDays since 1900-01-01: 43902\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexes.py\", line 769, in sel\n    indexer = self.index.get_loc(label_value)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/datetimes.py\", line 733, in get_loc\n    raise KeyError(key)\nKeyError: 43902\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/M8hvHviJxdZD/training_sanity_check.py\", line 111, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/M8hvHviJxdZD/training_sanity_check.py\", line 88, in check_gridmet\n    selected_data = dataset.sel(day=days_difference, lat=lat, lon=lon)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataset.py\", line 3020, in sel\n    query_results = map_index_queries(\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexing.py\", line 190, in map_index_queries\n    results.append(index.sel(labels, **options))\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexes.py\", line 771, in sel\n    raise KeyError(\nKeyError: \"not all values found in index 'day'. Try setting the `method` keyword argument (example: method='nearest').\"\n",
  "history_begin_time" : 1698181230775,
  "history_end_time" : 1698181234170,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "RCueWuwQcvGe",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date_value = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date_value, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  selected_data = dataset.sel(day=days_difference, lat=lat, lon=lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n568033  2019-04-22  39.599784 -106.515340  ...  352.56476 -0.128690   0.781176\n482891  2022-01-03  44.830989 -118.184455  ...  169.14963  0.186067  -0.776379\n[2 rows x 21 columns]\ndate                            2019-04-22\nlat                              39.599784\nlon                             -106.51534\nSWE                                      0\nFlag                                   241\nswe_value                             10.9\nUnnamed: 0                          569146\nair_temperature_tmmn                 271.0\npotential_evapotranspiration           4.2\nmean_vapor_pressure_deficit           0.17\nrelative_humidity_rmax                84.9\nrelative_humidity_rmin                45.8\nprecipitation_amount                  15.1\nair_temperature_tmmx                 268.9\nwind_speed                       11.900001\nelevation                        2981.0798\nslope                             79.91771\ncurvature                         898.9464\naspect                           352.56476\neastness                          -0.12869\nnorthness                         0.781176\nName: 568033, dtype: object\n[2019]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc exists\n<class 'datetime.date'> 39.599784 -106.51534\nDays since 1900-01-01: 43575\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexes.py\", line 769, in sel\n    indexer = self.index.get_loc(label_value)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/datetimes.py\", line 733, in get_loc\n    raise KeyError(key)\nKeyError: 43575\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/RCueWuwQcvGe/training_sanity_check.py\", line 110, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/RCueWuwQcvGe/training_sanity_check.py\", line 87, in check_gridmet\n    selected_data = dataset.sel(day=days_difference, lat=lat, lon=lon)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/dataset.py\", line 3020, in sel\n    query_results = map_index_queries(\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexing.py\", line 190, in map_index_queries\n    results.append(index.sel(labels, **options))\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/xarray/core/indexes.py\", line 771, in sel\n    raise KeyError(\nKeyError: \"not all values found in index 'day'. Try setting the `method` keyword argument (example: method='nearest').\"\n",
  "history_begin_time" : 1698181174785,
  "history_end_time" : 1698181178336,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "O2wjIkAi4MyI",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\nfrom datetime import date\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  selected_data = dataset.sel(day=days_difference, lat=lat, lon=lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n371136  2022-05-13  37.156571 -119.199551  ...  127.41530  0.671226  -0.545980\n345533  2022-08-16  48.520885 -120.735671  ...  222.58492 -0.594904  -0.634659\n[2 rows x 21 columns]\ndate                            2022-05-13\nlat                              37.156571\nlon                            -119.199551\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                           34442\nair_temperature_tmmn                 273.0\npotential_evapotranspiration           2.7\nmean_vapor_pressure_deficit           0.75\nrelative_humidity_rmax           91.700005\nrelative_humidity_rmin                20.6\nprecipitation_amount                   0.0\nair_temperature_tmmx                 289.7\nwind_speed                             1.8\nelevation                        2340.3757\nslope                             72.63195\ncurvature                       -3439.9878\naspect                            127.4153\neastness                          0.671226\nnorthness                         -0.54598\nName: 371136, dtype: object\n[2022]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\n2022-05-13 37.156571 -119.1995515\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/O2wjIkAi4MyI/training_sanity_check.py\", line 110, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/O2wjIkAi4MyI/training_sanity_check.py\", line 81, in check_gridmet\n    reference_date = date(1900, 1, 1)\nTypeError: 'str' object is not callable\n",
  "history_begin_time" : 1698181151995,
  "history_end_time" : 1698181155395,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "ApWuL65AfLs7",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\nimport xarray as xr\n\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  nc_file = f\"{work_dir}/gridmet_climatology/tmmn_{date_object.year}.nc\"\n  \n  dataset = xr.open_dataset(nc_file)\n#   date = \"2023-10-23\"\n#   lat = 30.0\n#   lon = -90.0\n  # Define the reference date (1900-01-01)\n  reference_date = date(1900, 1, 1)\n\n  # Calculate the difference in days\n  days_difference = (date_object - reference_date).days\n  print(f\"Days since 1900-01-01: {days_difference}\")\n  \n  selected_data = dataset.sel(day=days_difference, lat=lat, lon=lon)\n  print(selected_data)\n  \n  tmmn_check_values = selected_data.air_temperature.values\n  print(\"tmmn values: \", tmmn_check_values)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n215918  2019-05-07  40.199347 -105.599058  ...  239.54501 -0.711435  -0.469121\n86890   2022-03-15  39.134482 -111.438108  ...  169.13013  0.186390  -0.776346\n[2 rows x 21 columns]\ndate                            2019-05-07\nlat                              40.199347\nlon                            -105.599058\nSWE                                    255\nFlag                                   255\nswe_value                              0.0\nUnnamed: 0                          667346\nair_temperature_tmmn                 272.1\npotential_evapotranspiration           3.4\nmean_vapor_pressure_deficit           0.02\nrelative_humidity_rmax                46.9\nrelative_humidity_rmin           22.300001\nprecipitation_amount                   0.0\nair_temperature_tmmx                 285.9\nwind_speed                             4.6\nelevation                        3119.9756\nslope                             75.04661\ncurvature                       -4997.6055\naspect                           239.54501\neastness                         -0.711435\nnorthness                        -0.469121\nName: 215918, dtype: object\n[2019]\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2019.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2019.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2019.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2019.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2019.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2019.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2019.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vs_2019.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2019.nc\n2019-05-07 40.199347 -105.5990585\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/ApWuL65AfLs7/training_sanity_check.py\", line 109, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/ApWuL65AfLs7/training_sanity_check.py\", line 80, in check_gridmet\n    reference_date = date(1900, 1, 1)\nTypeError: 'str' object is not callable\n",
  "history_begin_time" : 1698180979297,
  "history_end_time" : 1698181018872,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "lSPdvEiN4jRD",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n185371  2020-12-08  40.493744 -112.614901  ...  307.02010 -0.673779   0.541959\n6179    2021-08-06  40.398035 -106.605171  ...  242.86911 -0.727244  -0.427853\n[2 rows x 21 columns]\ndate                            2020-12-08\nlat                              40.493744\nlon                            -112.614901\nSWE                                    255\nFlag                                   255\nswe_value                              2.2\nUnnamed: 0                          842604\nair_temperature_tmmn                 271.7\npotential_evapotranspiration           6.3\nmean_vapor_pressure_deficit            1.0\nrelative_humidity_rmax           39.100002\nrelative_humidity_rmin                41.5\nprecipitation_amount                   8.0\nair_temperature_tmmx                 295.6\nwind_speed                             1.4\nelevation                         2482.975\nslope                            48.767998\ncurvature                       -16008.254\naspect                            307.0201\neastness                         -0.673779\nnorthness                         0.541959\nName: 185371, dtype: object\n[2020]\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2020.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2020.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2020.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2020.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2020.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2020.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2020.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vs_2020.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2020.nc\n2020-12-08 40.4937435 -112.6149005\ndate                            2021-08-06\nlat                              40.398035\nlon                            -106.605171\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          478732\nair_temperature_tmmn                 280.0\npotential_evapotranspiration           6.1\nmean_vapor_pressure_deficit           0.36\nrelative_humidity_rmax                82.3\nrelative_humidity_rmin           22.800001\nprecipitation_amount                   0.0\nair_temperature_tmmx                 295.3\nwind_speed                             3.8\nelevation                          3073.36\nslope                             50.15102\ncurvature                        -4950.501\naspect                           242.86911\neastness                         -0.727244\nnorthness                        -0.427853\nName: 6179, dtype: object\n[2021]\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2021.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2021.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2021.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2021.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2021.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2021.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2021.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vs_2021.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2021.nc\n2021-08-06 40.3980345 -106.6051715\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698180342243,
  "history_end_time" : 1698180406407,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "6CR1X73xw1ne",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...      aspect  eastness  northness\n801346  2022-12-17  40.534720 -105.886520  ...   80.519905  0.778523   0.163239\n540189  2022-10-13  37.577798 -112.902361  ...  156.107400  0.384829  -0.740663\n[2 rows x 21 columns]\ndate                            2022-12-17\nlat                               40.53472\nlon                             -105.88652\nSWE                                     17\nFlag                                   241\nswe_value                              NaN\nUnnamed: 0                          125910\nair_temperature_tmmn                 252.9\npotential_evapotranspiration           1.7\nmean_vapor_pressure_deficit            0.1\nrelative_humidity_rmax               100.0\nrelative_humidity_rmin                60.5\nprecipitation_amount                   4.1\nair_temperature_tmmx                 263.4\nwind_speed                             5.0\nelevation                         3366.808\nslope                             66.43494\ncurvature                        -4173.711\naspect                           80.519905\neastness                          0.778523\nnorthness                         0.163239\nName: 801346, dtype: object\n[2022]\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vs_2022.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc\n2022-12-17 40.5347195 -105.8865195\ndate                            2022-10-13\nlat                              37.577798\nlon                            -112.902361\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          144460\nair_temperature_tmmn                 276.8\npotential_evapotranspiration           5.6\nmean_vapor_pressure_deficit           1.07\nrelative_humidity_rmax                36.5\nrelative_humidity_rmin                33.8\nprecipitation_amount                   0.0\nair_temperature_tmmx                 285.9\nwind_speed                             1.7\nelevation                        2713.6367\nslope                             56.45075\ncurvature                        -2768.771\naspect                            156.1074\neastness                          0.384829\nnorthness                        -0.740663\nName: 540189, dtype: object\n[2022]\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/pr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/etr_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2022.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2022.nc exists\n2022-10-13 37.5777975 -112.9023615\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698180280095,
  "history_end_time" : 1698180317874,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "rOBQdAUdxc5u",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  #download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...     aspect  eastness  northness\n520704  2022-08-27  46.178208 -121.930430  ...  176.96130  0.052961  -0.784695\n295760  2020-10-30  43.568798 -111.213529  ...  166.65277  0.226877  -0.771709\n[2 rows x 21 columns]\ndate                            2022-08-27\nlat                              46.178208\nlon                             -121.93043\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                           40753\nair_temperature_tmmn                 279.5\npotential_evapotranspiration           6.6\nmean_vapor_pressure_deficit           0.45\nrelative_humidity_rmax                36.3\nrelative_humidity_rmin                52.8\nprecipitation_amount                   0.0\nair_temperature_tmmx                 300.6\nwind_speed                             4.7\nelevation                          1054.12\nslope                            75.909485\ncurvature                        1344.5833\naspect                            176.9613\neastness                          0.052961\nnorthness                        -0.784695\nName: 520704, dtype: object\n[2022]\n2022-08-27 46.178208 -121.9304305\ndate                            2020-10-30\nlat                              43.568798\nlon                            -111.213529\nSWE                                      0\nFlag                                   241\nswe_value                              0.0\nUnnamed: 0                          971397\nair_temperature_tmmn                 271.8\npotential_evapotranspiration           8.8\nmean_vapor_pressure_deficit           1.35\nrelative_humidity_rmax                67.1\nrelative_humidity_rmin                54.2\nprecipitation_amount                  13.0\nair_temperature_tmmx                 291.4\nwind_speed                             6.2\nelevation                        2245.5928\nslope                             70.27557\ncurvature                       -1143.6063\naspect                           166.65277\neastness                          0.226877\nnorthness                        -0.771709\nName: 295760, dtype: object\n[2020]\n2020-10-30 43.5687975 -111.213529\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698179706053,
  "history_end_time" : 1698179708796,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "ljkEznaJjnNb",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\n#from gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  #download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'lat', 'lon', 'SWE', 'Flag', 'swe_value', 'Unnamed: 0',\n       'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness'],\n      dtype='object')\n              date        lat         lon  ...      aspect  eastness  northness\n688     2022-08-13  37.192360 -118.939041  ...   24.605782  0.394541   0.737872\n564914  2020-11-26  45.186647 -115.974600  ...  157.047530  0.371828  -0.744204\n[2 rows x 21 columns]\ndate                            2022-08-13\nlat                               37.19236\nlon                            -118.939041\nSWE                                    255\nFlag                                   255\nswe_value                              0.0\nUnnamed: 0                           35629\nair_temperature_tmmn                 280.4\npotential_evapotranspiration           6.0\nmean_vapor_pressure_deficit           1.24\nrelative_humidity_rmax                45.0\nrelative_humidity_rmin                23.6\nprecipitation_amount                   0.0\nair_temperature_tmmx                 291.6\nwind_speed                             2.3\nelevation                        3030.4348\nslope                             76.84091\ncurvature                        -84.35688\naspect                           24.605782\neastness                          0.394541\nnorthness                         0.737872\nName: 688, dtype: object\n[2022]\n2022-08-13 37.19236 -118.9390405\ndate                            2020-11-26\nlat                              45.186647\nlon                              -115.9746\nSWE                                      0\nFlag                                   241\nswe_value                              2.1\nUnnamed: 0                          860526\nair_temperature_tmmn                 260.8\npotential_evapotranspiration           8.5\nmean_vapor_pressure_deficit           1.91\nrelative_humidity_rmax               100.0\nrelative_humidity_rmin                22.2\nprecipitation_amount                   0.0\nair_temperature_tmmx                 290.3\nwind_speed                             3.6\nelevation                        2163.2332\nslope                            56.794518\ncurvature                        181.25679\naspect                           157.04753\neastness                          0.371828\nnorthness                        -0.744204\nName: 564914, dtype: object\n[2020]\n2020-11-26 45.186647 -115.9746\nIf it reaches here, everything is good. The training.csv passed all our sanity cheks!\n",
  "history_begin_time" : 1698170524659,
  "history_end_time" : 1698170527525,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "T1hL14nqIzYd",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\nfrom datetime import datetime\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2023.nc exists\nFile /home/chetana/gridmet_test_run/gridmet_climatology/vs_2023.nc exists\nChecking file: rmax_2023.nc\nVariable name: rmax\n/home/chetana/gridmet_test_run/testing_output/2023_rmax_2023-05-26.csv already exists. Skipping..\nChecking file: etr_2023.nc\nVariable name: etr\n/home/chetana/gridmet_test_run/testing_output/2023_etr_2023-05-26.csv already exists. Skipping..\nChecking file: rmin_2023.nc\nVariable name: rmin\n/home/chetana/gridmet_test_run/testing_output/2023_rmin_2023-05-26.csv already exists. Skipping..\nChecking file: pr_2023.nc\nVariable name: pr\n/home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.csv already exists. Skipping..\nChecking file: tmmn_2023.nc\nVariable name: tmmn\n/home/chetana/gridmet_test_run/testing_output/2023_tmmn_2023-05-26.csv already exists. Skipping..\nChecking file: vpd_2023.nc\nVariable name: vpd\n/home/chetana/gridmet_test_run/testing_output/2023_vpd_2023-05-26.csv already exists. Skipping..\nChecking file: vs_2023.nc\nVariable name: vs\n/home/chetana/gridmet_test_run/testing_output/2023_vs_2023-05-26.csv already exists. Skipping..\nChecking file: tmmx_2023.nc\nVariable name: tmmx\n/home/chetana/gridmet_test_run/testing_output/2023_tmmx_2023-05-26.csv already exists. Skipping..\n    Latitude  Longitude   pr\n53      49.0   -123.092  0.0\n54      49.0   -123.056  0.0\n55      49.0   -123.020  0.0\n61      49.0   -122.804  0.0\n62      49.0   -122.768  0.0\ncount    310570.000000\nmean          3.278189\nstd           6.983025\nmin           0.000000\n25%           0.000000\n50%           0.600000\n75%           3.600000\nmax         164.700000\nName: pr, dtype: float64\ntest image is saved at /home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.png\n",
  "history_begin_time" : 1698167069505,
  "history_end_time" : 1698167105159,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "KB98irv3ZhvD",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  print(row)\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vs_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2023.nc\nChecking file: rmax_2023.nc\nVariable name: rmax\n/home/chetana/gridmet_test_run/testing_output/2023_rmax_2023-05-26.csv already exists. Skipping..\nChecking file: rmin_2023.nc\nVariable name: rmin\n/home/chetana/gridmet_test_run/testing_output/2023_rmin_2023-05-26.csv already exists. Skipping..\nChecking file: pr_2023.nc\nVariable name: pr\n/home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.csv already exists. Skipping..\nChecking file: tmmn_2023.nc\nVariable name: tmmn\n/home/chetana/gridmet_test_run/testing_output/2023_tmmn_2023-05-26.csv already exists. Skipping..\nChecking file: vs_2023.nc\nVariable name: vs\n/home/chetana/gridmet_test_run/testing_output/2023_vs_2023-05-26.csv already exists. Skipping..\nChecking file: tmmx_2023.nc\nVariable name: tmmx\n/home/chetana/gridmet_test_run/testing_output/2023_tmmx_2023-05-26.csv already exists. Skipping..\n    Latitude  Longitude   pr\n53      49.0   -123.092  0.0\n54      49.0   -123.056  0.0\n55      49.0   -123.020  0.0\n61      49.0   -122.804  0.0\n62      49.0   -122.768  0.0\ncount    310570.000000\nmean          3.278189\nstd           6.983025\nmin           0.000000\n25%           0.000000\n50%           0.600000\n75%           3.600000\nmax         164.700000\nName: pr, dtype: float64\ntest image is saved at /home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.png\nall the current columns:  Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n       'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n       'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n       'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n       'relative_humidity_rmin_1', 'precipitation_amount_1',\n       'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n       'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n       'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n       'relative_humidity_rmin_2', 'precipitation_amount_2',\n       'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n       'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n       'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n       'relative_humidity_rmin_3', 'precipitation_amount_3',\n       'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n       'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n       'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n       'relative_humidity_rmin_4', 'precipitation_amount_4',\n       'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n       'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n       'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n       'relative_humidity_rmin_5', 'precipitation_amount_5',\n       'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n       'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n       'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n       'relative_humidity_rmin_6', 'precipitation_amount_6',\n       'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n       'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n       'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n       'relative_humidity_rmin_7', 'precipitation_amount_7',\n       'air_temperature_tmmx_7', 'wind_speed_7'],\n      dtype='object')\n              date  level_0  ...  air_temperature_tmmx_7  wind_speed_7\n327296  2019-02-02   327296  ...                   269.9           2.9\n527617  2021-07-04   527617  ...                   302.0           3.0\n[2 rows x 93 columns]\ndate                        2019-02-02\nlevel_0                         327296\nindex                           587608\nlat                          39.384881\nlon                        -106.191947\n                               ...    \nrelative_humidity_rmax_7          79.9\nrelative_humidity_rmin_7          49.0\nprecipitation_amount_7             2.1\nair_temperature_tmmx_7           269.9\nwind_speed_7                       2.9\nName: 327296, Length: 93, dtype: object\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/KB98irv3ZhvD/training_sanity_check.py\", line 87, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/KB98irv3ZhvD/training_sanity_check.py\", line 64, in check_gridmet\n    date_object = datetime.strptime(date, date_format).date()\nNameError: name 'datetime' is not defined\n",
  "history_begin_time" : 1698167051433,
  "history_end_time" : 1698167105113,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "F1jh7dXLDmoE",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables(yearlist)\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vs_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2023.nc\nChecking file: rmax_2023.nc\nVariable name: rmax\n/home/chetana/gridmet_test_run/testing_output/2023_rmax_2023-05-26.csv already exists. Skipping..\nChecking file: etr_2023.nc\nVariable name: etr\n/home/chetana/gridmet_test_run/testing_output/2023_etr_2023-05-26.csv already exists. Skipping..\nChecking file: rmin_2023.nc\nVariable name: rmin\n/home/chetana/gridmet_test_run/testing_output/2023_rmin_2023-05-26.csv already exists. Skipping..\nChecking file: pr_2023.nc\nVariable name: pr\n/home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.csv already exists. Skipping..\nChecking file: tmmn_2023.nc\nVariable name: tmmn\n/home/chetana/gridmet_test_run/testing_output/2023_tmmn_2023-05-26.csv already exists. Skipping..\nChecking file: vpd_2023.nc\nVariable name: vpd\n/home/chetana/gridmet_test_run/testing_output/2023_vpd_2023-05-26.csv already exists. Skipping..\nChecking file: vs_2023.nc\nVariable name: vs\n/home/chetana/gridmet_test_run/testing_output/2023_vs_2023-05-26.csv already exists. Skipping..\nChecking file: tmmx_2023.nc\nVariable name: tmmx\n/home/chetana/gridmet_test_run/testing_output/2023_tmmx_2023-05-26.csv already exists. Skipping..\n    Latitude  Longitude   pr\n53      49.0   -123.092  0.0\n54      49.0   -123.056  0.0\n55      49.0   -123.020  0.0\n61      49.0   -122.804  0.0\n62      49.0   -122.768  0.0\ncount    310570.000000\nmean          3.278189\nstd           6.983025\nmin           0.000000\n25%           0.000000\n50%           0.600000\n75%           3.600000\nmax         164.700000\nName: pr, dtype: float64\ntest image is saved at /home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.png\nall the current columns:  Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n       'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n       'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n       'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n       'relative_humidity_rmin_1', 'precipitation_amount_1',\n       'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n       'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n       'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n       'relative_humidity_rmin_2', 'precipitation_amount_2',\n       'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n       'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n       'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n       'relative_humidity_rmin_3', 'precipitation_amount_3',\n       'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n       'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n       'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n       'relative_humidity_rmin_4', 'precipitation_amount_4',\n       'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n       'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n       'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n       'relative_humidity_rmin_5', 'precipitation_amount_5',\n       'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n       'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n       'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n       'relative_humidity_rmin_6', 'precipitation_amount_6',\n       'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n       'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n       'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n       'relative_humidity_rmin_7', 'precipitation_amount_7',\n       'air_temperature_tmmx_7', 'wind_speed_7'],\n      dtype='object')\n              date  level_0  ...  air_temperature_tmmx_7  wind_speed_7\n853276  2019-02-22   853276  ...                   298.5           2.3\n820733  2019-08-11   820733  ...                   282.6           4.1\n[2 rows x 93 columns]\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/F1jh7dXLDmoE/training_sanity_check.py\", line 86, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/F1jh7dXLDmoE/training_sanity_check.py\", line 63, in check_gridmet\n    date_object = datetime.strptime(date, date_format).date()\nNameError: name 'datetime' is not defined\n",
  "history_begin_time" : 1698166960798,
  "history_end_time" : 1698167011339,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "y6E8dpzRsH53",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  # Specify the format of the date string\n  date_format = '%Y-%m-%d'\n\n  # Convert the date string to a date object\n  date_object = datetime.strptime(date, date_format).date()\n  yearlist = [date_object.year]\n  print(yearlist)\n  download_gridmet_of_specific_variables()\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2023.nc\n",
  "history_begin_time" : 1698166934698,
  "history_end_time" : 1698166956451,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "f8mt4h70ETLJ",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\nfrom gridmet_testing import download_gridmet_of_specific_variables\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n# all the current columns: Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n# 'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n# 'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n# 'relative_humidity_rmin', 'precipitation_amount',\n# 'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n# 'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n# 'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n# 'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n# 'relative_humidity_rmin_1', 'precipitation_amount_1',\n# 'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n# 'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n# 'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n# 'relative_humidity_rmin_2', 'precipitation_amount_2',\n# 'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n# 'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n# 'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n# 'relative_humidity_rmin_3', 'precipitation_amount_3',\n# 'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n# 'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n# 'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n# 'relative_humidity_rmin_4', 'precipitation_amount_4',\n# 'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n# 'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n# 'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n# 'relative_humidity_rmin_5', 'precipitation_amount_5',\n# 'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n# 'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n# 'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n# 'relative_humidity_rmin_6', 'precipitation_amount_6',\n# 'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n# 'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n# 'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n# 'relative_humidity_rmin_7', 'precipitation_amount_7',\n# 'air_temperature_tmmx_7', 'wind_speed_7'],\n\n\ndef check_gridmet(row):\n  # check air_temperature_tmmn, precipitation_amount\n  date = row[\"date\"]\n  lat = row[\"lat\"]\n  lon = row[\"lon\"]\n  download_gridmet_of_specific_variables()\n  print(date, lat, lon)\n  \n  pass\n\ndef check_elevation(row):\n  pass\n\ndef check_amsr(row):\n  pass\n\ndef check_snow_cover_area(row):\n  pass\n\ndef check_passive_microwave(row):\n  pass\n\ndef check_snotel_cdec(row):\n  pass\n\nrandom_sample.apply(check_gridmet, axis=1)\n# random_sample.apply(check_elevation, axis=1)\n# random_sample.apply(check_amsr, axis=1)\n# random_sample.apply(check_snow_cover_area, axis=1)\n# random_sample.apply(check_passive_microwave, axis=1)\n# random_sample.apply(check_snotel_cdec, axis=1)\n\nprint(\"If it reaches here, everything is good. The training.csv passed all our sanity cheks!\")\n\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2023.nc\nDeleted file: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmn_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmn_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/tmmx_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/tmmx_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/pr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/pr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vpd_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vpd_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/etr_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/etr_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmax_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmax_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/rmin_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/rmin_2023.nc\nDownloading http://www.northwestknowledge.net/metdata/data/vs_2023.nc\nFile downloaded successfully and saved as: /home/chetana/gridmet_test_run/gridmet_climatology/vs_2023.nc\nChecking file: rmax_2023.nc\nVariable name: rmax\n/home/chetana/gridmet_test_run/testing_output/2023_rmax_2023-05-26.csv already exists. Skipping..\nChecking file: etr_2023.nc\nVariable name: etr\n/home/chetana/gridmet_test_run/testing_output/2023_etr_2023-05-26.csv already exists. Skipping..\nChecking file: rmin_2023.nc\nVariable name: rmin\n/home/chetana/gridmet_test_run/testing_output/2023_rmin_2023-05-26.csv already exists. Skipping..\nChecking file: pr_2023.nc\nVariable name: pr\n/home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.csv already exists. Skipping..\nChecking file: tmmn_2023.nc\nVariable name: tmmn\n/home/chetana/gridmet_test_run/testing_output/2023_tmmn_2023-05-26.csv already exists. Skipping..\nChecking file: vpd_2023.nc\nVariable name: vpd\n/home/chetana/gridmet_test_run/testing_output/2023_vpd_2023-05-26.csv already exists. Skipping..\nChecking file: vs_2023.nc\nVariable name: vs\n/home/chetana/gridmet_test_run/testing_output/2023_vs_2023-05-26.csv already exists. Skipping..\nChecking file: tmmx_2023.nc\nVariable name: tmmx\n/home/chetana/gridmet_test_run/testing_output/2023_tmmx_2023-05-26.csv already exists. Skipping..\n    Latitude  Longitude   pr\n53      49.0   -123.092  0.0\n54      49.0   -123.056  0.0\n55      49.0   -123.020  0.0\n61      49.0   -122.804  0.0\n62      49.0   -122.768  0.0\ncount    310570.000000\nmean          3.278189\nstd           6.983025\nmin           0.000000\n25%           0.000000\n50%           0.600000\n75%           3.600000\nmax         164.700000\nName: pr, dtype: float64\ntest image is saved at /home/chetana/gridmet_test_run/testing_output/2023_pr_2023-05-26.png\nall the current columns:  Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n       'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n       'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n       'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n       'relative_humidity_rmin_1', 'precipitation_amount_1',\n       'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n       'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n       'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n       'relative_humidity_rmin_2', 'precipitation_amount_2',\n       'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n       'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n       'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n       'relative_humidity_rmin_3', 'precipitation_amount_3',\n       'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n       'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n       'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n       'relative_humidity_rmin_4', 'precipitation_amount_4',\n       'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n       'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n       'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n       'relative_humidity_rmin_5', 'precipitation_amount_5',\n       'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n       'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n       'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n       'relative_humidity_rmin_6', 'precipitation_amount_6',\n       'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n       'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n       'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n       'relative_humidity_rmin_7', 'precipitation_amount_7',\n       'air_temperature_tmmx_7', 'wind_speed_7'],\n      dtype='object')\n              date  level_0  ...  air_temperature_tmmx_7  wind_speed_7\n656411  2020-02-27   656411  ...                   291.8           2.7\n977511  2021-02-20   977511  ...                   268.4           6.2\n[2 rows x 93 columns]\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/f8mt4h70ETLJ/training_sanity_check.py\", line 79, in <module>\n    random_sample.apply(check_gridmet, axis=1)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 9568, in apply\n    return op.apply().__finalize__(self, method=\"apply\")\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 764, in apply\n    return self.apply_standard()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 891, in apply_standard\n    results, res_index = self.apply_series_generator()\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/apply.py\", line 907, in apply_series_generator\n    results[i] = self.f(v)\n  File \"/home/chetana/gw-workspace/f8mt4h70ETLJ/training_sanity_check.py\", line 59, in check_gridmet\n    download_gridmet_of_specific_variables()\nTypeError: download_gridmet_of_specific_variables() missing 1 required positional argument: 'year_list'\n",
  "history_begin_time" : 1698166749661,
  "history_end_time" : 1698166799957,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "dxXVxLMUUkbq",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(\"all the current columns: \", df.columns)\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nall the current columns:  Index(['date', 'level_0', 'index', 'lat', 'lon', 'SWE', 'Flag', 'swe_value',\n       'Unnamed: 0', 'air_temperature_tmmn', 'potential_evapotranspiration',\n       'mean_vapor_pressure_deficit', 'relative_humidity_rmax',\n       'relative_humidity_rmin', 'precipitation_amount',\n       'air_temperature_tmmx', 'wind_speed', 'elevation', 'slope', 'curvature',\n       'aspect', 'eastness', 'northness', 'SWE_1', 'Flag_1',\n       'air_temperature_tmmn_1', 'potential_evapotranspiration_1',\n       'mean_vapor_pressure_deficit_1', 'relative_humidity_rmax_1',\n       'relative_humidity_rmin_1', 'precipitation_amount_1',\n       'air_temperature_tmmx_1', 'wind_speed_1', 'SWE_2', 'Flag_2',\n       'air_temperature_tmmn_2', 'potential_evapotranspiration_2',\n       'mean_vapor_pressure_deficit_2', 'relative_humidity_rmax_2',\n       'relative_humidity_rmin_2', 'precipitation_amount_2',\n       'air_temperature_tmmx_2', 'wind_speed_2', 'SWE_3', 'Flag_3',\n       'air_temperature_tmmn_3', 'potential_evapotranspiration_3',\n       'mean_vapor_pressure_deficit_3', 'relative_humidity_rmax_3',\n       'relative_humidity_rmin_3', 'precipitation_amount_3',\n       'air_temperature_tmmx_3', 'wind_speed_3', 'SWE_4', 'Flag_4',\n       'air_temperature_tmmn_4', 'potential_evapotranspiration_4',\n       'mean_vapor_pressure_deficit_4', 'relative_humidity_rmax_4',\n       'relative_humidity_rmin_4', 'precipitation_amount_4',\n       'air_temperature_tmmx_4', 'wind_speed_4', 'SWE_5', 'Flag_5',\n       'air_temperature_tmmn_5', 'potential_evapotranspiration_5',\n       'mean_vapor_pressure_deficit_5', 'relative_humidity_rmax_5',\n       'relative_humidity_rmin_5', 'precipitation_amount_5',\n       'air_temperature_tmmx_5', 'wind_speed_5', 'SWE_6', 'Flag_6',\n       'air_temperature_tmmn_6', 'potential_evapotranspiration_6',\n       'mean_vapor_pressure_deficit_6', 'relative_humidity_rmax_6',\n       'relative_humidity_rmin_6', 'precipitation_amount_6',\n       'air_temperature_tmmx_6', 'wind_speed_6', 'SWE_7', 'Flag_7',\n       'air_temperature_tmmn_7', 'potential_evapotranspiration_7',\n       'mean_vapor_pressure_deficit_7', 'relative_humidity_rmax_7',\n       'relative_humidity_rmin_7', 'precipitation_amount_7',\n       'air_temperature_tmmx_7', 'wind_speed_7'],\n      dtype='object')\n              date  level_0  ...  air_temperature_tmmx_7  wind_speed_7\n846942  2021-10-20   846942  ...                   270.8           3.2\n971628  2020-05-23   971628  ...                   273.0           2.3\n[2 rows x 93 columns]\n",
  "history_begin_time" : 1698165855832,
  "history_end_time" : 1698165866170,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "UKR8Y8yI7rqq",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(df.head())\n\n# choose several random sample rows for sanity checks\nsample_size = 2\nrandom_sample = df.sample(n=sample_size)\n\nprint(random_sample)\n\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\n         date  level_0  ...  air_temperature_tmmx_7  wind_speed_7\n0  2019-01-01        0  ...                     NaN           NaN\n1  2019-01-01        1  ...                     NaN           NaN\n2  2019-01-01        2  ...                     NaN           NaN\n3  2019-01-02        3  ...                     NaN           NaN\n4  2019-01-02        4  ...                     NaN           NaN\n[5 rows x 93 columns]\n              date  level_0  ...  air_temperature_tmmx_7  wind_speed_7\n343265  2022-12-20   343265  ...                   274.9           3.4\n290746  2022-09-11   290746  ...                   287.9           4.9\n[2 rows x 93 columns]\n",
  "history_begin_time" : 1698165780106,
  "history_end_time" : 1698165790590,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "P5l6sNTCql6n",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\nimport pandas as pd\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(df.head())\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\n         date  level_0  ...  air_temperature_tmmx_7  wind_speed_7\n0  2019-01-01        0  ...                     NaN           NaN\n1  2019-01-01        1  ...                     NaN           NaN\n2  2019-01-01        2  ...                     NaN           NaN\n3  2019-01-02        3  ...                     NaN           NaN\n4  2019-01-02        4  ...                     NaN           NaN\n[5 rows x 93 columns]\n",
  "history_begin_time" : 1698165685224,
  "history_end_time" : 1698165696365,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "8cNE1dhRd13E",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\nfrom snowcast_utils import work_dir\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(df.head())\n",
  "history_output" : "today date = 2023-10-24\ntest start date:  2023-05-26\ntest end date:  2023-10-24\n/home/chetana\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/8cNE1dhRd13E/training_sanity_check.py\", line 6, in <module>\n    df = pd.read_csv(current_training_csv_path)\nNameError: name 'pd' is not defined\n",
  "history_begin_time" : 1698165674353,
  "history_end_time" : 1698165675265,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "dkCVFtfATjnb",
  "history_input" : "# Do sanity checks on the training.csv to make sure all the columns' vales are extracted correctly\n\n# pick the final training csv\ncurrent_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\ndf = pd.read_csv(current_training_csv_path)\n\nprint(df.head())\n",
  "history_output" : "Traceback (most recent call last):\n  File \"/home/chetana/gw-workspace/dkCVFtfATjnb/training_sanity_check.py\", line 4, in <module>\n    current_training_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_time_series_v1.csv'\nNameError: name 'work_dir' is not defined\n",
  "history_begin_time" : 1698165070818,
  "history_end_time" : 1698165070931,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "1c22frt9eu2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698160809424,
  "history_end_time" : 1698160809424,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Skipped"
},]
