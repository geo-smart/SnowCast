[{
  "history_id" : "aw8706t1x2y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716817415272,
  "history_end_time" : 1716817415272,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lkhd84v9cee",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716797560472,
  "history_end_time" : 1716797560472,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "krxgfqzq042",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716782410807,
  "history_end_time" : 1716782410807,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hhhrhm3poyj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716777609580,
  "history_end_time" : 1716777609580,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2uo0qb8rk72",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716774915245,
  "history_end_time" : 1716774915245,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l76xzdfvk3x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716754065126,
  "history_end_time" : 1716754065126,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hehejmax259",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716751217842,
  "history_end_time" : 1716751217842,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6y3b38b8ami",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716750880959,
  "history_end_time" : 1716751199695,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wimyknxajzt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716746640523,
  "history_end_time" : 1716746640523,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i91ijr9kiyt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716696010291,
  "history_end_time" : 1716696010291,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "haiwgopz1mx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716618218885,
  "history_end_time" : 1716618218885,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ivxibteyqdv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716609610693,
  "history_end_time" : 1716609610693,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kf77f5y44ym",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716563756384,
  "history_end_time" : 1716563756384,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "easonmoamao",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716524704794,
  "history_end_time" : 1716524704794,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pjlf0fhgkde",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716523210484,
  "history_end_time" : 1716523210484,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e0n0poskpmc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716521650056,
  "history_end_time" : 1716521650056,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d5wkcbm97ns",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716519590061,
  "history_end_time" : 1716519590061,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jgikvm6ah4e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716513818215,
  "history_end_time" : 1716513818215,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fjdck3902wf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716471261696,
  "history_end_time" : 1716471261696,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1yjv8asjjie",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716436810676,
  "history_end_time" : 1716799400422,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "znb34yvrur2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716422697779,
  "history_end_time" : 1716422827806,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "a82ko6bx1st",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716422517999,
  "history_end_time" : 1716422517999,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "opokk33cdw1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716418165175,
  "history_end_time" : 1716418165175,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rw3i304bixi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716350423076,
  "history_end_time" : 1716418192160,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "3aewpdhl40n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716264021912,
  "history_end_time" : 1716418191578,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "l1sw7vtiqy6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716215991276,
  "history_end_time" : 1716220261571,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9kc5sbz81gr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716184844589,
  "history_end_time" : 1716216036761,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "c2fbulkt1pb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716177613417,
  "history_end_time" : 1716418190705,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wfxp8ji915r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716091213677,
  "history_end_time" : 1716418189507,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xgiu8fxncb1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716062446963,
  "history_end_time" : 1716124523750,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wfwab17p1p4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716043609950,
  "history_end_time" : 1716057482671,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rutfg8o1rsj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716035693258,
  "history_end_time" : 1716036846645,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8io3d4xq5ju",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1716004809534,
  "history_end_time" : 1716418193372,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9qdjglfmxuy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715982779410,
  "history_end_time" : 1716035691958,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gov6iqtblm1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715980750473,
  "history_end_time" : 1715982778733,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fop5tm0x8s6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715972396863,
  "history_end_time" : 1715980749605,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "3usmitnhhzg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715967265148,
  "history_end_time" : 1715972396067,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4c0osbiu8ii",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715960695161,
  "history_end_time" : 1715967264425,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "a69f6koj0wq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715957532853,
  "history_end_time" : 1715960694142,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k0g26065jfs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715952722312,
  "history_end_time" : 1715957517329,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rsh1c6xee1y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715939821365,
  "history_end_time" : 1716418196107,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qazdexdgdn5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715937541703,
  "history_end_time" : 1715937541703,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "itg3f2d0p96",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715937326798,
  "history_end_time" : 1715937540098,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "tj7rb7nxobu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715927549572,
  "history_end_time" : 1715927549572,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mwrfdspd7od",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715918412968,
  "history_end_time" : 1716418197142,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "iapxaw0gw2t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715832028352,
  "history_end_time" : 1716418197453,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5a1enysi9ax",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715799528218,
  "history_end_time" : 1716418198518,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xor1th1zixg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715798137872,
  "history_end_time" : 1715799518089,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8lm1dstw0sx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715780310478,
  "history_end_time" : 1715780310478,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dt9jc7awddo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715755079426,
  "history_end_time" : 1715780309788,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fivf7exrud1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715745613278,
  "history_end_time" : 1716418200059,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "h9zw9kbcj68",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715670775249,
  "history_end_time" : 1715670775249,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lm0k5iy4h8d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715668379703,
  "history_end_time" : 1715668379703,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jgd3bwuwe0y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715660606861,
  "history_end_time" : 1715660606861,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pc7qiyebj32",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715659214153,
  "history_end_time" : 1716418200790,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "oj8kes7e4hs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715657268281,
  "history_end_time" : 1715657268281,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8ejcszo946h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715654494184,
  "history_end_time" : 1715654494184,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "v8w18ktq1bf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715651069615,
  "history_end_time" : 1715654493179,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "eyvutf7hywp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715635693957,
  "history_end_time" : 1715635693957,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m6darhcyjmt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715631991512,
  "history_end_time" : 1715631991512,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ife8vjodgnl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715593112652,
  "history_end_time" : 1715593112652,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "frx1qjsu5wb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715588595750,
  "history_end_time" : 1715588595750,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6dgx5v6antf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715580981185,
  "history_end_time" : 1715588592956,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lqdlw9rcoqw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715577232461,
  "history_end_time" : 1715577232461,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ycbyy87gbyn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715572813638,
  "history_end_time" : 1716418202894,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "v5sgfwcvq8c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715569180198,
  "history_end_time" : 1715569180198,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w529dc9avm8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715566644851,
  "history_end_time" : 1715569179294,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "oq5pue52ofs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715564158824,
  "history_end_time" : 1715566643883,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9b3t4crdx2v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715553269302,
  "history_end_time" : 1715553269302,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o5ad4h4jval",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715551757355,
  "history_end_time" : 1716418204192,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ta0te04p8bw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715550036445,
  "history_end_time" : 1715551587872,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0xrd5jkwiny",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715548411017,
  "history_end_time" : 1715551556683,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ese1pseoatl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715526734612,
  "history_end_time" : 1715548400442,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "w1qy0uz5cod",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715486409129,
  "history_end_time" : 1715486409129,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3cimtvgu7kr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715400009656,
  "history_end_time" : 1715549424570,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k93jj50hf14",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715313615201,
  "history_end_time" : 1715549422989,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jh2uoi7zlfe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715227214133,
  "history_end_time" : 1715549422458,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "y21hx2rzr4o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715140818842,
  "history_end_time" : 1715549421774,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "kvvpn3t88so",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715054413770,
  "history_end_time" : 1715549421290,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qbu61rws4uo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715045815873,
  "history_end_time" : 1715045815873,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2p29iw32sjt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1715045635621,
  "history_end_time" : 1715045800467,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1q0yycz453g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714998835420,
  "history_end_time" : 1714998835420,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "r820be6fn98",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714977334860,
  "history_end_time" : 1714977334860,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1o1em93nuyx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714968021740,
  "history_end_time" : 1715549419146,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jean2k6ga2v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714956082147,
  "history_end_time" : 1714956340263,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "vbx6zc",
  "indicator" : "Stopped"
},{
  "history_id" : "ikd0uqf5s7e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714944526287,
  "history_end_time" : 1714944767070,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "vbx6zc",
  "indicator" : "Stopped"
},{
  "history_id" : "3ksm3496tla",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714943546183,
  "history_end_time" : 1715549417759,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ev5ubah44eh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714897025125,
  "history_end_time" : 1714897025125,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g5g79fn2wz7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714894043983,
  "history_end_time" : 1714895139353,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "kqb3miikn83",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714881609446,
  "history_end_time" : 1715549416924,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "l6jjokc75im",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714409076749,
  "history_end_time" : 1714409076749,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "88dh6d1bokk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714407283785,
  "history_end_time" : 1714407283785,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ky4e5i5xdcx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714404799991,
  "history_end_time" : 1714404799991,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "okmx7nbymxw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714363209848,
  "history_end_time" : 1715549415886,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "e2slrkyorg7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714362032528,
  "history_end_time" : 1714362032528,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c7jw67xik67",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714355595201,
  "history_end_time" : 1714355595201,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nwcmhy7ljht",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714351396796,
  "history_end_time" : 1714351396796,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uxksehwahh8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714348539193,
  "history_end_time" : 1714348539193,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ohancxi6lzd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714345973105,
  "history_end_time" : 1714345973105,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1daac9uw7gj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714343583731,
  "history_end_time" : 1714343583731,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7u0xy3hou9f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714340841661,
  "history_end_time" : 1714340841661,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rzcnw96z3gn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714332797943,
  "history_end_time" : 1714332797943,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qhatahpz314",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714328816031,
  "history_end_time" : 1714328816031,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xg8yrmql439",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714323529043,
  "history_end_time" : 1714323529043,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "09gr0idneow",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714320354859,
  "history_end_time" : 1714320354859,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "udeez48jnxz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714315863006,
  "history_end_time" : 1714315863006,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "krmzl9in8o5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714283543332,
  "history_end_time" : 1714315861871,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0xl7u61nvyu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714281870735,
  "history_end_time" : 1714283515028,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5xgw1kcdo7l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714276838137,
  "history_end_time" : 1714315876800,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "byuc0dwta94",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714274662727,
  "history_end_time" : 1714281869536,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "m0zf74gfpyx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714272894586,
  "history_end_time" : 1714274352422,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "3qnpz4fxz2d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714265253350,
  "history_end_time" : 1714272892761,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gpi53dkn3wd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714265112517,
  "history_end_time" : 1714265250896,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "uaso05savy4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714192735804,
  "history_end_time" : 1714265111633,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xw9kmb8yjt6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714190417869,
  "history_end_time" : 1714274350932,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k8lgbgubuxn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714104009184,
  "history_end_time" : 1714274350432,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lbfqhgiw256",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1714017609500,
  "history_end_time" : 1714274349892,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "7p1vrwwjnii",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713931209823,
  "history_end_time" : 1714274349301,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wrua9s4jert",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713844809513,
  "history_end_time" : 1714274348762,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fxzvif3l1dy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713758409131,
  "history_end_time" : 1714274347300,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "456i73aduwe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713672009590,
  "history_end_time" : 1714274346316,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "afb04zwgemv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713585609325,
  "history_end_time" : 1714274345796,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xq5z8n7wtwh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713499209504,
  "history_end_time" : 1714274345249,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "x3hn4xo6290",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713412808771,
  "history_end_time" : 1714274344685,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "omg1xvt14in",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713326408884,
  "history_end_time" : 1714274343272,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zv3wh1o3pqz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713283461194,
  "history_end_time" : 1713283461194,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "i87okb2juzg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1713240008894,
  "history_end_time" : 1714274342538,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "m7zccbebpnx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711771209384,
  "history_end_time" : 1711771209384,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m5smdnrlre6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711684813485,
  "history_end_time" : 1714282475822,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "w1ydrtq849r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711598414918,
  "history_end_time" : 1714282474488,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "7syy9qqqxx4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711592280388,
  "history_end_time" : 1711592280388,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "414sxxtub9r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711592081729,
  "history_end_time" : 1711592081729,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "553nc6xy0ac",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711512016108,
  "history_end_time" : 1711512016108,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "q6ldnuxl0oj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711425614016,
  "history_end_time" : 1714282483091,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wegsrtuduoz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711339212526,
  "history_end_time" : 1714282483718,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "uopmsrccgib",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711252813344,
  "history_end_time" : 1711252813344,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zs3fre25riw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711166413817,
  "history_end_time" : 1711166413817,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2grkr0dq31s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1711080008930,
  "history_end_time" : 1711080008930,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wd28lf535er",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710993609519,
  "history_end_time" : 1714282484620,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8pmbnfdn1dn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710907208977,
  "history_end_time" : 1714282485237,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "p4oen2teeac",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710820808633,
  "history_end_time" : 1714282486272,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qd17pbg9eqp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710734409397,
  "history_end_time" : 1714282486917,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "enh8zdeq3qf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710690214079,
  "history_end_time" : 1710690214079,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "yrzsd8fs1z4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710648009083,
  "history_end_time" : 1714282488860,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fz36z8c1a64",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710561608560,
  "history_end_time" : 1714282489520,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "y6ag0vou4kv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710475209146,
  "history_end_time" : 1714282490273,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9csawrihbs9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710388809043,
  "history_end_time" : 1714282490834,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bu0g021djvj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710302409291,
  "history_end_time" : 1714282491494,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "a2mw6lb94a3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710216009331,
  "history_end_time" : 1714282492094,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k99s2adn0a7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710172046505,
  "history_end_time" : 1710172046505,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "h8de62n043m",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710129608994,
  "history_end_time" : 1714282493721,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "kapws85vrc0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710080234034,
  "history_end_time" : 1710080234034,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "2tw69dwjwxq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1710043208695,
  "history_end_time" : 1714282495056,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4e12g5kqpo1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709998716216,
  "history_end_time" : 1709998716216,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d07mvkepvdx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709956808825,
  "history_end_time" : 1714282495719,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "n0vcty2s0wh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709924987494,
  "history_end_time" : 1709924987494,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "datph0ycffy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709870409844,
  "history_end_time" : 1714282496790,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5q3pfng9qyd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709845595287,
  "history_end_time" : 1709845595287,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mc1mncz76e6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709844621891,
  "history_end_time" : 1709844621891,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jhiqe4grwne",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709842923315,
  "history_end_time" : 1709842923315,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zyqdpr8ki4x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709827652580,
  "history_end_time" : 1709844621140,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vlhwygowx44",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709826138635,
  "history_end_time" : 1709826138635,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gbrd2oeeukx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709797240766,
  "history_end_time" : 1709797240766,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7972iwdpnof",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709791537985,
  "history_end_time" : 1709791537985,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pjgo1sxuk7c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709784009344,
  "history_end_time" : 1714282504656,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "q5uikfs7dae",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709778056630,
  "history_end_time" : 1709778056630,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p7d0wf4lqr3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709774843542,
  "history_end_time" : 1709774843542,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "aq4fl5dn7fj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709765244604,
  "history_end_time" : 1709774842930,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6uid6u7etwl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709763117590,
  "history_end_time" : 1709765243431,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "73asj5aln93",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709751527337,
  "history_end_time" : 1709751527337,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qrbifke4q9p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709751443116,
  "history_end_time" : 1709751495316,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "t91g08ruya3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709697609197,
  "history_end_time" : 1714282506624,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "z0mamnz545h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709611208669,
  "history_end_time" : 1714282507120,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "09xksjf0uwm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709524808728,
  "history_end_time" : 1714282507679,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jvyzmvjae07",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709438408520,
  "history_end_time" : 1709438408520,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m13wi91ze8e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709352008939,
  "history_end_time" : 1709352008939,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lh74wnkdey3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709265609283,
  "history_end_time" : 1709265609283,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nuhinjdfre7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709179209313,
  "history_end_time" : 1709179209313,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7bxzi3pue6j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709137312877,
  "history_end_time" : 1709137312877,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "4pd1pvuj3au",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709092808882,
  "history_end_time" : 1709092808882,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gnsbmla6roa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709085684126,
  "history_end_time" : 1709085684126,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "tnatbvfvqi3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709078942117,
  "history_end_time" : 1709085672800,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "22urqko2ku6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709038894832,
  "history_end_time" : 1709038894832,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "z9b1227cxcg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709038872953,
  "history_end_time" : 1709038879058,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "3bxb10r2jpf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1709006408393,
  "history_end_time" : 1709006408393,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l988l8gj6tq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708971826127,
  "history_end_time" : 1708971826127,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "r7083rb0hlp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708958410855,
  "history_end_time" : 1708958410855,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "jcmzgckem8o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708954624156,
  "history_end_time" : 1708954624156,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "71chmsvxz06",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708920009312,
  "history_end_time" : 1708920009312,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yo2gyixls4s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708833608963,
  "history_end_time" : 1708833608963,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "enanu6bnubq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708747208697,
  "history_end_time" : 1708747208697,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tceran44z71",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708660808931,
  "history_end_time" : 1708660808931,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "31lf5fmm064",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708574409563,
  "history_end_time" : 1708574409563,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gy0br1uqq75",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708488009977,
  "history_end_time" : 1708488009977,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "j8j4dep7fct",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708401608823,
  "history_end_time" : 1708401608823,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yq0zvdnl76d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708352215482,
  "history_end_time" : 1708352215482,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "saktddbcb15",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708348193264,
  "history_end_time" : 1708352214863,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "7sljbnj4cs9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708315208972,
  "history_end_time" : 1708315208972,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "30qga6zb0dd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708312689869,
  "history_end_time" : 1708312689869,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "8mu575o0u15",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708305309892,
  "history_end_time" : 1708312689122,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "pmjxrqttwef",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708242679294,
  "history_end_time" : 1708242679294,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "jxkj76hf0uc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708240733506,
  "history_end_time" : 1708240733506,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "vim5g20h5xk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708238769923,
  "history_end_time" : 1708238769923,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "edaidnmjygy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708237144872,
  "history_end_time" : 1708237144872,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "sn1j4rsxk2d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708235187222,
  "history_end_time" : 1708235187222,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "0npbyql2jjp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708233874626,
  "history_end_time" : 1708233874626,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "faaym1zoz73",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708228809064,
  "history_end_time" : 1708228809064,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cc5bn0djgei",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708227613793,
  "history_end_time" : 1708227613793,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "3xqsht0ixnz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708142409234,
  "history_end_time" : 1708142409234,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ow8mba50meg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1708056009045,
  "history_end_time" : 1708056009045,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kb9s999d7at",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707969608922,
  "history_end_time" : 1707969608922,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "meedq4y8ks8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707883208774,
  "history_end_time" : 1707883208774,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "51lhhpfc701",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707796809204,
  "history_end_time" : 1707796809204,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "zc3llta3fpi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707750669706,
  "history_end_time" : 1707750669706,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "jyal2j681rd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707710409279,
  "history_end_time" : 1707710409279,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "w2dmm9u4jou",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707624009252,
  "history_end_time" : 1707624009252,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "34zdj72xj5b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707537608452,
  "history_end_time" : 1707537608452,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2d2unyprkf3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707491746682,
  "history_end_time" : 1707491746682,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "s306o2s2hf2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707484657879,
  "history_end_time" : 1707484657879,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "kwc0a03ka6j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707451209551,
  "history_end_time" : 1707451209551,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qflic5r8dm2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707434644163,
  "history_end_time" : 1707434644163,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "00jsn3qvf9j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707432571788,
  "history_end_time" : 1707432571788,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Skipped"
},{
  "history_id" : "z54aw2knc2n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707431129226,
  "history_end_time" : 1707432053947,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "8drjlv",
  "indicator" : "Stopped"
},{
  "history_id" : "m49wzx5uhhl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707418188620,
  "history_end_time" : 1707418188620,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "mahjd7",
  "indicator" : "Skipped"
},{
  "history_id" : "tofth20zxzt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707413610254,
  "history_end_time" : 1707413610254,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "mahjd7",
  "indicator" : "Skipped"
},{
  "history_id" : "0fexm4zx29d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707364808542,
  "history_end_time" : 1707364808542,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5jf4l3wgbm6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707278408796,
  "history_end_time" : 1707278408796,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9c44n0p36bg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707192718846,
  "history_end_time" : 1707192718846,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fq75ztfz77z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707192008917,
  "history_end_time" : 1707448888636,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "feiath144nx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707189398999,
  "history_end_time" : 1707189398999,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qhfscga1t9w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707105608994,
  "history_end_time" : 1707750639179,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "u10r47bnhkf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1707019209050,
  "history_end_time" : 1707750639650,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wwxzsuxsoqq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706932808924,
  "history_end_time" : 1707750640193,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vwax9d26rdy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706846409392,
  "history_end_time" : 1707750640627,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "d6g2d9jte0b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706760009651,
  "history_end_time" : 1707750643265,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5h6i63v8dca",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706673609189,
  "history_end_time" : 1707750643785,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "78bvmx131ql",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706587209125,
  "history_end_time" : 1707750644969,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1rr39wxheoa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706500808731,
  "history_end_time" : 1707750645646,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "dzxcbwy606r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706414409059,
  "history_end_time" : 1707750646090,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ui1eest1uih",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706366105875,
  "history_end_time" : 1706366105875,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6c8fypm7abq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706364888423,
  "history_end_time" : 1706364888423,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a2yrtwxrlb6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706328009214,
  "history_end_time" : 1707750646889,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5ifdz2y8p49",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706280497894,
  "history_end_time" : 1706280497894,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s47h29yqzwx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706244881205,
  "history_end_time" : 1706244881205,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3fmcg0mz4yg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706241609437,
  "history_end_time" : 1706244810639,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hvlxe08jn3y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706155209311,
  "history_end_time" : 1706244801305,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jxqnrkul9c8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1706068808763,
  "history_end_time" : 1706244800323,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hsnzeh37nh6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705982408728,
  "history_end_time" : 1706244799958,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "yvw5o36ki3w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705896758896,
  "history_end_time" : 1706244798994,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fyca93g5l46",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705896009488,
  "history_end_time" : 1706244798513,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "l938hewuo2j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705849063723,
  "history_end_time" : 1706244798002,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "oal5sfrmruw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705809608648,
  "history_end_time" : 1705849649586,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2rtdknmongl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705793526739,
  "history_end_time" : 1705849647043,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vnug94adzde",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705790835034,
  "history_end_time" : 1705790835034,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4f1jle59wr8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705770627680,
  "history_end_time" : 1705849642233,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "9ebciv5ti3s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705762760528,
  "history_end_time" : 1705849640877,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "su565jbty3k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705723209162,
  "history_end_time" : 1705789738429,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5i4j9h7uiy1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705636808559,
  "history_end_time" : 1705770636194,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qon26k54gq2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705550408995,
  "history_end_time" : 1705770635519,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "oo5czcjg3cx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705464008494,
  "history_end_time" : 1705770635022,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "m57o7mjuxni",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705422422445,
  "history_end_time" : 1705422422445,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oh1ogc1u8sy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705377609098,
  "history_end_time" : 1705770633012,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5c5zcwjhjey",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705291208704,
  "history_end_time" : 1705770632117,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qsu8n8m3hor",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705278850555,
  "history_end_time" : 1705278850555,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "20854ehqymh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705270952722,
  "history_end_time" : 1705270952722,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bzqlk16l1r8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705204809208,
  "history_end_time" : 1705789661986,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vuwymsks8az",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705169057157,
  "history_end_time" : 1705169057157,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jyxsg2tmke0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705118409324,
  "history_end_time" : 1705789660750,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "b0efahs5ygh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705072448050,
  "history_end_time" : 1705072448050,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m3bepdz71uk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1705032009129,
  "history_end_time" : 1705789659523,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "uhe9a4wja6w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704979918272,
  "history_end_time" : 1704979918272,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "54mbl09vcx6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704945609334,
  "history_end_time" : 1705789658787,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0kgttv0q92t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704918977562,
  "history_end_time" : 1704918977562,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yl3tzrhi25h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704908919537,
  "history_end_time" : 1704908919537,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "25ezxzvf6an",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704859207391,
  "history_end_time" : 1705789668240,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1o17wrdmk04",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704775840728,
  "history_end_time" : 1704775840728,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "37vmbg2seyi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704772806595,
  "history_end_time" : 1705789667267,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "dxlgpfxjt40",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704726161224,
  "history_end_time" : 1704727049019,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gnpoaldqfyt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704686408135,
  "history_end_time" : 1705789666631,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xn2pct9fl9c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704644803678,
  "history_end_time" : 1704644803678,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wsspum0n8t1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704600007930,
  "history_end_time" : 1705789665900,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "a9huhyq1f4y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704566156603,
  "history_end_time" : 1704566156603,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qxq8ijhf9rb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704565587359,
  "history_end_time" : 1704565587359,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tp3ooc258r5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704564424142,
  "history_end_time" : 1704564424142,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8x8ugo4wr8e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704562992152,
  "history_end_time" : 1704562992152,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kdep7pp47wh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704561889774,
  "history_end_time" : 1704561889774,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wy88oply9p8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704561861144,
  "history_end_time" : 1704561887029,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "v0rdt1hoh8j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704555479184,
  "history_end_time" : 1704555479184,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ahnchsdgthn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704555028174,
  "history_end_time" : 1704555028174,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m55hujugguh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704553241748,
  "history_end_time" : 1704553241748,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ikler6g4t4r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704552254588,
  "history_end_time" : 1704552254588,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xz1bsnyupqc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704513607165,
  "history_end_time" : 1705789671081,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qteoarhvzzu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704427207279,
  "history_end_time" : 1705789671855,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0y1ht4vqafl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704340807346,
  "history_end_time" : 1705789673098,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "nzpe91ki4un",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704330109266,
  "history_end_time" : 1704330109266,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "67kyq1gequx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704329364827,
  "history_end_time" : 1704329364827,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ex05mx9vpn9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704254407279,
  "history_end_time" : 1705789675624,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1wcy5uux9ak",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704208947940,
  "history_end_time" : 1704208947940,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l2x8h75bnyu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704207352000,
  "history_end_time" : 1704207352000,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "15bzxwbcu6n",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704205859348,
  "history_end_time" : 1704205859348,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6qs0t2h1huy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704168007195,
  "history_end_time" : 1705789676810,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "mq0rc5chk2d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1704081607246,
  "history_end_time" : 1705789677595,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "xp1qp6cxujw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703995208032,
  "history_end_time" : 1705789678788,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lg3gw7e2qmx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703962871383,
  "history_end_time" : 1703962871383,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7rjhjxvyg94",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703960265426,
  "history_end_time" : 1703960265426,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n268p49gv30",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703959737818,
  "history_end_time" : 1703959737818,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tkg7xqnin26",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703958611565,
  "history_end_time" : 1703958611565,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gyy9nar0xwp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703955838203,
  "history_end_time" : 1703955838203,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qgt19ju8i4b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703954150328,
  "history_end_time" : 1703954150328,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g3wgs1woo98",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703915768050,
  "history_end_time" : 1703915768050,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "keqb5uajxzh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703915283464,
  "history_end_time" : 1703915283464,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rutm8z1cigx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703914476617,
  "history_end_time" : 1703914476617,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "httwd07g2ws",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703912302149,
  "history_end_time" : 1703912302149,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "df2cai2znhq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703908806856,
  "history_end_time" : 1705789681216,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bn9gh38e5q0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703906215356,
  "history_end_time" : 1703906215356,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cxdqg2detyu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703900919122,
  "history_end_time" : 1703900919122,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rnd5oy73s5f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703899837743,
  "history_end_time" : 1703899837743,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "t9dk5d8nju5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703897422928,
  "history_end_time" : 1703897422928,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jwoxyraoq7h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703896125560,
  "history_end_time" : 1703896125560,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gvcyxap34jv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703890275968,
  "history_end_time" : 1703890275968,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lms21h4pf9k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703886800787,
  "history_end_time" : 1703886800787,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hk3r0y2quw9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703885997743,
  "history_end_time" : 1703885997743,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hb37gsw9dt6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703880194692,
  "history_end_time" : 1703880194692,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jlzcenxwgsu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703872753011,
  "history_end_time" : 1703872753011,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rovwqyi4uf5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703869828218,
  "history_end_time" : 1703869828218,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "saiga6nvqyw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703868616906,
  "history_end_time" : 1703868616906,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f35wi1stm15",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703867114024,
  "history_end_time" : 1703867114024,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nlfhm3ueu4g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703864885421,
  "history_end_time" : 1703864885421,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "m0rjfah2eov",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703862637321,
  "history_end_time" : 1703862637321,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ca2dv6nti5z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703827227293,
  "history_end_time" : 1703827227293,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5h3cf9r4zv7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703822411207,
  "history_end_time" : 1703822411207,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jvikyy680m4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703786924615,
  "history_end_time" : 1703789718815,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "h2ojodlmiu6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703786053468,
  "history_end_time" : 1703786917607,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "wcz2s9yi8n2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703778395370,
  "history_end_time" : 1703778395370,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xvgw8zr8ps2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703739034248,
  "history_end_time" : 1703739034248,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s9dsz0voohd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703738754283,
  "history_end_time" : 1703792459270,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "do6676g074p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703736166885,
  "history_end_time" : 1703737316872,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "3w1tjgyra5y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703694763530,
  "history_end_time" : 1703694763530,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s213a78ka2z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703659541185,
  "history_end_time" : 1703659541185,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8rklq8estmg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703658144660,
  "history_end_time" : 1703658144660,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pbh6ebyxoen",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703650855754,
  "history_end_time" : 1703650855754,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b6vdcup5yl3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703646751510,
  "history_end_time" : 1703650812429,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2l8v2gjeppv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703642120880,
  "history_end_time" : 1703646749616,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "glvccnsoitf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988903,
  "history_end_time" : 1703642074624,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2c0dangl4pn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703629665488,
  "history_end_time" : 1703629665488,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s3t420dipy9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703626687961,
  "history_end_time" : 1703627783046,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ok1o4abe8i7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703625782072,
  "history_end_time" : 1703625782072,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6fzz2cfsqhw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703624783791,
  "history_end_time" : 1703624783791,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "d44w3vhnt0v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702875592797,
  "history_end_time" : 1702875592797,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3gtocmr6zfx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702871264359,
  "history_end_time" : 1702871264359,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vuwazt35yfp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702867996371,
  "history_end_time" : 1702867996371,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wbjsijgudqu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702866593368,
  "history_end_time" : 1702866593368,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rl1xm7xrlnf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702866137577,
  "history_end_time" : 1702866137577,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jjz9ao7k8gu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702657305586,
  "history_end_time" : 1702657305586,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vs7w2z77y1g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702633223027,
  "history_end_time" : 1702633223027,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u79pcjlcsf7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702633156885,
  "history_end_time" : 1702633163891,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zctf89s06hk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702274520865,
  "history_end_time" : 1702274520865,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ebrmjcvtspn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702257109181,
  "history_end_time" : 1702257109181,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "yrms5s6pmy7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702253506479,
  "history_end_time" : 1702253506479,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oo04g4ym73l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702047800875,
  "history_end_time" : 1702047800875,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "in71qxtp03w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1702046671805,
  "history_end_time" : 1702047789476,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "taohgpzsvr3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701838623974,
  "history_end_time" : 1701838623974,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lqezp8j6480",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701272631456,
  "history_end_time" : 1701272875100,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "nvjyozgmgjq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701272152686,
  "history_end_time" : 1701272363344,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "cvi8xqvqe2p",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701269761302,
  "history_end_time" : 1701269761302,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4ylpyeh48lw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701245471996,
  "history_end_time" : 1701245471996,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wlm4ce5hkrn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701234300601,
  "history_end_time" : 1701234300601,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "c26xxzp21kt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701232375255,
  "history_end_time" : 1701234158036,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bqgmsksrbwg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701231048651,
  "history_end_time" : 1701231048651,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qdy02azxwet",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701230933447,
  "history_end_time" : 1701230952338,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2929g8ooyjn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701230796316,
  "history_end_time" : 1701230932243,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "56a07p29wye",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701230384866,
  "history_end_time" : 1701230384866,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gxcuicoovu7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701229983492,
  "history_end_time" : 1701229983492,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fzdq2ttvm4x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228899355,
  "history_end_time" : 1701228899355,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4wukd23i7zm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228374785,
  "history_end_time" : 1701228374785,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kg1dzafdmeq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228236326,
  "history_end_time" : 1701228236326,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gs0o2vdrmlc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228118488,
  "history_end_time" : 1701228118488,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "jf1iqz4rfrk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701228056510,
  "history_end_time" : 1701228056510,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1qxbiioktly",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701227912486,
  "history_end_time" : 1701227912486,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "x1bej9w3yum",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1701013937389,
  "history_end_time" : 1701015920033,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lzcpl97800o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700974688675,
  "history_end_time" : 1700974688675,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "adxsbxh34mt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700885116781,
  "history_end_time" : 1700885116781,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "32xf1bccjb8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700471590164,
  "history_end_time" : 1700471590164,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "chhvptr64py",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700468936388,
  "history_end_time" : 1700468936388,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6lc8dn00ghm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700461922955,
  "history_end_time" : 1700462913663,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "waoiq24iakd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700448500123,
  "history_end_time" : 1700448500123,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pvc20q0gs8c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700447319830,
  "history_end_time" : 1700447319830,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cfkmvo8koku",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700230067228,
  "history_end_time" : 1700230067228,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qtl35jmpybb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700229012353,
  "history_end_time" : 1700229012353,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6wwm78ncpyx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700210213795,
  "history_end_time" : 1700210213795,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "58uf6cualce",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700209780148,
  "history_end_time" : 1700209780148,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "51pzfr4vclo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700209729233,
  "history_end_time" : 1700209729233,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "9gxb1w2p3tn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700203478632,
  "history_end_time" : 1700204245677,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "oe848apetet",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700201828248,
  "history_end_time" : 1700201828248,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "hu9hdn16a1g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700200332841,
  "history_end_time" : 1700200332841,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ijaj1aurmzl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700145667858,
  "history_end_time" : 1700145667858,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uj2hgwiyt3h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700143295292,
  "history_end_time" : 1700143295292,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u7m2i18qtz6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700141615799,
  "history_end_time" : 1700141615799,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "3hwdsfiqtif",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700134126824,
  "history_end_time" : 1700134126824,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xhk4vkmauze",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1700133783686,
  "history_end_time" : 1700133783686,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rgsfu4nut50",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699992839744,
  "history_end_time" : 1699992839744,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nhl9d03vie5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699982145381,
  "history_end_time" : 1699982145381,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "u9d5v69klqj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699941614788,
  "history_end_time" : 1699941614788,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8gap3880mbj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699939440524,
  "history_end_time" : 1699939440524,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7rbpwmdtklt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699937910452,
  "history_end_time" : 1699937910452,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5me1fut3a3g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699805634589,
  "history_end_time" : 1699806085188,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6nl15gadnjy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699684154027,
  "history_end_time" : 1705789690218,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "oz1c3y37f6z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1699681071315,
  "history_end_time" : 1699681071315,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8z9sb0v2zlp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698762678662,
  "history_end_time" : 1698762678662,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "s0vtwu9kvk5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698762637921,
  "history_end_time" : 1698762637921,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cvj23vogsqb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698276496945,
  "history_end_time" : 1698276496945,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f9tv874qjnk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698252277352,
  "history_end_time" : 1698252277352,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fgqg3iy17iq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698251392452,
  "history_end_time" : 1698251392452,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "b32ifuc7z9k",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698228210922,
  "history_end_time" : 1698228210922,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7448lujw0oe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698227897124,
  "history_end_time" : 1698227897124,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pyi4fugo6aw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698163737278,
  "history_end_time" : 1698163737278,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kxrw98olmpg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698163445812,
  "history_end_time" : 1698163445812,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e593x7ldcuu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698163121525,
  "history_end_time" : 1698163121525,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "orewr7yh86r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698160809326,
  "history_end_time" : 1698160809326,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "5xrvw67d2jo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698157805154,
  "history_end_time" : 1698157805154,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "dvx65tb9tx9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698152099719,
  "history_end_time" : 1698152099719,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kse9nilg1lj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698095495697,
  "history_end_time" : 1698095495697,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "woltpne8h52",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698075453527,
  "history_end_time" : 1698075453527,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6cwhydigyqd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697349529980,
  "history_end_time" : 1697349529980,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "p9vsx2vp1fe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697348852230,
  "history_end_time" : 1697348852230,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "wde8n1jg7tj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697189923524,
  "history_end_time" : 1697189923524,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "n7r53d76hqb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697188523268,
  "history_end_time" : 1697188523268,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f1g135mkbio",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697187892230,
  "history_end_time" : 1697187892230,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tnqxqxktq5t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1697187367934,
  "history_end_time" : 1697187367934,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ydl9gko3h4u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696863953141,
  "history_end_time" : 1696863953141,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a39jj3oymo4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696862402866,
  "history_end_time" : 1696862402866,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "66u4b4la5ty",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696832263616,
  "history_end_time" : 1696832263616,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "uw8tyjzys5b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696831867302,
  "history_end_time" : 1696831867302,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rqba3aoz2ed",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696830174198,
  "history_end_time" : 1696830174198,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bq4km1vh1wk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696787541855,
  "history_end_time" : 1696787541855,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "xmkqi5ssthj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696786838137,
  "history_end_time" : 1696786838137,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "fw06yuqvfk0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696771780797,
  "history_end_time" : 1696771780797,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1rubst7gwqb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696602943911,
  "history_end_time" : 1696602943911,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tdsrysk6wrv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696432484305,
  "history_end_time" : 1696432484305,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2oegq6o97zp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1696432299733,
  "history_end_time" : 1696432482227,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lka3i56tgit",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827991062,
  "history_end_time" : 1695827991062,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "2jby8q3m4oh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827889161,
  "history_end_time" : 1695827964210,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0qjfkmxon4y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695827855628,
  "history_end_time" : 1695827867001,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jbl7ckcu5xk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695696616099,
  "history_end_time" : 1695696616099,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "sr1qlj8zr1a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695694257312,
  "history_end_time" : 1695694257312,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a1btmtm9foz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695693585731,
  "history_end_time" : 1695693585731,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bjb4m0ilqz4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695693149339,
  "history_end_time" : 1695693149339,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z3546rioccc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695580915801,
  "history_end_time" : 1695580915801,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mxl08cjvhb9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695576291634,
  "history_end_time" : 1695576291634,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nqd8ya09nl6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695575930985,
  "history_end_time" : 1695575930985,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pftq158q73j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535769181,
  "history_end_time" : 1695535769181,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "60kyqoqwyf3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535478671,
  "history_end_time" : 1695535478671,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rsgpfl8bdsb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695535214009,
  "history_end_time" : 1695535214009,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "70nf1gqa0sn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695534943571,
  "history_end_time" : 1695534943571,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6p0tjl3e5ol",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695534671810,
  "history_end_time" : 1695534671810,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g3cjr3jmu57",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695533024052,
  "history_end_time" : 1695533024052,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rcuqaewloxm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695529187849,
  "history_end_time" : 1695529187849,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "418ozvqjcn1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695528505130,
  "history_end_time" : 1695528505130,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "gh3b7e11245",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695515862360,
  "history_end_time" : 1695515862360,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "vjmdjvg5zsc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695506423818,
  "history_end_time" : 1695506423818,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "1qdvabkqy0r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695418741257,
  "history_end_time" : 1695418741257,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8nmy7ezfcpb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417619660,
  "history_end_time" : 1695417619660,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "acuxg7pmrv6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417171263,
  "history_end_time" : 1695417171263,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f5d397he7p9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695417052719,
  "history_end_time" : 1695417052719,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "6orbvantieo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695416915968,
  "history_end_time" : 1695416915968,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "g1cffz5w0qc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695106488930,
  "history_end_time" : 1695106488930,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "f21pvissz3e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695106316136,
  "history_end_time" : 1695106316136,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y16rlxzif4s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695054045010,
  "history_end_time" : 1695054045010,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "8g7ihpex2iq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695054019742,
  "history_end_time" : 1695054032319,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ds3yy7txsal",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053979874,
  "history_end_time" : 1695054019269,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jwnnavjhfup",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053793321,
  "history_end_time" : 1695053793321,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z5wqbrum9vv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1695053733293,
  "history_end_time" : 1695053733293,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lcvqeczq2bg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694971144771,
  "history_end_time" : 1694972839682,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "szezbojvr35",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970707901,
  "history_end_time" : 1694970707901,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "k0s01w5nsfy",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970594739,
  "history_end_time" : 1694970594739,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "cqp5dr9pjt4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694970131465,
  "history_end_time" : 1694970131465,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "qkjp7cf0tgo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694969349973,
  "history_end_time" : 1694969349973,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "nfg058jc5ey",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694905307638,
  "history_end_time" : 1694905307638,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "e8r0hvuukdp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1694897887107,
  "history_end_time" : 1694897887107,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lvlnm97iuq6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531335735,
  "history_end_time" : 1691531335735,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "wtdumq05rjb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531292593,
  "history_end_time" : 1691531292593,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "gbqw1psj35r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531254443,
  "history_end_time" : 1691531284895,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "td7ysqlfy48",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531163333,
  "history_end_time" : 1691531163333,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "66fjdjy56xh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531120709,
  "history_end_time" : 1691531120709,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "04nn2njap4h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691531060739,
  "history_end_time" : 1691531060739,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "11y1sohsf4a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530848241,
  "history_end_time" : 1691530848241,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "lw5nt4z85yp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530717559,
  "history_end_time" : 1691530721100,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "w5h6o6im4ky",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530689992,
  "history_end_time" : 1691530716743,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "tufqc24dut8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530620908,
  "history_end_time" : 1691530622432,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "czu7a6uluae",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530616328,
  "history_end_time" : 1691530616328,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "030ko41lb1f",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1691530599565,
  "history_end_time" : 1691530614278,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Stopped"
},{
  "history_id" : "nnz07uwbgot",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689632033790,
  "history_end_time" : 1689632033790,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o4583uo120x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689631636416,
  "history_end_time" : 1689631636416,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "tq3z35",
  "indicator" : "Skipped"
},{
  "history_id" : "doqgln15fh0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1689135057829,
  "history_end_time" : 1689135057829,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lmeqekz14un",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688416860229,
  "history_end_time" : 1688416907375,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "jyfn0hrvfmq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688416833708,
  "history_end_time" : 1688416848466,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "haht6uib1yg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688416668367,
  "history_end_time" : 1688416822954,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "cbjbv28kgi6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688416628765,
  "history_end_time" : 1688416660672,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "l3asr8ttz31",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1688416567294,
  "history_end_time" : 1688416575011,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "681i5bp8tux",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687546866688,
  "history_end_time" : 1687546866688,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4i7hu2veqb8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687463684990,
  "history_end_time" : 1687463684990,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "lv08zf1fk62",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1687463635369,
  "history_end_time" : 1687463635369,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7h1kav3ic3i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686236147000,
  "history_end_time" : 1686237909493,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "251w3suib4g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686235960961,
  "history_end_time" : 1686235985411,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "ibd7mc7hdd5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686235529589,
  "history_end_time" : 1686235529589,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Skipped"
},{
  "history_id" : "68l2dvknoj8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686235448209,
  "history_end_time" : 1686235482626,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "jf3opyzb75l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686235402179,
  "history_end_time" : 1686235424778,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "r0vcqhotf4s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1686153654129,
  "history_end_time" : 1686153654129,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Skipped"
},{
  "history_id" : "2lv9chjv1g4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1682984798052,
  "history_end_time" : 1682984800290,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Stopped"
},{
  "history_id" : "ne52t70e458",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681516927620,
  "history_end_time" : 1681516927620,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "awxowv8hwxw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681039707702,
  "history_end_time" : 1681039707702,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ucu5f3wd8zg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681039689396,
  "history_end_time" : 1681039697764,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "56srn45ucf9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1681007820084,
  "history_end_time" : 1681007820084,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "l24efbhc35u",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"data_gee_sentinel1_real_time.py\", line 19\n    github_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n                                                      ^\nSyntaxError: invalid syntax\n",
  "history_begin_time" : 1679442751645,
  "history_end_time" : 1679442752712,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Done"
},{
  "history_id" : "s3a8wg18ggp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679332584759,
  "history_end_time" : 1679332584759,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "jf7wuu",
  "indicator" : "Skipped"
},{
  "history_id" : "pxvhq0acrag",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679191258482,
  "history_end_time" : 1679191258482,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "2jifky",
  "indicator" : "Skipped"
},{
  "history_id" : "rweprymdn9i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679091534945,
  "history_end_time" : 1679091744961,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "erm0jqiq2o8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1679091526090,
  "history_end_time" : 1679091533651,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "tmgmjcgpc9t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678887964060,
  "history_end_time" : 1678888215693,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "matwzfscd0t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678887944917,
  "history_end_time" : 1678887946443,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "1ox6wfgvxbj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678887287215,
  "history_end_time" : 1678887836229,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "pdsbz1j9fhe",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\nfrom snowcast_utils import test_start_date as start_date, test_end_date as end_date\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\n#start_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\n#end_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-15\n/home/chetana\n/home/chetana\nsubmission_format_df shape:  (20759, 25)\nResults will be saved to /home/chetana/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-03-01_2023-03-15.csv\n",
  "history_begin_time" : 1678884595578,
  "history_end_time" : 1678884986355,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "xzrt16h3z5e",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\nfrom snowcast_utils import test_start_date as start_date, test_end_date as end_date\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\n#start_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\n#end_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "",
  "history_begin_time" : 1678884244705,
  "history_end_time" : 1678884438327,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "xqs59o6xvvp",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-15\n/home/chetana\n",
  "history_begin_time" : 1678883384340,
  "history_end_time" : 1678883775437,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "c92bkhejy3n",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-14\n/home/chetana\n",
  "history_begin_time" : 1678756820082,
  "history_end_time" : 1678756827922,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "7zp65zotvyh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678756683156,
  "history_end_time" : 1678756684752,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ybm8tdqsyrl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678749631653,
  "history_end_time" : 1678749936000,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "h2db7qo0c5a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678748546698,
  "history_end_time" : 1678748546698,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mwbb821bv1a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678747245230,
  "history_end_time" : 1678747245230,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "bv8psaim0to",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678746481014,
  "history_end_time" : 1678746793024,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "h8immfft8i2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678743868472,
  "history_end_time" : 1678744167080,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "8e0o4t3zw97",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678743629000,
  "history_end_time" : 1678743629000,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "elv8qlblv9e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678743144787,
  "history_end_time" : 1678743615532,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "43y672g23dt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678742583253,
  "history_end_time" : 1678742583253,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "g44zneiam3t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678742209425,
  "history_end_time" : 1678742571506,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "6k4yp9kpejj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678738707226,
  "history_end_time" : 1678738707226,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "sm74pglfhmc",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678725423338,
  "history_end_time" : 1678725423338,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "c1ljl2o10il",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678723111640,
  "history_end_time" : 1678725408344,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "vzvqqkfk8nj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678649002012,
  "history_end_time" : 1678649002012,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "clhqni6hd21",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678648366819,
  "history_end_time" : 1678648366819,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "5nz129n56xm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678648337220,
  "history_end_time" : 1678648341620,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "dyn9w3648fp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678564567684,
  "history_end_time" : 1678564567684,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "a8mcjuunlp7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678564538514,
  "history_end_time" : 1678564538514,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "v4agbxg9q0b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678557921913,
  "history_end_time" : 1678557923642,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "7sa0fs9ylqt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678557705728,
  "history_end_time" : 1678557898788,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "exh233wn3fa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678497028105,
  "history_end_time" : 1678497028105,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "tkmk0609xot",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678330214166,
  "history_end_time" : 1678330214166,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "k5aevnygnsq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678326965040,
  "history_end_time" : 1694185584708,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "feyklo52iqo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678312067606,
  "history_end_time" : 1678312067606,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "5g6cjtejlvt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678312030748,
  "history_end_time" : 1678312065070,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "nmwg6o0kho9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1678312001418,
  "history_end_time" : 1694185586176,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "jg8m4s9yhot",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-08\n/home/chetana\n",
  "history_begin_time" : 1678283580234,
  "history_end_time" : 1678283603101,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "2xe4g7otlk0",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-08\n/home/chetana\n/home/chetana\nsubmission_format_df shape:  (20759, 25)\nResults will be saved to /home/chetana/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2021-12-30_2023-03-08.csv\n",
  "history_begin_time" : 1678242507439,
  "history_end_time" : 1694185588001,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "bqd8t6v1t4g",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-08\n/home/chetana\n/home/chetana\nsubmission_format_df shape:  (20759, 25)\nResults will be saved to /home/chetana/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2021-12-30_2023-03-08.csv\n",
  "history_begin_time" : 1678241893543,
  "history_end_time" : 1694185588468,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "9v3xo46l817",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-07\n/home/chetana\n",
  "history_begin_time" : 1678206378401,
  "history_end_time" : 1678206406928,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "m67n87myfxq",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-07\n/home/chetana\n",
  "history_begin_time" : 1678201958959,
  "history_end_time" : 1678201965630,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "qutes1ysct4",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-07\n/home/chetana\n/home/chetana\nsubmission_format_df shape:  (20759, 25)\nResults will be saved to /home/chetana/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2021-12-30_2023-03-07.csv\n",
  "history_begin_time" : 1678201390796,
  "history_end_time" : 1678201865878,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "eqsa4v4tbfz",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-07\n/home/chetana\n",
  "history_begin_time" : 1678155221687,
  "history_end_time" : 1678155225995,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Done"
},{
  "history_id" : "zwig2ev8sxy",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-07\n/home/chetana\n/home/chetana\nsubmission_format_df shape:  (20759, 25)\nResults will be saved to /home/chetana/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2021-12-30_2023-03-07.csv\n",
  "history_begin_time" : 1678147979586,
  "history_end_time" : 1678187072585,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "eccyPw2pr4pK",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-04\n/home/chetana\n/home/chetana\nsubmission_format_df shape:  (20759, 25)\nResults will be saved to /home/chetana/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2021-12-30_2023-03-04.csv\n",
  "history_begin_time" : 1677955707503,
  "history_end_time" : 1677956512808,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "Pf6SqFLEYL85",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = (ee.ImageCollection(product_name)\n               .filterDate(start_date, end_date)\n               .filterBounds(poi)\n             .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))\n               .select('VV'))\n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2023-03-04\n/home/chetana\n/home/chetana\nsubmission_format_df shape:  (20759, 25)\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/Pf6SqFLEYL85/data_gee_sentinel1_real_time.py\", line 30, in <module>\n    start_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\n  File \"/home/chetana/gw-workspace/Pf6SqFLEYL85/snowcast_utils.py\", line 69, in findLastStopDate\n    for filename in os.listdir(target_testing_dir):\nFileNotFoundError: [Errno 2] No such file or directory: '/home/chetana/Documents/GitHub/SnowCast/data/sat_testing/sentinel1'\n",
  "history_begin_time" : 1677955182200,
  "history_end_time" : 1677955209098,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "yHlQzmTAUTzJ",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/yHlQzmTAUTzJ/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677954960060,
  "history_end_time" : 1677954961472,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "vi9z7ntunmq",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/vi9z7ntunmq/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677858836327,
  "history_end_time" : 1694185596803,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "lTQAFa0yvfxP",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/lTQAFa0yvfxP/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677809837602,
  "history_end_time" : 1677809838901,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "eCipqBD6GDxH",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/eCipqBD6GDxH/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677809827357,
  "history_end_time" : 1677809828622,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "EB8QMdtAi9Ua",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/EB8QMdtAi9Ua/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677809769303,
  "history_end_time" : 1677809770692,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "kpZKdmp4rFiS",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/kpZKdmp4rFiS/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677809758194,
  "history_end_time" : 1677809759459,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "kjd5n26ykb8",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/kjd5n26ykb8/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677809729847,
  "history_end_time" : 1694185596345,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "0vncd1kr77z",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/0vncd1kr77z/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677797669293,
  "history_end_time" : 1694185619239,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "zs62hginrg7",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/zs62hginrg7/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677793203796,
  "history_end_time" : 1694185612773,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "695fkbt05f2",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/695fkbt05f2/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677791609081,
  "history_end_time" : 1694185610870,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "6v39o4j4hlu",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/6v39o4j4hlu/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677787471346,
  "history_end_time" : 1677787474135,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Failed"
},{
  "history_id" : "t4nf7ihgxm7",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\nimport eeauth as e\n\ntry:\n    ee.Initialize(e.creds())\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "  File \"/home/chetana/gw-workspace/t4nf7ihgxm7/data_gee_sentinel1_real_time.py\", line 63\n    .filterDate(start_date, end_date) \nIndentationError: unexpected indent\n",
  "history_begin_time" : 1677786008149,
  "history_end_time" : 1677786042634,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "zk61dn5dx4j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677784204243,
  "history_end_time" : 1677784272021,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "qauxsidsvpz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677782901808,
  "history_end_time" : 1677782901808,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "yj115subthg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677781745171,
  "history_end_time" : 1677781745171,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "tcg3b90zw7s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677719046584,
  "history_end_time" : 1677719046584,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "qm25okzp89z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677718179105,
  "history_end_time" : 1677718179105,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "1btypd4xuw5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677679556264,
  "history_end_time" : 1677679556264,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "fadpecn14a9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677679507370,
  "history_end_time" : 1677679549075,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "9tmf5lu5myz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636286841,
  "history_end_time" : 1677636286841,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "2i7j17xciyl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636150369,
  "history_end_time" : 1677636150369,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "r2cgny5cguv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636137226,
  "history_end_time" : 1677636142812,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "nq2vro8acfd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677636063759,
  "history_end_time" : 1677636063759,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "kp73krake1g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677635881825,
  "history_end_time" : 1677635881825,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "laebopm0afl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677617762784,
  "history_end_time" : 1677617762784,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ayihsmfzv4o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677606170884,
  "history_end_time" : 1677606170884,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "2fc5kk753uw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677606114179,
  "history_end_time" : 1677606114179,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "teaxs187gtz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677582848560,
  "history_end_time" : 1677582848560,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "z94v63h97pn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677525426271,
  "history_end_time" : 1677525426271,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "st0n5fgrufa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677462325764,
  "history_end_time" : 1694185608913,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "z3hw11quev6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677462312122,
  "history_end_time" : 1694185608656,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "6n539em0z7e",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677462311456,
  "history_end_time" : 1694185608618,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "0fyycm9y63z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677428742730,
  "history_end_time" : 1677428742730,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "5piup6a4k5c",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677428687335,
  "history_end_time" : 1677428687335,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "zagcm06j64x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677426262839,
  "history_end_time" : 1677426262839,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "cubq7gr5ps8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677379889795,
  "history_end_time" : 1705789703787,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "hvufizf08h3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677379837793,
  "history_end_time" : 1705789703164,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "4n093qb0zee",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677352477976,
  "history_end_time" : 1677352477976,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "rx4rgpryxw4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677352389910,
  "history_end_time" : 1677352389910,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "zl76eri3p09",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677352335851,
  "history_end_time" : 1677352335851,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "4pq4q3owctl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677344119939,
  "history_end_time" : 1705789707058,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "7prkcg8aedw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677282602777,
  "history_end_time" : 1677282602777,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "7tr2t2k16wu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273712224,
  "history_end_time" : 1677273712224,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "mkrsdl2liap",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273698740,
  "history_end_time" : 1677273703950,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "19p9fa2b4ig",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273673906,
  "history_end_time" : 1677273679533,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "uujyh2rpq0j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273657790,
  "history_end_time" : 1677273665451,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "yrvufgiz0sf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273535997,
  "history_end_time" : 1677273535997,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "cfdhmq3pmsj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273519099,
  "history_end_time" : 1677273525487,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "pudu0ddweo3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273371296,
  "history_end_time" : 1677273371296,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "n8i50myz9xe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273340430,
  "history_end_time" : 1677273345441,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "nvl8rztivlb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273323486,
  "history_end_time" : 1677273332232,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "r6nn5u4fhm4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273146650,
  "history_end_time" : 1677273146650,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "h38rconoykv",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677273100224,
  "history_end_time" : 1677273134488,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "1ovgit55569",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677201275652,
  "history_end_time" : 1677201275652,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "3ni1y6jw9r7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677192311047,
  "history_end_time" : 1677192311047,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "xj2w862d7ze",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677192268364,
  "history_end_time" : 1677192268364,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ixm6iaxha9g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677191916727,
  "history_end_time" : 1677191916727,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "7xfwvulnx19",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677184296680,
  "history_end_time" : 1677184296680,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "96o9nnhaevr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677184173535,
  "history_end_time" : 1677184173535,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "j5bw2uzjdkd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677113476452,
  "history_end_time" : 1677113476452,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "kzgtcpwo2h6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677108238602,
  "history_end_time" : 1677108238602,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "xt00pnxnoxf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677108212505,
  "history_end_time" : 1677108229726,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "fh0qnfromji",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107869800,
  "history_end_time" : 1677107869800,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "kctm5p4yplp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107757950,
  "history_end_time" : 1677107757950,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "zkfw8vrei1w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107718295,
  "history_end_time" : 1677107718295,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ndp3qxl220o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107637153,
  "history_end_time" : 1677107705674,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "p8dompjfa3b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107604018,
  "history_end_time" : 1677107608762,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ldbwcfjr1eu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107556516,
  "history_end_time" : 1677107562719,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "f90g8rajsb7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107524985,
  "history_end_time" : 1677107538161,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "sfvp8mnv6g9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107501083,
  "history_end_time" : 1677107501083,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "8eqs6btuxfi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677107474149,
  "history_end_time" : 1677107474149,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "twbt4bj71ed",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106516093,
  "history_end_time" : 1677106516093,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "si2mntx6724",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106477045,
  "history_end_time" : 1677106477045,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "prikpxbya48",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106431036,
  "history_end_time" : 1677106431036,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ciiq6b0xzc9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106134884,
  "history_end_time" : 1677106147559,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "575lh2z3t99",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677106010988,
  "history_end_time" : 1677106010988,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "guyps1jgkff",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030843554,
  "history_end_time" : 1677030843554,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "m6ltrmeju7l",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030771141,
  "history_end_time" : 1677030771141,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "tkzinc9ho6u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030672636,
  "history_end_time" : 1677030672636,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "jy5qg3ti1r1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677030562986,
  "history_end_time" : 1677030562986,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "gq507yhts2x",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677025528651,
  "history_end_time" : 1677025528651,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "sy5n77l2b52",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677025467140,
  "history_end_time" : 1705789711436,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "7z2n6epupx2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677017826410,
  "history_end_time" : 1677017826410,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "rvzj2q27th1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677017218417,
  "history_end_time" : 1677017218417,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "3a2awx06n25",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677016681303,
  "history_end_time" : 1677016681303,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "c7kjczb5qpr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677016142992,
  "history_end_time" : 1677016142992,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "9c9ct04iyyz",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677016063953,
  "history_end_time" : 1677016063953,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "e3wo7w5nc0r",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677015787635,
  "history_end_time" : 1677015787635,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "276qgr4rbg7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677015739938,
  "history_end_time" : 1677015739938,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "xzoxup09jm0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677014884944,
  "history_end_time" : 1705789712272,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "sj79pdemsna",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677014795601,
  "history_end_time" : 1705789714745,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "nfdgjk2j575",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677014228027,
  "history_end_time" : 1705789715528,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "0s3dy4eetzi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677013908421,
  "history_end_time" : 1705789716206,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "dz4uzh23k87",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677013833016,
  "history_end_time" : 1677013833016,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "ves04z5bdu7",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677011873059,
  "history_end_time" : 1705789717074,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "olqabnfrjtd",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677008198557,
  "history_end_time" : 1677008198557,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "znyvlonqyu5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677008163613,
  "history_end_time" : 1677008163613,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Skipped"
},{
  "history_id" : "rr57q7getjh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677001999578,
  "history_end_time" : 1705789717921,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "5k7xtsrdd9b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677001732237,
  "history_end_time" : 1677001732237,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "59ve861m62z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677001593815,
  "history_end_time" : 1677001593815,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bywe39m9zoi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1677000536790,
  "history_end_time" : 1677000536790,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0imz99db567",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676999722108,
  "history_end_time" : 1676999722108,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "yb51al",
  "indicator" : "Skipped"
},{
  "history_id" : "v9ot7rj7tif",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676999599096,
  "history_end_time" : 1676999599096,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "rl6t8c73cy5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676862212335,
  "history_end_time" : 1676862212335,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "mn97a0a1ikp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676329536245,
  "history_end_time" : 1676329536245,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "bpw9oftjym4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676329491753,
  "history_end_time" : 1676329491753,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "kxfjbp2xnd6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1676063613397,
  "history_end_time" : 1676063613397,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "7f0nuqu19m1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1675783782320,
  "history_end_time" : 1675783782320,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "96hxbw4a6nr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1672014982952,
  "history_end_time" : 1672014982952,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "4o0yyca98lo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1671944382446,
  "history_end_time" : 1671944382446,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "pyfoigqwu5q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670910617254,
  "history_end_time" : 1670910617254,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "y7p43yzi0ps",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670910501142,
  "history_end_time" : 1670910501142,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "a580g5egzi5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670910268457,
  "history_end_time" : 1670910268457,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "oa0nuhayhpt",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1670019638892,
  "history_end_time" : 1670019638892,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "tu8ts6zbe5u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667484654104,
  "history_end_time" : 1667484654104,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "eyd50hjt3hn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667410736805,
  "history_end_time" : 1667410736805,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "stzv3a2ojnb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667410652229,
  "history_end_time" : 1667410704836,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "n15sx0g84lg",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1667410544329,
  "history_end_time" : 1667410624015,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "H1STpAWcHilh",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1656389242953,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "hR2GIqqCJTiG",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1655935284056,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "NBmUJWrC1EpC",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1654522099498,
  "history_end_time" : null,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Running"
},{
  "history_id" : "2lqa9l7xv9h",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "*** Earth Engine *** FINAL DEADLINE: ee.Authenticate will fail after 2022-06-06. Please upgrade. https://developers.google.com/earth-engine/guides/python_install\n",
  "history_begin_time" : 1654519481472,
  "history_end_time" : 1654519824810,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "rW8IS86Yp4Xu",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1653917354524,
  "history_end_time" : 1654519628680,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "tO1zDEDV0paq",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1653400105196,
  "history_end_time" : 1653413387118,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "10TmDL0Lsn48",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1652476772305,
  "history_end_time" : 1653413363316,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "UBwy3Zsxga7L",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1652076446144,
  "history_end_time" : 1653413362329,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "4ouM4oDYZV2m",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1651626799431,
  "history_end_time" : 1652076605395,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "91qrSDWu4KpP",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "",
  "history_begin_time" : 1651626772315,
  "history_end_time" : 1651626775246,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "nGd3RvW1PX06",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d %H:%M:%S\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1651626583368,
  "history_end_time" : 1651626775244,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "bZwpS0QXp8YE",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\n#start_date = \"2022-04-20\"#test_start_date\nstart_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d\")\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "*** Earth Engine *** Authenticate calls from this Earth Engine Python client will fail after 2022-05-09: please upgrade. https://developers.google.com/earth-engine/guides/python_install\ntoday date = 2022-05-03\n/Users/joe\n/Users/joe\nsubmission_format_df shape:  (20759, 25)\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/bZwpS0QXp8YE/data_gee_sentinel1_real_time.py\", line 29, in <module>\n    start_date = findLastStopDate(f\"{github_dir}/data/sat_testing/sentinel1\",\"%Y-%m-%d\")\n  File \"/Users/joe/gw-workspace/bZwpS0QXp8YE/snowcast_utils.py\", line 75, in findLastStopDate\n    latest_date = get_latest_date_from_an_array(date_list, data_format)\n  File \"/Users/joe/gw-workspace/bZwpS0QXp8YE/snowcast_utils.py\", line 64, in get_latest_date_from_an_array\n    return max(arr, key=lambda x: datetime.datetime.strptime(x, date_format))\n  File \"/Users/joe/gw-workspace/bZwpS0QXp8YE/snowcast_utils.py\", line 64, in <lambda>\n    return max(arr, key=lambda x: datetime.datetime.strptime(x, date_format))\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/_strptime.py\", line 568, in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/_strptime.py\", line 352, in _strptime\n    raise ValueError(\"unconverted data remains: %s\" %\nValueError: unconverted data remains:  13:25:08\n",
  "history_begin_time" : 1651626360126,
  "history_end_time" : 1651626363848,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "3YF4XtixdRVV",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = \"2022-04-20\"#test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1651154947778,
  "history_end_time" : 1651626499014,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "fsUOrkoQ9gtO",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = \"2022-04-18\"#test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1650627231360,
  "history_end_time" : 1650715565646,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "s6aY1fvq5IyF",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = \"2022-04-09\"#test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1650250505672,
  "history_end_time" : 1650288845842,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "kAkHandH87Ze",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(10)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      #print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1649394229473,
  "history_end_time" : 1649453900358,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "1MU9TzimvJ5e",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      #poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2022-04-05\n\nStream closed",
  "history_begin_time" : 1649212593438,
  "history_end_time" : 1649212605542,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "VwA6ZuFg7idn",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      #poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)\n\n",
  "history_output" : "today date = 2022-04-05\n/Users/joe\n/Users/joe\n(20759, 25)\n'0001daba-dd41-4787-84ab-f7956f7829a8'\n'0006d245-64c1-475f-a989-85f4787bae6a'\n'000a9004-1462-4b8c-96ee-0601aff0fdf7'\n'00118c37-43a4-4888-a95a-99a85218fda6'\n'0013524a-f2f6-4d5c-a458-9f08a42c1228'\n'0013ea8d-f647-4664-b40f-57bb96f800e5'\n'001476f9-a9d5-4128-8210-e2c4879ce505'\n'002220cf-0b83-4f58-bacb-c4318686194b'\n'00270da4-a790-4b81-a693-e1e8c4f13e6e'\n'002a9f10-203c-4feb-9ea4-19bcbe9a7686'\n'00325ba7-fcbe-4bab-8c4f-f70cfe80ea46'\n'0038be33-f5ba-4274-93b9-c7b6ea003519'\n'003ca3a3-c298-4253-9f1b-7f6a1a097ca6'\n'003d4c74-b631-467c-b1fa-56c4708276bc'\n'00481126-761a-4d70-8775-c449bf498ecd'\n'0049403d-da12-4b13-b02a-0a2dd4e01d6a'\n'004cf556-f3dd-4c4a-9da0-cb2eb848ff0e'\n'004e5e03-f6b6-470b-96e2-911992c8ffb4'\n'00505b61-f978-44ee-92e8-c082c4482ac0'\n'0050f3a5-e24d-45d7-9ce1-f046a54adb96'\n'0051069d-cdc3-467b-9034-31f5e0eeb005'\n'0051c2e3-a110-4460-9296-9d9c9df82473'\n'0057c657-ac2f-4141-881c-3593859ef092'\n'0057dca9-9c70-4708-9697-909e5711a7f0'\n'005b6d88-4f1e-4ebd-8425-25e7236b5838'\n'005f3676-e3dd-416a-af7b-696067815dfa'\n'00651c0c-8687-4431-935b-8f2bfed1f429'\n'00656c12-2000-4cb7-97b0-6d51bafb5db2'\n'0065b17a-f2be-478b-b323-f3bb3bed4341'\n'006eac45-1c31-45fb-99de-30a52623082c'\n'007153b7-e0b9-41dd-a0a8-30901524ad20'\n'0072f5ac-ec83-4183-8757-47a7e26a8d86'\n'00743e1b-a98d-4026-9bdf-50cc52cd168e'\n'0075950a-3452-49a7-a1d7-7fb71b984696'\n'00778d9b-f669-4f39-b4d4-493ab085a536'\n'007ecee3-1492-4cb9-9a53-82d951ea2f01'\n'007edd43-d3d9-4f63-afee-8e5a95903ed6'\n'00802ec7-1ff4-4432-8cad-8a2db176f2bd'\n'00822a9c-dfd5-4ecf-b1fd-a445c450e7e7'\n'008971aa-a279-40eb-998d-a2ca2a26e7a4'\n'008e79fa-7265-404f-ab62-48f59d0e0f4c'\n'00909645-804d-4b63-a66f-283832684bf9'\n'009983f0-6187-4b99-9240-2299566529e2'\n'00a9de30-4258-4863-a7f9-e9788bc29b8f'\n'00ba0112-a5da-4264-9b86-82bf21bba65a'\n'00c20f4b-3dba-47cd-8210-73bfc64a5591'\n'00c6952d-223f-4661-a325-a98912335d81'\n'00cbc9d7-ce7c-46e8-87fd-774fcd1ad03e'\n'00d0afb7-e919-4b16-86d4-4ca059c7af09'\n'00d3626b-3696-49ae-97d2-165f56187953'\n'00db953c-7f4a-4de3-8772-42d7048c1ab6'\n'00df85af-2836-4229-a654-876cf2a1767e'\n'00e18892-bbf4-4dfb-b231-9d76b7299bee'\n'00e1b8d6-84f5-4b79-a5a7-ce7f8fe13773'\n'00e9c22e-949c-43c2-aed2-2e5a27dfc4bb'\n'00ec51da-dae3-4624-960b-e0cc9a911718'\n'00ee875c-37ea-47e9-9736-be92dd7353ca'\n'00f12281-0861-42c1-8053-702c7b6966e1'\n'00f1ff7a-6c24-44ae-9d47-d78533773a93'\n'00f4f052-a244-429e-b091-08f88d1f4d09'\n'00f7e783-ebd4-46d2-8bd1-c4ab87199426'\n'00f9a90c-60a6-4183-814f-e50722fd2c2d'\n'00fde10f-74b9-4eaa-a6e4-7abe055d16c4'\n'00fff8e8-082a-4c71-a29d-ec0db786cd6b'\n'01011989-1913-405b-a52f-80220df7876d'\n'0103912a-8a01-45e9-83ec-146cd09f3164'\n'010f8360-a018-4620-9de2-33a7893129af'\n'0113dc17-2d90-4541-89cd-f209b30405f2'\n'0114836e-3741-4224-abb1-703e87f330a7'\n'01156105-b7fa-44b9-86c9-27909a81d63a'\n'011df06d-650c-40e7-bd56-d2f305c1bff9'\n'011e46e4-00bc-4fb3-be3b-d31e22e880f2'\n'0125850a-5d2f-46d2-9873-0066edcfe334'\n'012ea03b-8472-4adc-abf5-6352a2e9c04d'\n'012fbbca-6dc5-4c37-b266-ac2782ca4975'\n'01337282-fb38-45ea-a4ba-d046fa7f79f3'\n'0136d669-a167-44d6-8c65-dbcbc4f71e5b'\n'0138b557-850c-43a9-a5d6-7c7e96d096e1'\n'0139bb4f-9f2b-420c-b5ea-34db9a5d0d65'\n'0139def7-9348-42b8-8767-0edcb1d81a1e'\n'01486dea-9406-4fb9-a080-2ce6c8889d61'\n'014ce464-ac95-43ad-a614-5f017f8656ed'\n'015e2c22-7766-4d19-bde1-33f6a22824ba'\n'01609391-dfb8-42e7-9806-6b2fb7a23e07'\n'016144d3-14da-4f27-a62a-03f7c2b0a9df'\n'0161a423-ba7f-405d-b129-273fadc00911'\n'01620fe7-3c4a-4b71-b45d-a3805eeaf509'\n'01652e7e-9400-4e7c-84bf-86e67f33246f'\n'016837dd-3b5f-4fed-a555-a05da5efbe1f'\n'016d3736-a9d0-474c-b62a-3e90ec42eefb'\n'016fc79d-5ee9-46b7-a84a-6e869cf4960b'\n'01705743-de45-4cef-893f-3856b5cbb662'\n'0174c824-3ade-474a-ae73-04963649b692'\n'01762b10-7e89-4cf6-a227-143eab3943d8'\n'017a7810-a518-41bd-b012-7464fad522b5'\n'017dca0b-be33-4eba-90de-f0c2fce9f098'\n'0182c197-ee0f-45e8-a001-4d7d7c9795a3'\n'018481a6-b64b-49e5-9824-599dcabf2135'\n'0186f113-1650-4e47-8de0-70cee5863d66'\n'018acc46-9b3a-4f14-b4c0-5929776ace07'\n'018c8a27-2b08-4705-a8aa-b0c13ceb89ad'\n'018d455b-a485-499f-858d-b2f09c0dc75f'\n'018e1f62-069b-48e1-b440-f6eacaa54520'\n'0190e8ab-7af3-4baa-a959-9099350c0ae8'\n'0193ab07-d62b-4660-9f26-5e890dbe7c46'\n'019470f5-b5ac-4f0f-9a88-dc0e2b0af7a3'\n'0194c7f2-1f87-449c-9c77-2f1ce6009e18'\n'0195f974-1f43-41a6-9acc-42896477ab61'\n'01999dd2-f622-4a97-b09b-83f5ed7523da'\n'019d002f-2ba5-47c7-9d1e-0421d065e23f'\n'019d3222-db52-4cd7-bee6-d335eabab91a'\n'01a73b68-64ab-486e-a9a5-a9c9a6f3f6fb'\n'01ad3790-e684-4829-950f-01368856c94e'\n'01b1a490-2442-48ac-ab23-4563464468af'\n'01b35227-af96-4f9b-894b-391bd1ad1e4b'\n'01b7bb5e-0c0f-4263-943c-ff9a249847ee'\n'01b81868-133a-4b56-b386-ec0e4fcc57d0'\n'01bc3228-7fa3-460e-947c-3a365c7d533c'\n'01c10e0e-9255-42a5-a649-9c62f74ecf86'\n'01c8c6e4-9db3-4085-a4f6-f191bb014e70'\n'01c95d67-a86e-4784-8473-45162188f46c'\n'01cf8536-1488-4ee9-82e5-19ac82183b06'\n'01d34fad-ffb3-467b-b159-41c82158f2e2'\n'01d5fddc-8e3b-4482-a515-e69292066dc3'\n'01d60152-b41c-4b57-8ae3-bf7bf6dcfdd8'\n'01d9f4f1-12f2-409b-af76-8cee0ee95701'\n'01db68d7-532e-46c9-94c3-2d4dd4cf4753'\n'01e85eed-aa39-4a61-b720-a59b84991428'\n'01e9eea8-0e61-4aeb-ad57-e89135510ead'\n'01ecb4e4-bce9-4309-ac1f-4787c0be22c7'\n'01f0f6e2-574e-424f-98a1-6b823752932a'\n'01f39cb1-66c7-41c9-96c4-0fa4baa98851'\n'01f53e53-8ffc-4b74-a6d4-808e242b44b7'\n'01faba06-9dba-49f7-92cb-ceaa16bdab2c'\n'01ff2bb4-67b6-43ae-8506-53282bf27a6a'\n'01ffe76a-9d66-4733-b17f-bf922a54fb21'\n'0202aaca-5ec1-4917-a75a-bff3520b72da'\n'02062667-85cc-44c3-a52d-4f884bd1c95c'\n'0209240a-0dba-494d-a0b5-bff00c00d0ef'\n'0219357c-527c-4a54-a00c-9573d9ddaf47'\n'021a84a4-6a5e-40d1-b5d2-ede15ab4d051'\n'021e5ca1-3702-4379-81b0-60ded7294421'\n'021e7a6a-fde4-44cf-bbda-8b096a2970c7'\n'0227083a-cdf0-4dcd-9939-72994feb6be8'\n'022780fb-57e6-4ffe-9212-0c7daeb13bed'\n'022a03f3-2616-4ce3-865b-da113b76d188'\n'022b63c5-5bb9-4fda-8489-9a41470cb07d'\n'022e5945-f13d-4270-b147-a4d33a3d4a5f'\n'02387350-2d78-427f-9f78-b117fde1d9e7'\n'023b2795-12c2-4f1f-bb52-3e3ecd26f1a7'\n'023c3c0e-9709-42bf-a778-12c929f206cc'\n'023e4079-f8e3-4b27-abd2-93047825fd7d'\n'0243f7ae-79d1-42e1-b60c-464d6cbddfb6'\n'0245cef8-4d64-43ab-b37f-42f6c04c9cd0'\n'0246e8d3-9ff4-48d6-bf5d-f602b5d38319'\n'02486797-e82a-4007-ac80-410c03a31c6e'\n'024d24a6-fa03-4953-b50d-b0ef42d222c2'\n'024d4a58-ef11-4f2b-925d-657809d60ff6'\n'02513e74-2209-4083-a8b5-a16e54fea22c'\n'02546ef5-0e70-4c45-9582-8463dafcec86'\n'025533c9-5fdc-4fd0-a6a6-9935ad824c32'\n'0255cea4-8bc0-42fc-a0ce-a102af1eaac3'\n'0263eff8-963d-4586-a3c0-8b316c5d21d9'\n'0266bae9-30f1-43eb-8c9e-25b6d250aa1a'\n'0268c537-5cf9-4c2b-a1fe-ff64944b1796'\n'02690e0c-f79c-4746-82e5-5247c89c1f06'\n'026b1ec0-027a-47a9-b37e-cd982b695240'\n'0274c1a7-8069-41bd-88f8-5e8d9e12be31'\n'0275628e-1bb7-4f54-a1ea-160cb2b38feb'\n'0282bd7b-67be-4661-90ea-99fb7bbd182f'\n'02835e9e-2bf7-400b-9a33-779563f1e930'\n'0285b903-f5be-4a53-842a-c42282701d50'\n'028710fa-9b38-497e-b266-6e33afe367bb'\n'02897a1d-af9b-46e3-aec2-cf8f9ef11c30'\n'0289c86a-1519-47a1-9c7f-ab0c626d8995'\n'0289f22c-aab5-49dd-a8dd-9cfbe9f56d51'\n'028c66e1-5d2b-45fb-93d1-0a44f808de34'\n'02924296-383d-46bc-adc5-6531f741ea7c'\n'029529bb-cea1-43ec-962f-636aa443c403'\n'0295665e-82a7-464a-a496-0124625392d6'\n'029758e7-b211-41c0-841b-bcfbdaa0b29d'\n'029b4083-4edd-4cba-a77c-3a2caa76c1fe'\n'029b869c-e14d-4951-8962-c06e9e60aa89'\n'029e2603-322a-4f62-bc1c-f3da75cd2265'\n'02a453da-76c8-4ba1-91d4-7c56fbf0eb60'\n'02a4c14b-aa90-40d9-8529-a0878b09cc0c'\n'02a4e852-c4d5-482b-a521-51a4424e3f70'\n'02ae9a3b-126c-41ba-a529-d28deb7d3337'\n'02bab660-283a-4a3e-b30b-939bbae5a969'\n'02bc5e0b-b999-4403-8eeb-9e509cd00171'\n'02bc8ca8-4bc5-4bbc-b36f-7d58dc2756f7'\n'02c02657-0bd4-4fa2-b339-020e3412050c'\n'02c2200a-4b11-4970-af37-2e5fa693cd1a'\n'02c5023a-ad16-4cf3-9003-8fd77a84ddb2'\n'02c52c70-df0c-4349-984a-8caca4cd8eb8'\n'02c81990-3038-437a-be9f-bb76d3e7693f'\n'02cae6ee-02f2-44b2-bd64-c7ca51cb7671'\n'02cbb2df-9830-4fe2-b7f5-03ba8a4e34b2'\n'02d04a43-bde7-4952-938b-37a5562d69a4'\n'02d70e51-07db-43c3-88b4-1550cbc7855e'\n'02d9b441-2d47-494b-8870-8d3382c17384'\n'02e45508-e284-4c0d-b3d1-2bc402fff1a7'\n'02ec8bce-7ef9-45bf-b3a9-58f7823f25bb'\n'02ed331c-90ba-49dd-8b51-39a5fe448578'\n'02eeeac2-3708-47ce-b2aa-dd7496bb5152'\n'02f4a445-bcda-46a2-acf9-38312df92450'\n'02f5f302-aa54-4764-a30e-5d7522b469ec'\n'02f681c5-add3-48b6-9a37-0d9c2a6a7f9b'\n'02f7a562-0746-4b4c-8d83-4128c873029c'\n'02fea5e6-5b16-47c2-82ce-94e288ff20e3'\n'0300e6f6-c6f9-4ef7-9d6d-dc7ec5f97e5a'\n'03058382-7125-4e15-b58a-76fb220f158b'\n'03093663-1b50-4087-a861-86cce1fdd9eb'\n'0309ccc0-02a4-4fa9-b7fd-44e13269bc8f'\n'03129265-0e01-4ae3-b482-cf399a0b90f8'\n'03153931-6b5a-4b98-abed-642cb3ba953c'\n'03186c6d-3e58-4538-9b9a-9bd96ee70218'\n'032c487e-9eb7-4f6c-8689-e6dacbc13727'\n'032f5da3-da09-4e3b-8ec0-68bcc4f3f9f6'\n'0332e840-aeda-4ba1-8c6c-165c85c6da7f'\n'033ddd98-b155-4a2b-bfeb-730cdcf07b07'\n'0340b93d-ab1c-44b8-9ccb-8341bbf8022f'\n'03412397-8ac4-4685-974d-3172f16acce9'\n'03461b35-29f1-4978-a1f4-b213ff413fed'\n'0346c906-7f5a-440a-9c13-6d254237335b'\n'034af8da-8c17-4bfb-ac8b-3b2df079639a'\n'03529fdc-ba2e-4f81-9d0c-88808ae0b045'\n'035731c9-39e9-41e7-a239-da7af53e6f94'\n'035c0ae3-5c88-4498-a7fe-d095f7d83de3'\n'035c3ff5-ccde-4434-94f7-9d4b64b19617'\n'035d07a1-97f6-4d29-89f4-2a3951d2084d'\n'0361cd82-9167-4276-b16c-caa5f1e1c249'\n'03665d3b-fbe0-496a-99fc-c8d18b379214'\n'0366ca92-01fc-42e7-b680-03d9d1374491'\n'0366dca6-a897-4742-a479-aec364f9488b'\n'0366e6a7-fefa-4187-a556-cc26609d9c92'\n'03697894-9bd1-46a1-84e7-3da027dd0aff'\n'0369f043-8568-4f29-9800-d9b0f667f33d'\n'036d0a25-ffee-4b07-a57b-96ff8dd23f4d'\n'036d27dd-3835-4e33-9c08-cf52ee82afc3'\n'03776833-19ad-4c2c-8b0b-75bfb49a183f'\n'037c249b-9e28-45f8-9270-05c11f3cf9d9'\n'037e8c82-798e-4785-8c9e-a98a38bd76be'\n'037ef632-0877-49a0-9ee3-0c32878c1f61'\n'038264ee-7ca0-41b4-8f27-55a53896ee87'\n'03855439-0816-4ffc-9100-aa34b74bc43b'\n'0385a03d-03ec-4e51-a05c-ef6636eac88d'\n'03860206-6eb7-4020-beb6-fd9a748de04a'\n'038a7de7-7704-4266-b562-5e6d6928de7d'\n'038b20ff-28c3-4bf3-85c9-beef360f1baa'\n'039284f5-1409-408f-a715-b95cbab4ec49'\n'03994b68-5abb-4f04-bf70-5558125c65e0'\n'039dca15-5d29-4cef-aad4-79d5b2de066a'\n'03a4625b-62c1-49ad-9ae2-a43d6f2332a6'\n'03a89ff8-7f5a-4b04-b143-771deee60255'\n'03abc36e-7824-4b9e-9677-e79d08656817'\n'03b29664-20a4-4f2c-82f6-d47a87506d07'\n'03b4e5f8-e73c-44b3-9a9e-c0492f8dcc0f'\n'03b64207-ca0c-4a82-b5ea-9435bb0d5470'\n'03ba7e12-ff2c-4349-a712-6fd2a0a7794c'\n'03bb5877-25d8-4172-a73c-6dba4dfda91e'\n'03bfd3cb-c0d4-481c-986c-b89ce1656732'\n'03c1f2b5-9ce6-479f-b540-2c7b1c060fd0'\n'03c2ea2c-c749-4f08-8ee0-6dfe1bcddef0'\n'03c3c363-76bd-4d36-9e82-0d9845fda7e2'\n'03cd5120-f976-434e-84c4-526f3d2db076'\n'03d3272d-5dad-49fa-9e21-c4e4366df738'\n'03d82692-a06b-4a1d-b14a-e79498696337'\n'03dac778-3739-42f7-861a-c4f32e054669'\n'03e20c1b-af33-40ed-aa44-6ba7264f412b'\n'03fb442d-ed22-4f6a-9a65-76ffe18380c3'\n'04067fc1-b841-4c5c-b1b3-1fa874867445'\n'04072ca9-0a7a-43a5-a57b-829e3525c001'\n'041541e7-637f-49ee-8210-90e0c85092e7'\n'041b148e-437c-4f1d-8d34-9e58760a4b11'\n'04235ebf-f64c-44cf-b604-1868b798b27c'\n'0426e0b0-389f-421f-a115-90f6eba81276'\n'0434f065-1e73-4df9-862c-1cbba7e37b02'\n'0443995b-f761-4514-a461-350f401715a1'\n'0443d786-9adc-4aa8-bb4d-2ffeb5b4a1d1'\n'0449e3b8-cd03-4535-8e1a-cef000a07270'\n'044ae40a-ebf2-46bc-9b51-66d1454887b8'\n'044b8806-634e-4d8d-a077-107658def160'\n'044f2583-60dc-4d38-94eb-d2c77d52b845'\n'04549cd3-b094-4c3d-af14-310178872bec'\n'045542d2-3492-4270-8392-060a1d4eeae7'\n'045aa3ff-f902-456c-a9f3-1e9b36bbd08c'\n'0461cae8-c4ac-4411-8267-64bd2e23d5dc'\n'046a2746-ef98-4576-9ff2-511a052c1aca'\n'0475b6cf-8ca1-4d8f-8b29-d4d17f4574b7'\n'0475bfa0-36ee-44cc-a2bf-63821bf28552'\n'04768fa3-aa7d-47a0-be14-ba21b8b0c263'\n'048142ef-62f3-425f-b4d7-bf7c61219135'\n'0487436d-1d79-4471-8207-7efce42489c7'\n'048b1d1a-1ecb-4aca-b1ea-0c3cda5dd85c'\n'048e7290-5886-46e0-b276-992e73edeb4e'\n'04910e5c-e613-4843-b19d-6a676e46ea90'\n'04915a27-bedd-4ecb-ad0b-b7a38c90fb0a'\n'04945d00-aa04-4176-b40e-5022a83e1579'\n'049a46cd-15c2-45b8-8f73-25221c9acebe'\n'049cb9be-c25f-4469-8721-982645acb73b'\n'049e7f98-849c-436f-98b6-fb24e2fbc4b5'\n'04a0d453-5988-4d8e-95cf-aa989b228a61'\n'04a20b0c-286d-4cae-98d3-701962f098a2'\n'04a2d21a-c9b0-4c88-bc54-ee9f65b4d1b0'\n'04a5ab2d-5a18-4dfb-a7a6-e605f0c64692'\n'04ac59fc-2d32-461a-9882-7e6616900aea'\n'04ae08e6-0a38-43ae-902a-34acc8b8f98d'\n'04afdc09-9f4f-4401-9351-25f6fce7a1b5'\n'04afec81-b376-44cd-9d4f-70060ab6b2c6'\n'04b0ff01-6cc0-4a4a-865f-e4a672d3d179'\n'04b160db-c1d4-4f5e-806e-82b099a0f649'\n'04b1b98a-d151-41cc-b5f2-0050139d5ae9'\n'04b21d75-e0a7-4089-88c0-7b6b1771d6c3'\n'04b2e81c-a3b6-4a37-84b4-558b2bd13c77'\n'04b95d6b-852d-428b-ac37-c83d0f3399f6'\n'04ba3508-4bb8-4a7f-92a4-4f16743514f5'\n'04bdcfca-66ce-4399-b575-e215b694d3dd'\n'04be7c6e-e796-471e-9f9f-4e9ba69e70e8'\n'04c37019-7660-4501-b031-9c17d7ca2d60'\n'04c57d84-19e5-41ef-9761-539fdf6cf608'\n'04c62e68-a59f-46d5-b3e4-b311f837ed9d'\n'04c779aa-0e3d-4062-a473-7cc1b6cd4459'\n'04c7bb4c-52b3-4338-a413-604ed1047ac4'\n'04ce226b-96ed-4358-9d47-335d143a6e2c'\n'04d3cf6a-6e35-4fc3-8d02-d3b39432ea06'\n'04df4b3d-8841-4e2f-8536-d1d9cefd0572'\n'04df5da5-85ab-47c2-af7e-778f3db07049'\n'04e1cf76-ea0d-49a3-95e5-e52e46135176'\n'04e333b2-9d7f-4898-97de-40ad9b379d64'\n'04ea7ec1-d270-4d01-a8de-6a3b6ddf2892'\n'04ec7abb-03a7-4f7e-acb5-2be559b5e466'\n'04ee8779-7ccd-4bc6-b4e3-38e519e5bb6b'\n'04f277f7-3d65-43ca-b172-e3fd701418cc'\n'04f40c2a-fd9b-46e5-8d7c-57e442234874'\n'04f4634a-3367-4645-b2af-9719b5679f8b'\n'04f54505-160a-48a7-bb7b-4e75650457b7'\n'04fa0c5a-7cc7-45af-882d-0329fe7045e0'\n'04fdface-1e2f-4c31-80e6-1e6483d29b9b'\n'04fe66ee-becf-41b6-9110-3b70f835e06f'\n'050635be-202d-4799-8b11-1fa7a30888a7'\n'050c9aa7-1a3c-4198-bd6e-b71e87f6421b'\n'050f7a2d-5feb-492a-a549-47db328ca3ea'\n'0513d54e-45c5-48fd-9365-ea93037142f2'\n'051b98f9-123f-48fa-977c-22015a3ebbff'\n'052168a0-6ae4-4b8f-847c-358d78c3e891'\n'05232be9-fdb4-4644-8d0b-793d4e4407ae'\n'052350f3-733c-47e3-a0bb-0cf78886eda8'\n'0523645a-ce00-432a-9d6b-777508c83a1a'\n'0528d484-9e37-4140-a43e-894fa1ae987a'\n'052b8ca3-3f5a-4d57-8fe6-ee55275baa48'\n'0532172a-42b6-4bba-9e00-c7647866bc32'\n'053288fc-7634-4b0e-83cb-7d76f072192d'\n'0535ed57-a197-4e69-ae4a-102a6ecfe249'\n'05360efd-326a-4afa-b28a-d5916dbb94a3'\n'053962ee-c1e2-4a4d-b21a-de845553d5ca'\n'053d9118-b5ed-47a3-8319-0f145f244a4c'\n'053e8f71-fdf0-41b1-ae40-15db891a698e'\n'05488e9b-b918-474a-8ff8-47076c95e983'\n'0548df31-6858-4d21-8878-8d5638aa5764'\n'0549628e-54d3-4086-b52a-1df268d87c17'\n'054be902-2bc2-47b6-a641-29fbe99c16a5'\n'054cf666-898f-497c-a561-c6d8f2fddf2c'\n'05563bf5-b7dc-426d-a914-8e6ea0c27899'\n'05575c51-5215-4fc3-b455-9ad4b56d4f86'\n'0557cbba-861c-4f20-931e-2f33e8c2b073'\n'055e5328-187a-498e-8893-00cb04821723'\n'0560ca13-1058-4a8d-8629-2b720250b8ca'\n'05694a09-1972-45b5-8a67-d1541f00f3db'\n'056b3777-54bc-4be1-81e6-ccaead6cf064'\n'056bbed9-0c27-48ad-9072-b532d97322cd'\n'056d591f-d96d-4700-967f-434d0ed4cbac'\n'05726490-fcfe-4bd3-ae8e-6b5dc39e1bfa'\n'05746e8c-0f15-41d2-a4c1-4ddfe851e397'\n'05749ae4-bdea-4cd1-b40f-af7643fcc157'\n'0578020e-9bae-46ff-aaef-f64b9330e801'\n'0578e1ff-45d7-4fe9-a28a-f4b669c123ef'\n'05791146-2450-43bf-9ed7-db6fb507142a'\n'057f433b-a8de-425e-843e-fb6d15276612'\n'057f7dd4-6e33-4f6e-828a-6a3d14abf2cc'\n'058bacc8-5d39-43b8-91d7-c9b8a8bf5d0a'\n'058c942e-6fe4-4e67-a047-3cecf68167f6'\n'0592fdcc-d1b8-404f-9f23-725b50760949'\n'05936245-fb6d-4a1b-864e-e39d1dc557ab'\n'0598145c-77b0-462c-b9c6-7bb3eabf26cf'\n'059cfcba-89cc-4f3a-8665-3831ab242fab'\n'05a38ac7-262d-4136-9f67-7ae62b37334b'\n'05a391c8-b0d1-4a80-af4c-85b1a63785ec'\n'05a68ca6-986e-400b-acf3-ef06f59ab86b'\n'05ab3786-2df1-45eb-981a-a9ad882442c5'\n'05ad05ff-a1f6-40e0-a441-d9a7ed8268ca'\n'05adc967-9d21-4548-83e9-3df4f7d05cfd'\n'05b16864-bfd7-410e-a82f-c726609d0976'\n'05b6e9fd-c047-486d-a063-3df46ee9507b'\n'05c08a4a-e688-4b49-97e7-6194f7e0a68a'\n'05c13909-f845-49bb-860c-b03523352a77'\n'05c40154-5e23-4fb2-b48f-1fe5d393527f'\n'05c4a84b-90e5-4e19-9c62-decf47b839f5'\n'05d3382d-7b0e-4d7c-8bbe-17e0329022d7'\n'05d7ea55-ac46-481e-a28a-f73d008fd061'\n'05e15184-37d6-4889-8254-3b0a3a6bbea6'\n'05e706da-f181-48a6-a802-6b997839a3db'\n'05eb1850-9609-4d00-ad31-603ffad3af79'\n'05ef68b8-d89c-406b-be87-4bbac4242b75'\n'05f06090-2b19-48df-aa89-db729161af09'\n'05f12591-24ea-4a3b-8c0d-584803f61c62'\n'05f24aa0-bedd-4d21-a21c-ec2306d8dbc3'\n'05f52020-6bc7-4128-a9b3-1bc5a0631f49'\n'05f7f64a-1a08-4758-bacb-854e72f798f7'\n'05fcf6ec-bd96-4c5b-99f9-94561933241b'\n'0606d5db-153d-4fc5-bb55-a3fe512fa8d4'\n'0607cd43-6cb9-40e0-bab2-4c5a4bfcd4f9'\n'060b0040-d2dc-49f5-91ae-e24bdd0ef807'\n'060e6959-0f31-4da9-a31a-e09ba3cb8066'\n'060e9025-f833-4b7f-8a66-4b1a7e28d405'\n'0610668b-2864-464c-ab8c-ff40b9fb747c'\n'06121571-8dbd-4fac-a0d6-aa5d3ad12359'\n'0619dde5-26e7-4e0d-838f-91c564614a68'\n'061a84b2-b182-45db-8895-b4990b610849'\n'061b6cef-221c-4265-8963-a1929db71f96'\n'061e727a-4153-4577-b716-6ff5d8ea8d75'\n'061fdf10-ac0b-480e-a694-08c7a80e1c06'\n'0624ef1b-5ebe-47c3-ac83-9fc757f6d5e9'\n'06258474-812f-4912-9fb3-e518f43a5fbb'\n'062844c5-d8c4-49c5-a714-d8ec4b512154'\n'06292529-e9de-4238-87b5-2c65163a7d5b'\n'06294a62-d805-4e35-bb23-d55e3c0ca591'\n'062a4e6e-9073-47d3-8531-c66022f275b2'\n'062eb932-aa92-413f-afff-0c716faf9311'\n'0630090d-453d-4d3b-9c95-0eb05c36cd5d'\n'0631580f-5b43-43f7-9700-7da9309bf620'\n'0637f796-99e3-4f1a-9710-36ef0ce4cb79'\n'063c8f4b-ab52-4a55-b155-1fc02d8da547'\n'06417242-4d8c-407e-a7e4-efb84e5709c4'\n'0647b5c6-7839-425b-96b1-330d6722f043'\n'0647e67f-75b0-48f2-896e-592c2e776818'\n'0649a071-216d-4e32-9746-8c5fb4781611'\n'06531465-cca6-4076-99ee-96bb48b0a577'\n'0656eebb-487a-4ec9-9334-f6e14fa4bc15'\n'0659fd60-d26f-4a69-8ab6-c04b6f03dc35'\n'065babcb-76b1-412d-8e47-b1adcabbdc70'\n'06622f4d-c964-4762-a72d-a773037f0af6'\n'06711527-3e20-4c94-bf71-0ea9b61fad0b'\n'0673b6ef-454f-4b2a-a754-fbb63df39e3c'\n'06783937-fe9c-4a22-97da-3790805f44d0'\n'067bb9b0-0758-4e7d-bde8-78bd17397c31'\n'06856366-6527-4209-935e-0a62ec66609a'\n'068d151f-2874-4fee-8a27-9abfe76aaff7'\n'069519cd-3f7c-4c90-8850-8d35439974b7'\n'0697b5d1-0b52-40b2-bd0d-233b4765fc9b'\n'06a556ab-afde-4404-95a4-cbdb0aceaf14'\n'06a7deb8-7963-4485-b509-dae0ebaaeca6'\n'06b30374-410c-4f4d-8ea2-4fcf9bcf0c56'\n'06b50e90-1529-40ce-9355-d78d05c729c8'\n'06b8ddce-08a4-4e6d-8745-48710adb9de7'\n'06bb5b73-80d7-4a7e-838b-2e27f90dea48'\n'06c1ba39-94b3-4ba1-8d4b-0589580f01cb'\n'06c2922b-0ca6-45ec-b245-fc2337e0f5fe'\n'06c2b4c3-1d30-45a4-bebd-779f2484422c'\n'06c2e43a-3a6b-49b5-868d-da4db1abd78a'\n'06c89620-9510-4b90-b60c-a871b2a80ad0'\n'06cb985f-95e5-4f2e-9fc6-4ad813d68775'\n'06d878e8-a2fa-455a-983d-8bef859838fe'\n'06d893ad-4d5b-43bd-832e-392d886e7a35'\n'06da70a3-4d77-4c62-b0a2-5d5fa11b9233'\n'06db6a18-15e1-474f-b6c8-d2d35d843ae2'\n'06e0e263-8f5c-4a66-8d49-70e62e235c5f'\n'06e3a3f8-77e4-4518-af3b-e9e0083eafc8'\n'06e706ff-e987-45a1-be71-31b45af463b0'\n'06ead6f0-036e-4a03-821c-60a8bc238c5b'\n'06f5be0d-81f6-4c93-9c6d-7a8b627e05b1'\n'06f8336c-37ac-4c3c-b927-a8579c44925c'\n'06fb42b1-60e6-45b3-bdb2-8589390ecb62'\n'0703c155-be7f-46b5-89e8-25d65f8deff8'\n'070428e9-16e6-4692-afc7-389c32f0b436'\n'071391c8-16fc-4a7b-97d5-949d1848d313'\n'0713d324-c3bb-48b7-809c-74dd6ab523f6'\n'07170ea4-3087-430f-ac31-40335767b6a9'\n'071ac298-7ea7-4abd-8b53-d0e2c32cce1a'\n'071dc22a-2346-43af-8ab5-db3a5bb105e0'\n'072003c7-3b01-4b0f-b556-6b763e9e4b19'\n'07226700-537c-430e-adfb-85a9b8dbfb6d'\n'072699ac-c568-411f-a6af-ab964803ab31'\n'0729c938-0b71-46b9-8d8a-2f863516bfe0'\n'072a4849-7825-41fb-855f-61a8e4bab1cb'\n'072e2b2d-04c1-4259-b876-295575726506'\n'072f287c-fa0a-48f6-a9a9-71c5d06dd7df'\n'0735031b-b1cd-40a0-90e4-3a867f4bd9a9'\n'073bc20c-6948-4d07-b53f-734b071e27f8'\n'073f5e65-cc6e-4ee6-aca0-3bb465292275'\n'073f7631-d19b-40ed-8be9-4efdc7aa5adf'\n'073fe400-bdd4-4717-9cb0-9062f7f8c000'\n'0742ebc5-14c9-47c8-9715-0773c3ed5818'\n'074484c3-2fcd-4750-825e-89d388744665'\n'07462578-d456-4906-9560-c88a4cb07b75'\n'0749e15a-30e0-4469-bd4b-67eb1062a572'\n'074de542-e0d6-4f29-a6f2-6ee8ae487c97'\n'07509d76-428e-4dc1-84b2-3299c7bf7540'\n'0757f1e4-fd8e-4de3-8f65-7cb11973b6fe'\n'075da5e8-3295-4ec9-8932-0a4e46b1babf'\n'075f12ed-aef6-4187-80da-7afd47b182d7'\n'076369ea-11b8-468f-ade6-9d57ea3f3bae'\n'0764fb45-5f94-4242-acdb-a66603d583f1'\n'0767045b-dcd5-4bc4-8961-73c8142b9a8d'\n'07691043-4534-4b6d-a0fb-a6fee590f217'\n'076c422f-f9dd-4359-bd45-0efb8212007b'\n'07722c60-7f43-4ac7-a9d8-df09d1dc5c69'\n'07758724-4cb0-4a80-ac0f-982d96f89f3d'\n'077b74fc-2698-4e85-99bb-b10f36ae79b0'\n'077d90f3-090d-4349-83b9-4af91001c57f'\n'078153e9-7f9a-49aa-a3d7-b384700a2d38'\n'0786e0dd-b201-4ad5-840f-122aabe3fe7c'\n'0787d099-8c6f-4be5-b4b0-2062c3134007'\n'078a1635-2a9d-47c0-a5d4-1b902e96c268'\n'078f28fc-e284-4b46-8a4c-5ec6c33bf99e'\n'07933b53-0650-4fa4-8148-24dd17df5519'\n'0793c962-058c-495d-aad1-8be7d8184639'\n'0798f2fe-f83c-40bd-8f6e-86fe7f71a124'\n'07999831-b2c6-4b3a-83e6-4d974a78a8ed'\n'079ac67e-70ab-4b0c-b16f-d5ed823189e8'\n'079c1682-17ee-4335-a456-496a29b698fb'\n'079c19fb-0a16-4b56-997c-ddc359682df1'\n'079c5b54-4b19-4ab2-bbd3-695eb64e4ebf'\n'079f1f78-24a0-4cb4-9061-e9ecf47779e3'\n'07a2154f-bbeb-4ebb-b9cc-965f9308158a'\n'07a5603f-18fd-4ab6-b485-ac9b32df6619'\n'07a8895b-5ff7-4c30-8c9f-8a55e00f5574'\n'07aa8545-fb26-4377-b95b-7680c220790e'\n'07aac397-831e-4f2f-93f6-8db3b7908c05'\n'07aafd03-974e-47fd-ac1f-90750dad086c'\n'07b677c1-f44a-4c20-bcaa-56fd98f1244d'\n'07bbabba-14d5-44d8-b125-fa71579c51ac'\n'07c7c366-cffb-4093-b100-42c18a4d3702'\n'07cdbf98-18f5-4789-a781-2b0cf33f07c4'\n'07cdc659-00c9-406d-83e0-46b452516699'\n'07ce2ac4-de86-4311-bcc3-9051890d17b7'\n'07d783c3-a709-4609-8adc-1c73f4952e97'\n'07e5906c-bd77-4f35-9b84-fba77606ca03'\n'07e6a197-04df-4025-8800-6ec7c27957fb'\n'07e7755f-8b70-4a02-a3ef-8c5566aab322'\n'07ebec08-d2aa-4d3a-961f-f4cd6cdcf807'\n'07fa7b95-9669-46b5-881f-1a93a57903db'\n'08087a07-1e9e-4525-bf28-8bf667734bf6'\n'0809bc30-ed57-4a04-872c-d155a03814b9'\n'08127b3e-597c-4eaf-a3c4-0eb3a068611b'\n'08141bed-28f9-452f-8161-3b5214f2ddda'\n'08145672-da29-441f-844a-dd4a9c6d43ee'\n'0816b6fc-5c35-418e-b4a8-1ba56bc9410c'\n'0819f584-b809-421c-a925-81422b5e9a4d'\n'081a478f-21ef-4561-87f1-4530b0a21c86'\n'08210676-3307-4a37-bf98-4afa28a9e212'\n'082403cb-a0d6-488a-bfaa-d4a4a8687c96'\n'08248582-b69e-4535-8c37-5ae97170dd8a'\n'082584f1-d847-40f9-9074-05926b4a53a9'\n'0828dae4-7d78-47e9-8af6-0fa6a3c854c3'\n'082e3de7-e434-44db-b2d4-05512fb9dec0'\n'082ee61d-8991-4d2e-ba73-9df0297aff89'\n'082f3b2c-c325-4f5a-ae7e-11e45044c8d7'\n'08324262-d435-467f-a07a-e289d48a4468'\n'083b3001-2b7d-42e6-acf7-5183fb1b6f7c'\n'083df5f7-5363-40da-82da-3f5c88b867e4'\n'084056b9-8b02-4cc5-9c7d-d6407b5de6cc'\n'084108ae-f947-45d7-8010-fce9dc20a051'\n'0841fff6-e3c1-4401-a83a-7258bb4911cd'\n'08473df4-b345-409d-90ff-09bb319f9a73'\n'084850af-4730-4001-8a63-4083ee2687b7'\n'084929f7-cb2e-48a2-b664-f95d6553585b'\n'08494e9a-dfb2-4a51-9ed8-caa6c3763241'\n'084e60b2-5a74-49ba-beaf-0cf7bb5b9d07'\n'0856e80a-910b-40cd-b044-1c3eb6fd8bee'\n'087444c6-44c3-42d8-aec9-e0f28d92fb8a'\n'087d8502-ef25-4e91-ad21-14c392ee36b0'\n'087e55f5-c526-4a03-8baf-60400a997012'\n'0880513a-fd6d-4da0-bb30-df7dfeb6aaf2'\n'088aa34a-51c9-4aee-abf8-f52f11dbc1f3'\n'088d2941-d99f-430f-9024-f6dfc63f7024'\n'089383d4-c9ac-45fd-bb48-4b1a78cf5fe0'\n'08938e3d-abe2-41b2-9546-f56a4f0b64f8'\n'08939b58-35b3-4ff1-aa95-0b0efccb6263'\n'0894f954-9a39-452b-8612-80c5b0567b4a'\n'08988ab6-3250-46f5-812c-e6669f35d51f'\n'089a2c59-c054-4a31-a65c-375eabea6f29'\n'089b20a1-42b0-491e-88dc-32777fb65aa6'\n'089bdc1b-06cc-40da-bcbc-b9563eaae8d1'\n'089c615e-1cd7-4ebe-bb6b-46850da920ab'\n'089d27dc-ccd7-472e-a9c5-062c562ea228'\n'089e4b87-ef4b-4513-bf59-e1f4a683cf11'\n'08a279fb-a152-4b21-a4e2-ad8da52604bb'\n'08ab14f8-206f-41ba-9a8f-b92c811e3056'\n'08ac353d-7352-4ec7-9d1f-11e34acc6842'\n'08ac50c1-1c7e-4ebc-b465-bb53f7c83025'\n'08ace000-824f-4db1-a997-171433ef9ad5'\n'08ad5fdb-3a25-4b22-bf3f-1dcb6b75f835'\n'08b0596a-93db-40bc-a6c2-9e7b51b5e527'\n'08b16a7e-3bae-4e98-a901-bc180e0b60c2'\n'08b1c721-34c0-46f8-95b0-ad3c7f883bf1'\n'08bf182f-7d9a-4481-bb9b-1e4a9bb50e6d'\n'08c01515-4ccd-4fcd-af36-9d41fb2379b9'\n'08c0f94e-f0a3-458f-84d1-d840e02b85e8'\n'08c763ad-c866-42f7-931f-51547a983e4c'\n'08c8235d-7721-497c-9a37-f37b0f9be896'\n'08c99bf5-d19f-439f-b2a5-15da9ce9869a'\n'08cb8942-f302-49b7-842f-7ad8b9a90250'\n'08cc2379-8419-473e-99bb-ce0904cfb52c'\n'08cc8725-592e-45be-9e84-6eac7dfa2fbe'\n'08ce26f8-8e0a-4eee-b5f8-8f294cef795a'\n'08d12e8b-797c-484b-9ba8-4ed86c09beaa'\n'08d44c40-6d27-4dc3-9749-c539172bd941'\n'08d4d7db-f6b5-4e60-a480-d0017ecf2593'\n'08d6915b-b7a7-4dd0-bbd6-ed7855f24a52'\n'08e0271f-adbe-4da7-96ec-0256e8e80276'\n'08e24232-8ea1-46a4-8f0d-1ecc2a35c02a'\n'08e9e967-b8cc-488f-b93f-7b6dc245af59'\n'08ea38e3-0a75-401a-9dd1-9277631f54f1'\n'08eacab7-d826-48eb-8f8f-a8c6c12fe536'\n'08eb335b-7337-4b04-b4e1-88022109b574'\n'08f21271-1723-4175-82c0-b7b00f8d085d'\n'08f9adeb-ae0e-4e55-bee1-b2ad4f904406'\n'08fc8ccc-59e8-40ea-81c8-6b55e399d5c9'\n'08fcd0b7-cb9f-45cc-b9a7-2a51dd938622'\n'08fcf88a-3a7f-4e26-9532-6b0a7103d56f'\n'08fd1f60-e3e3-4e3e-be03-b7d9678b9019'\n'09011acc-a2a7-4278-b7b2-fc2cd38a6e78'\n'090184fb-b9a8-4ca4-99a5-fb09e9820d0c'\n'0901adea-1382-4cb3-abb4-e567a8ce4f1f'\n'090395c5-ebbf-45c6-935c-f1de235268c5'\n'09055f88-9de4-4f39-948c-3261f640216c'\n'090ca42c-7fac-4e64-bb68-fc7c6893d51c'\n'09146419-d10b-4554-b16a-86a40cbc9703'\n'09186a82-8079-4844-89fc-a3b66d19e34f'\n'091c3701-c3c2-4e57-93c3-11924b030d83'\n'092402fe-be4b-4f1a-8b8b-6ddd72822b0b'\n'0927d441-7504-4fe1-a99d-7bfc545115d5'\n'092a00fd-2d8d-4ff5-aae9-bddc2962f417'\n'092a9ae7-c487-4d28-ad3b-dde5fed558b5'\n'092bb67d-0800-4bd8-912a-c1f6822a1cdc'\n'092c188a-9f74-4ec7-8e7d-9828748f548f'\n'09305d9d-4c67-42a9-84ab-d92d0acc460c'\n'0932b151-c50c-4d4f-bfa8-a1668858b493'\n'0933290f-fb56-4e36-9384-6669a23fd0e4'\n'0933df91-eb94-4d28-a96a-15627bcc6fca'\n'093b489a-ff9b-4ac4-82d9-194e15b7911e'\n'093dd684-00ac-4795-8ec8-73ad84a46aa5'\n'093ff7c2-7e69-4d0f-9364-711d16ae9968'\n'09403287-5645-4770-9805-7411e23512f0'\n'0942b307-e88e-4ac4-a5cb-f49143a0ffe7'\n'0945c272-5cbf-4cf1-b425-0f990a791d1f'\n'09485ab7-5d8d-4620-b1d1-95b4bc2a7272'\n'094e2741-5b83-4f65-a4c1-bddb9193af47'\n'09519964-8bba-40f9-9607-5d0964c13907'\n'0954b9fa-bbc4-4799-a2c8-8c9b89e17450'\n'095c4d81-e97d-4801-9cfe-02a04e479366'\n'095c7b2a-f9c8-46dc-9566-5e393c5f7381'\n'0960af5e-baa8-4e91-a71b-c7aa6a5b17cf'\n'096441bf-ad39-4d97-a7d0-e114b304a72f'\n'096a9be7-7935-4ee8-b1c6-7ed07a8eabd8'\n'09703185-8e97-4c42-b06f-766a2bc0cac6'\n'0971ec17-f13d-4ff9-832d-cc757912ef05'\n'0976fc6b-bec4-44ec-934b-e8e5176f6b45'\n'097a8c90-3c6c-4403-8404-5c17ed759c1d'\n'097d56f6-1d1a-4b85-b62c-00733f616d44'\n'097fb3ae-6ae9-4cf7-a8f5-dee925e9d241'\n'0983550f-f704-445a-97a3-0782306b8278'\n'09855ad7-42b0-47d0-8faf-28a6871fddfb'\n'09867bd8-938d-48d8-a76b-c3c3158de00c'\n'09930dff-cd04-4b8c-a824-9a3007b02d92'\n'0995cde5-b037-4990-88fc-a9fd7571ac70'\n'09a1665e-c178-4a21-bd17-74894930fa06'\n'09ab4d70-e430-42c7-a7b2-23b231f7ecd5'\n'09abe368-c10f-4728-9908-051a01950307'\n'09ad2e08-b19b-4f89-9263-6616ca4b0f8f'\n'09ad5195-d6a8-4fde-b335-bff329a40bac'\n'09ada9e8-207d-44a6-812d-c4561051c6b3'\n'09b2e777-0c08-416c-96be-fa16da257c3b'\n'09b4c2ea-95da-4eea-bde4-d6d3108d60b6'\n'09b91bab-eece-47fc-b780-88db978b51f3'\n'09ba8a30-0cda-4011-bd13-ba15408fde5e'\n'09bc9ca5-a09a-45e0-82da-b235d4bda556'\n'09bdffc8-87f8-4fc0-8a03-b756f6dee4ed'\n'09be9d4a-85c4-4f1f-b886-c0ca8b9f586f'\n'09beafa0-ba2f-41d1-8b28-149340febcef'\n'09c16013-fd3b-4ffc-aa8a-02a9652fa6fd'\n'09c1e831-4eb1-4c47-ace3-bfaa49b79e6f'\n'09c31481-cf94-4425-a14d-b7d62e6a4fbf'\n'09c80421-94b1-449b-87c0-4945ad3d6949'\n'09c91ccc-9fb8-4c99-a082-8eb57a03c45a'\n'09ca3a44-df5d-4dd7-a166-ce7c208401ea'\n'09d5ce40-915e-45c0-ac16-36ff85d36d66'\n'09d72022-06ff-4240-8098-f37ba89b3886'\n'09d8b7f9-703a-44ad-9526-4e464196151a'\n'09dab5c1-753a-4659-a8fd-0064c26e605e'\n'09dca6c3-9802-46e1-9a85-0ea7c9477724'\n'09dce528-e031-4bdd-87d2-30d2bceb406e'\n'09e62f58-0d1c-40e6-bf1f-1ee4ca776449'\n'09eab4a5-f1d7-40ca-9454-09c52870cfc7'\n'09ec214e-a496-43bc-b04a-6d75f30acb63'\n'09f16588-95e9-4c52-9898-31e41aa2186c'\n'09f6e4cc-ca73-4485-bfff-395c0196bbb4'\n'0a05eb6e-a58c-411b-a61a-a858cb7442a9'\n'0a067213-9188-490f-9c83-f01207d95192'\n'0a072567-e7b8-47ba-bca9-724432135e06'\n'0a08dc99-865b-449b-8ef0-a91d38e13c3e'\n'0a094e90-f55c-4c19-afdd-1cb5b0fc4af6'\n'0a0a4dc6-87be-4ac6-b540-28d76b64cd6f'\n'0a10216c-bd42-43b1-982d-0b33163e7249'\n'0a18246d-5b64-4e0e-9ff7-d98634342a50'\n'0a1856f6-7647-4f1b-bf65-5fe31e2ed204'\n'0a1b1a24-2f4a-4e3f-8359-aadc472e0b46'\n'0a2550e3-e265-4b41-81ab-1865cbbf5785'\n'0a2a5e48-003f-4f22-9429-b5ee939a5018'\n'0a2bb9ac-da2e-4e2e-81d3-4a1cd14f2002'\n'0a32ce55-53a8-4d90-8127-0952abf3149e'\n'0a33f0e6-5172-4907-bca8-cbb36caf8605'\n'0a34ef8d-056e-4270-9c8c-e09ff37a8957'\n'0a36cd8c-2a9c-4323-a98f-c12913e15886'\n'0a3d6e45-0e43-4419-89d3-39eb44e194d4'\n'0a4349f7-6774-43e7-88bc-15699604f9c5'\n'0a4a3b83-0d02-45a4-8285-03662fad1dec'\n'0a4e3e85-b393-4d38-a2da-3c3e34612fab'\n'0a51a141-5489-4631-9cd7-e942b7d0994e'\n'0a5484c8-fa95-4d26-8fa9-1f7783f4cb7f'\n'0a56003f-4918-4997-b049-5d0d8ebfd07d'\n'0a573dc7-b2b5-4bdd-ac1f-22b8827ad338'\n'0a5ab354-424d-4181-be64-31ad4ae57897'\n'0a5d9163-a21b-406f-84e7-5d2e4ecc7752'\n'0a6340fb-c62f-4750-a634-b133f38cd939'\n'0a64800e-fbe2-44f7-87cf-c141ede2433a'\n'0a699920-31bf-4800-9e29-614bb5239349'\n'0a7006c0-b3b2-47e1-830e-7da7f86e5c27'\n'0a746509-b6cc-4d07-a26d-a23183c895e4'\n'0a814153-e468-46ab-827c-d436ec52dc12'\n'0a8da620-73f0-4e7a-ab47-27da867c3116'\n'0a92bf1a-b52d-4fda-a0b9-99cb3eeb6e44'\n'0a93fc48-683b-4173-a57a-b3bc169f1fa1'\n'0a94cd29-78f1-4d5d-88e0-e7cc62b3e3c3'\n'0a973cbc-59e7-4d30-adb7-d20f2bbba6f4'\n'0a980b2b-a214-4b29-87e3-0e710c2d5eda'\n'0a9d50c0-a9b8-4a22-b518-547216fd8f56'\n'0aa5b39b-c79e-4538-adb3-1594e11bc90d'\n'0aa7e0f6-1163-44a4-abe8-db8e4317766a'\n'0aaa98ac-70ec-4323-b718-b78fd64b0af5'\n'0aab26ad-bbc5-4ecd-a155-b81ddc068df2'\n'0aac46d8-09f7-4710-9481-098cfd1abac9'\n'0aac8dd3-6976-405e-aa00-57bd7362ef9c'\n'0ab2da2a-b31a-4b74-bca6-f6de9fb23e8c'\n'0ab804f3-22bd-4246-8b7b-c7a2af143bda'\n'0aba7490-72c1-43ff-b26f-925065d4be26'\n'0abe09c3-a34f-4164-b72f-2be9c390d05d'\n'0ac36691-19eb-4609-9cbf-79ff79626ea9'\n'0ac57d9d-1b4d-4350-a930-c532ff4789e8'\n'0ac8834f-a98c-4f36-ba02-39478bc0e0d9'\n'0acde152-0d59-4e8f-ba31-159259b37454'\n'0ace6fca-46e7-4858-bffc-5c0d0d21a85d'\n'0acedd67-5334-4cf0-9327-fd737c2c55a1'\n'0adbd1c4-dc8d-40fd-bea1-842fba2b8167'\n'0add508b-fd20-4bba-ae04-7354ad59256b'\n'0ae0166e-2951-42c9-bbd6-f4a4b45864d7'\n'0ae2f14f-9559-412b-b6c9-3c43e28b2f48'\n'0aea9bdc-0d69-42cd-afc5-cffb6662e80d'\n'0aeae4c1-337e-4476-9d8c-073955d45887'\n'0af67fd5-8561-4875-8be5-64dfd32cbcef'\n'0afcc042-f120-4d7b-b7a4-5afc4b5970a6'\n'0afebe6b-b16f-4a1b-9e4c-92ac1a9c35e4'\n'0b06ecff-6715-4ade-afe3-9dc5c2d05149'\n'0b095026-e914-43bc-84db-ef96433e3852'\n'0b0dda5d-e350-4e49-8ecc-d5f8d084bcc2'\n'0b164252-e501-4a9e-84ea-30f86fa66eec'\n'0b1ac29c-a06c-4418-98f4-44a5dfced85a'\n'0b1cc888-4f7a-4a9a-9bd6-1403d81d81d4'\n'0b1ce129-e769-4711-a46d-8d3d61556443'\n'0b1fba9e-7ddf-4698-8dbe-914fcd64a12d'\n'0b266e44-cf7e-4a22-b9f4-90df9d29df8d'\n'0b26dc64-00e5-4bd6-89bc-064a4dadaad7'\n'0b26e882-5cc0-43b7-aff2-34bd28efd1a9'\n'0b27fc0b-3846-4b00-99b3-21e433fd4adc'\n'0b2ed16f-d41d-41b4-bf39-2d5cb227e716'\n'0b395470-0ae0-4b68-8c01-e84739d91527'\n'0b3a3cba-2ef6-4523-8839-1614ee01b8f5'\n'0b3b4670-fa97-4294-9f10-d6fcc720e9c2'\n'0b3bc475-7d9f-4b06-9096-25213b3f4313'\n'0b3df019-6452-4544-bc30-c26246bf1166'\n'0b3e3768-32e3-4d14-9bbd-8ad950e09fff'\n'0b3f6112-4d18-4970-b348-dc18af76ecf8'\n'0b3ff718-f3cb-4d84-acc5-07016f1876ea'\n'0b435bb1-2afd-4b40-8c00-40f2bf91c7d0'\n'0b456996-d7d4-4d1f-9071-62a6a1a493fd'\n'0b4b4434-98b8-4b28-8915-0d4b844c38f1'\n'0b4d8edf-a4e4-4593-986a-807a8b87ca81'\n'0b4e84f6-bdc3-4b43-9011-444ee2f30cec'\n'0b5341fe-6f3f-40bc-9f31-bef1f95ebc28'\n'0b5834eb-ab94-4a52-9c75-2ee220043f90'\n'0b5b6ad9-84f3-4eab-a305-6a0230814e2a'\n'0b5c44f4-1556-4228-b248-685062c1f9a0'\n'0b5e4f08-a325-4290-86cc-08c477c22226'\n'0b61a853-905d-4227-8ad4-562c64ebbe80'\n'0b61f9a0-1030-4fe5-aee8-b8f9d2d38c4f'\n'0b636879-562a-464c-8048-65c061077faa'\n'0b6d40ab-d4b6-4698-a377-310f202f4685'\n'0b7ace45-1d8c-48fa-94bc-390c575a0a3b'\n'0b7e4306-bfac-4544-bd53-8b0836d153ed'\n'0b8849e7-2b18-4151-a36f-b792c1b82aff'\n'0b88aead-f338-4079-8173-d76fa5e918df'\n'0b8aad72-3b27-4581-835d-6428196876c4'\n'0b8c7466-bdb8-4919-8a8c-60c0b86ff71c'\n'0b8f6567-2c62-45bb-ac34-02c0df726b27'\n'0b948b2d-e413-4771-98ff-8c3591434a6d'\n'0b9a803b-9c2f-46e1-8a26-def44d2c758e'\n'0bac901f-52ca-4567-ad42-ba62610feca8'\n'0bad2aca-15f3-4cbc-aecb-521a1461f87b'\n'0bb36e89-ae7c-4c44-8f1e-096e1e12b677'\n'0bb6fcca-e208-4125-bbf4-f747c1a12210'\n'0bbae0c8-16ae-4b7a-8ec8-40ae8f0114bf'\n'0bbba4c9-0595-4057-ae6a-f9b17ae5714e'\n'0bbfa881-c7b3-4481-8ea4-a8ee5da4200e'\n'0bc98401-36c9-4368-a4b3-d7041057a62e'\n'0bd7a121-e468-45b8-b73f-743ed2cf083c'\n'0bd7a86b-ea6f-4089-966b-cf0a9116dbb1'\n'0bd7ff80-7284-41e3-a939-d15eab9bf5e0'\n'0bd8fc15-1c36-4944-b2e4-908fc0ced331'\n'0bd950b1-cc77-49a5-b52e-5911cc794553'\n'0bdc01b3-370c-4d72-a2f4-3163e39d46a4'\n'0be43379-b1f5-4877-96e0-53dbcef32bd6'\n'0be585c8-cfce-4e41-aa8a-a848fd4c3dbc'\n'0bed86ad-9ed8-40e4-af84-cf5526a6b552'\n'0bee7446-2a8c-445f-9c6a-c7e960377574'\n'0bf6de37-9871-437f-94c2-20efd8fd390e'\n'0bfa46ef-b0bf-4831-9d1a-e7eacb105701'\n'0bfb33b2-c061-47ba-ab81-c381ce139e92'\n'0bfc308f-3fef-4aa9-b821-932fa1742245'\n'0bfcaf8c-d884-4aa0-92cb-b61b53c46fd7'\n'0c023d20-c0bd-4abd-9321-de2fb81d45ba'\n'0c06d2de-f108-4014-a04e-01e8e3b0adee'\n'0c091211-9a45-4698-9876-109eb4daddbf'\n'0c0a65e9-ca16-43c3-b2db-2881b5915a7d'\n'0c0ba3ce-fdf8-4765-9da7-dcc3afbca19b'\n'0c0bfbd2-d561-4c05-a4e2-de43b4679944'\n'0c11e979-e496-4ef0-ac00-88e9e1e34d09'\n'0c143938-7ce6-48b5-8d7b-caf70ab1629f'\n'0c18b648-35c9-4123-9027-998e8b93ef2a'\n\nStream closed",
  "history_begin_time" : 1649212502886,
  "history_end_time" : 1649212516299,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "ov34tJQ9cF0l",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nprint(\"submission_format_df shape: \", submission_format_df.shape)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\"\"\"\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      #poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n      break\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\"\"\"\n\n",
  "history_output" : "today date = 2022-03-31\n/Users/joe\n/Users/joe\nsubmission_format_df shape:  (20759, 25)\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-01-01_2022-03-31.csv\n",
  "history_begin_time" : 1648767762706,
  "history_end_time" : 1648767766658,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "oI3rl0G2Us4o",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "today date = 2022-03-31\n/Users/joe\n/Users/joe\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-01-01_2022-03-31.csv\n'0001daba-dd41-4787-84ab-f7956f7829a8'\n'0006d245-64c1-475f-a989-85f4787bae6a'\n'000a9004-1462-4b8c-96ee-0601aff0fdf7'\n'00118c37-43a4-4888-a95a-99a85218fda6'\n'0013524a-f2f6-4d5c-a458-9f08a42c1228'\n'0013ea8d-f647-4664-b40f-57bb96f800e5'\n'001476f9-a9d5-4128-8210-e2c4879ce505'\n'002220cf-0b83-4f58-bacb-c4318686194b'\n'00270da4-a790-4b81-a693-e1e8c4f13e6e'\n'002a9f10-203c-4feb-9ea4-19bcbe9a7686'\n'00325ba7-fcbe-4bab-8c4f-f70cfe80ea46'\n'0038be33-f5ba-4274-93b9-c7b6ea003519'\n'003ca3a3-c298-4253-9f1b-7f6a1a097ca6'\n'003d4c74-b631-467c-b1fa-56c4708276bc'\n'00481126-761a-4d70-8775-c449bf498ecd'\n'0049403d-da12-4b13-b02a-0a2dd4e01d6a'\n'004cf556-f3dd-4c4a-9da0-cb2eb848ff0e'\n'004e5e03-f6b6-470b-96e2-911992c8ffb4'\n'00505b61-f978-44ee-92e8-c082c4482ac0'\n'0050f3a5-e24d-45d7-9ce1-f046a54adb96'\n'0051069d-cdc3-467b-9034-31f5e0eeb005'\n'0051c2e3-a110-4460-9296-9d9c9df82473'\n'0057c657-ac2f-4141-881c-3593859ef092'\n'0057dca9-9c70-4708-9697-909e5711a7f0'\n'005b6d88-4f1e-4ebd-8425-25e7236b5838'\n'005f3676-e3dd-416a-af7b-696067815dfa'\n'00651c0c-8687-4431-935b-8f2bfed1f429'\n'00656c12-2000-4cb7-97b0-6d51bafb5db2'\n'0065b17a-f2be-478b-b323-f3bb3bed4341'\n'006eac45-1c31-45fb-99de-30a52623082c'\n'007153b7-e0b9-41dd-a0a8-30901524ad20'\n'0072f5ac-ec83-4183-8757-47a7e26a8d86'\n'00743e1b-a98d-4026-9bdf-50cc52cd168e'\n'0075950a-3452-49a7-a1d7-7fb71b984696'\n'00778d9b-f669-4f39-b4d4-493ab085a536'\n'007ecee3-1492-4cb9-9a53-82d951ea2f01'\n'007edd43-d3d9-4f63-afee-8e5a95903ed6'\n'00802ec7-1ff4-4432-8cad-8a2db176f2bd'\n'00822a9c-dfd5-4ecf-b1fd-a445c450e7e7'\n'008971aa-a279-40eb-998d-a2ca2a26e7a4'\n'008e79fa-7265-404f-ab62-48f59d0e0f4c'\n'00909645-804d-4b63-a66f-283832684bf9'\n'009983f0-6187-4b99-9240-2299566529e2'\n'00a9de30-4258-4863-a7f9-e9788bc29b8f'\n'00ba0112-a5da-4264-9b86-82bf21bba65a'\n'00c20f4b-3dba-47cd-8210-73bfc64a5591'\n'00c6952d-223f-4661-a325-a98912335d81'\n'00cbc9d7-ce7c-46e8-87fd-774fcd1ad03e'\n'00d0afb7-e919-4b16-86d4-4ca059c7af09'\n'00d3626b-3696-49ae-97d2-165f56187953'\n'00db953c-7f4a-4de3-8772-42d7048c1ab6'\n'00df85af-2836-4229-a654-876cf2a1767e'\n'00e18892-bbf4-4dfb-b231-9d76b7299bee'\n'00e1b8d6-84f5-4b79-a5a7-ce7f8fe13773'\n'00e9c22e-949c-43c2-aed2-2e5a27dfc4bb'\n'00ec51da-dae3-4624-960b-e0cc9a911718'\n'00ee875c-37ea-47e9-9736-be92dd7353ca'\n'00f12281-0861-42c1-8053-702c7b6966e1'\n'00f1ff7a-6c24-44ae-9d47-d78533773a93'\n'00f4f052-a244-429e-b091-08f88d1f4d09'\n'00f7e783-ebd4-46d2-8bd1-c4ab87199426'\n'00f9a90c-60a6-4183-814f-e50722fd2c2d'\n'00fde10f-74b9-4eaa-a6e4-7abe055d16c4'\n'00fff8e8-082a-4c71-a29d-ec0db786cd6b'\n'01011989-1913-405b-a52f-80220df7876d'\n'0103912a-8a01-45e9-83ec-146cd09f3164'\n'010f8360-a018-4620-9de2-33a7893129af'\n'0113dc17-2d90-4541-89cd-f209b30405f2'\n'0114836e-3741-4224-abb1-703e87f330a7'\n'01156105-b7fa-44b9-86c9-27909a81d63a'\n'011df06d-650c-40e7-bd56-d2f305c1bff9'\n'011e46e4-00bc-4fb3-be3b-d31e22e880f2'\n'0125850a-5d2f-46d2-9873-0066edcfe334'\n'012ea03b-8472-4adc-abf5-6352a2e9c04d'\n'012fbbca-6dc5-4c37-b266-ac2782ca4975'\n'01337282-fb38-45ea-a4ba-d046fa7f79f3'\n'0136d669-a167-44d6-8c65-dbcbc4f71e5b'\n'0138b557-850c-43a9-a5d6-7c7e96d096e1'\n'0139bb4f-9f2b-420c-b5ea-34db9a5d0d65'\n'0139def7-9348-42b8-8767-0edcb1d81a1e'\n'01486dea-9406-4fb9-a080-2ce6c8889d61'\n'014ce464-ac95-43ad-a614-5f017f8656ed'\n'015e2c22-7766-4d19-bde1-33f6a22824ba'\n'01609391-dfb8-42e7-9806-6b2fb7a23e07'\n'016144d3-14da-4f27-a62a-03f7c2b0a9df'\n'0161a423-ba7f-405d-b129-273fadc00911'\n'01620fe7-3c4a-4b71-b45d-a3805eeaf509'\n'01652e7e-9400-4e7c-84bf-86e67f33246f'\n'016837dd-3b5f-4fed-a555-a05da5efbe1f'\n'016d3736-a9d0-474c-b62a-3e90ec42eefb'\n'016fc79d-5ee9-46b7-a84a-6e869cf4960b'\n'01705743-de45-4cef-893f-3856b5cbb662'\n'0174c824-3ade-474a-ae73-04963649b692'\n'01762b10-7e89-4cf6-a227-143eab3943d8'\n'017a7810-a518-41bd-b012-7464fad522b5'\n'017dca0b-be33-4eba-90de-f0c2fce9f098'\n'0182c197-ee0f-45e8-a001-4d7d7c9795a3'\n'018481a6-b64b-49e5-9824-599dcabf2135'\n'0186f113-1650-4e47-8de0-70cee5863d66'\n'018acc46-9b3a-4f14-b4c0-5929776ace07'\n'018c8a27-2b08-4705-a8aa-b0c13ceb89ad'\n'018d455b-a485-499f-858d-b2f09c0dc75f'\n'018e1f62-069b-48e1-b440-f6eacaa54520'\n'0190e8ab-7af3-4baa-a959-9099350c0ae8'\n'0193ab07-d62b-4660-9f26-5e890dbe7c46'\n'019470f5-b5ac-4f0f-9a88-dc0e2b0af7a3'\n'0194c7f2-1f87-449c-9c77-2f1ce6009e18'\n'0195f974-1f43-41a6-9acc-42896477ab61'\n'01999dd2-f622-4a97-b09b-83f5ed7523da'\n'019d002f-2ba5-47c7-9d1e-0421d065e23f'\n'019d3222-db52-4cd7-bee6-d335eabab91a'\n'01a73b68-64ab-486e-a9a5-a9c9a6f3f6fb'\n'01ad3790-e684-4829-950f-01368856c94e'\n'01b1a490-2442-48ac-ab23-4563464468af'\n'01b35227-af96-4f9b-894b-391bd1ad1e4b'\n'01b7bb5e-0c0f-4263-943c-ff9a249847ee'\n'01b81868-133a-4b56-b386-ec0e4fcc57d0'\n'01bc3228-7fa3-460e-947c-3a365c7d533c'\n'01c10e0e-9255-42a5-a649-9c62f74ecf86'\n'01c8c6e4-9db3-4085-a4f6-f191bb014e70'\n'01c95d67-a86e-4784-8473-45162188f46c'\n'01cf8536-1488-4ee9-82e5-19ac82183b06'\n'01d34fad-ffb3-467b-b159-41c82158f2e2'\n'01d5fddc-8e3b-4482-a515-e69292066dc3'\n'01d60152-b41c-4b57-8ae3-bf7bf6dcfdd8'\n'01d9f4f1-12f2-409b-af76-8cee0ee95701'\n'01db68d7-532e-46c9-94c3-2d4dd4cf4753'\n'01e85eed-aa39-4a61-b720-a59b84991428'\n'01e9eea8-0e61-4aeb-ad57-e89135510ead'\n'01ecb4e4-bce9-4309-ac1f-4787c0be22c7'\n'01f0f6e2-574e-424f-98a1-6b823752932a'\n'01f39cb1-66c7-41c9-96c4-0fa4baa98851'\n'01f53e53-8ffc-4b74-a6d4-808e242b44b7'\n'01faba06-9dba-49f7-92cb-ceaa16bdab2c'\n'01ff2bb4-67b6-43ae-8506-53282bf27a6a'\n'01ffe76a-9d66-4733-b17f-bf922a54fb21'\n'0202aaca-5ec1-4917-a75a-bff3520b72da'\n'02062667-85cc-44c3-a52d-4f884bd1c95c'\n'0209240a-0dba-494d-a0b5-bff00c00d0ef'\n'0219357c-527c-4a54-a00c-9573d9ddaf47'\n'021a84a4-6a5e-40d1-b5d2-ede15ab4d051'\n'021e5ca1-3702-4379-81b0-60ded7294421'\n'021e7a6a-fde4-44cf-bbda-8b096a2970c7'\n'0227083a-cdf0-4dcd-9939-72994feb6be8'\n'022780fb-57e6-4ffe-9212-0c7daeb13bed'\n'022a03f3-2616-4ce3-865b-da113b76d188'\n'022b63c5-5bb9-4fda-8489-9a41470cb07d'\n'022e5945-f13d-4270-b147-a4d33a3d4a5f'\n'02387350-2d78-427f-9f78-b117fde1d9e7'\n'023b2795-12c2-4f1f-bb52-3e3ecd26f1a7'\n'023c3c0e-9709-42bf-a778-12c929f206cc'\n'023e4079-f8e3-4b27-abd2-93047825fd7d'\n'0243f7ae-79d1-42e1-b60c-464d6cbddfb6'\n'0245cef8-4d64-43ab-b37f-42f6c04c9cd0'\n'0246e8d3-9ff4-48d6-bf5d-f602b5d38319'\n'02486797-e82a-4007-ac80-410c03a31c6e'\n'024d24a6-fa03-4953-b50d-b0ef42d222c2'\n'024d4a58-ef11-4f2b-925d-657809d60ff6'\n'02513e74-2209-4083-a8b5-a16e54fea22c'\n'02546ef5-0e70-4c45-9582-8463dafcec86'\n'025533c9-5fdc-4fd0-a6a6-9935ad824c32'\n'0255cea4-8bc0-42fc-a0ce-a102af1eaac3'\n'0263eff8-963d-4586-a3c0-8b316c5d21d9'\n'0266bae9-30f1-43eb-8c9e-25b6d250aa1a'\n'0268c537-5cf9-4c2b-a1fe-ff64944b1796'\n'02690e0c-f79c-4746-82e5-5247c89c1f06'\n'026b1ec0-027a-47a9-b37e-cd982b695240'\n'0274c1a7-8069-41bd-88f8-5e8d9e12be31'\n'0275628e-1bb7-4f54-a1ea-160cb2b38feb'\n'0282bd7b-67be-4661-90ea-99fb7bbd182f'\n'02835e9e-2bf7-400b-9a33-779563f1e930'\n'0285b903-f5be-4a53-842a-c42282701d50'\n'028710fa-9b38-497e-b266-6e33afe367bb'\n'02897a1d-af9b-46e3-aec2-cf8f9ef11c30'\n'0289c86a-1519-47a1-9c7f-ab0c626d8995'\n'0289f22c-aab5-49dd-a8dd-9cfbe9f56d51'\n'028c66e1-5d2b-45fb-93d1-0a44f808de34'\n'02924296-383d-46bc-adc5-6531f741ea7c'\n'029529bb-cea1-43ec-962f-636aa443c403'\n'0295665e-82a7-464a-a496-0124625392d6'\n'029758e7-b211-41c0-841b-bcfbdaa0b29d'\n'029b4083-4edd-4cba-a77c-3a2caa76c1fe'\n'029b869c-e14d-4951-8962-c06e9e60aa89'\n'029e2603-322a-4f62-bc1c-f3da75cd2265'\n'02a453da-76c8-4ba1-91d4-7c56fbf0eb60'\n'02a4c14b-aa90-40d9-8529-a0878b09cc0c'\n'02a4e852-c4d5-482b-a521-51a4424e3f70'\n'02ae9a3b-126c-41ba-a529-d28deb7d3337'\n'02bab660-283a-4a3e-b30b-939bbae5a969'\n'02bc5e0b-b999-4403-8eeb-9e509cd00171'\n'02bc8ca8-4bc5-4bbc-b36f-7d58dc2756f7'\n'02c02657-0bd4-4fa2-b339-020e3412050c'\n'02c2200a-4b11-4970-af37-2e5fa693cd1a'\n'02c5023a-ad16-4cf3-9003-8fd77a84ddb2'\n'02c52c70-df0c-4349-984a-8caca4cd8eb8'\n'02c81990-3038-437a-be9f-bb76d3e7693f'\n'02cae6ee-02f2-44b2-bd64-c7ca51cb7671'\n'02cbb2df-9830-4fe2-b7f5-03ba8a4e34b2'\n'02d04a43-bde7-4952-938b-37a5562d69a4'\n'02d70e51-07db-43c3-88b4-1550cbc7855e'\n'02d9b441-2d47-494b-8870-8d3382c17384'\n'02e45508-e284-4c0d-b3d1-2bc402fff1a7'\n'02ec8bce-7ef9-45bf-b3a9-58f7823f25bb'\n'02ed331c-90ba-49dd-8b51-39a5fe448578'\n'02eeeac2-3708-47ce-b2aa-dd7496bb5152'\n'02f4a445-bcda-46a2-acf9-38312df92450'\n'02f5f302-aa54-4764-a30e-5d7522b469ec'\n'02f681c5-add3-48b6-9a37-0d9c2a6a7f9b'\n'02f7a562-0746-4b4c-8d83-4128c873029c'\n'02fea5e6-5b16-47c2-82ce-94e288ff20e3'\n'0300e6f6-c6f9-4ef7-9d6d-dc7ec5f97e5a'\n'03058382-7125-4e15-b58a-76fb220f158b'\n'03093663-1b50-4087-a861-86cce1fdd9eb'\n'0309ccc0-02a4-4fa9-b7fd-44e13269bc8f'\n'03129265-0e01-4ae3-b482-cf399a0b90f8'\n'03153931-6b5a-4b98-abed-642cb3ba953c'\n'03186c6d-3e58-4538-9b9a-9bd96ee70218'\n'032c487e-9eb7-4f6c-8689-e6dacbc13727'\n'032f5da3-da09-4e3b-8ec0-68bcc4f3f9f6'\n'0332e840-aeda-4ba1-8c6c-165c85c6da7f'\n'033ddd98-b155-4a2b-bfeb-730cdcf07b07'\n'0340b93d-ab1c-44b8-9ccb-8341bbf8022f'\n'03412397-8ac4-4685-974d-3172f16acce9'\n'03461b35-29f1-4978-a1f4-b213ff413fed'\n'0346c906-7f5a-440a-9c13-6d254237335b'\n'034af8da-8c17-4bfb-ac8b-3b2df079639a'\n'03529fdc-ba2e-4f81-9d0c-88808ae0b045'\n'035731c9-39e9-41e7-a239-da7af53e6f94'\n'035c0ae3-5c88-4498-a7fe-d095f7d83de3'\n'035c3ff5-ccde-4434-94f7-9d4b64b19617'\n'035d07a1-97f6-4d29-89f4-2a3951d2084d'\n'0361cd82-9167-4276-b16c-caa5f1e1c249'\n'03665d3b-fbe0-496a-99fc-c8d18b379214'\n'0366ca92-01fc-42e7-b680-03d9d1374491'\n'0366dca6-a897-4742-a479-aec364f9488b'\n'0366e6a7-fefa-4187-a556-cc26609d9c92'\n'03697894-9bd1-46a1-84e7-3da027dd0aff'\n'0369f043-8568-4f29-9800-d9b0f667f33d'\n'036d0a25-ffee-4b07-a57b-96ff8dd23f4d'\n'036d27dd-3835-4e33-9c08-cf52ee82afc3'\n'03776833-19ad-4c2c-8b0b-75bfb49a183f'\n'037c249b-9e28-45f8-9270-05c11f3cf9d9'\n'037e8c82-798e-4785-8c9e-a98a38bd76be'\n'037ef632-0877-49a0-9ee3-0c32878c1f61'\n'038264ee-7ca0-41b4-8f27-55a53896ee87'\n'03855439-0816-4ffc-9100-aa34b74bc43b'\n'0385a03d-03ec-4e51-a05c-ef6636eac88d'\n'03860206-6eb7-4020-beb6-fd9a748de04a'\n'038a7de7-7704-4266-b562-5e6d6928de7d'\n'038b20ff-28c3-4bf3-85c9-beef360f1baa'\n'039284f5-1409-408f-a715-b95cbab4ec49'\n'03994b68-5abb-4f04-bf70-5558125c65e0'\n'039dca15-5d29-4cef-aad4-79d5b2de066a'\n'03a4625b-62c1-49ad-9ae2-a43d6f2332a6'\n'03a89ff8-7f5a-4b04-b143-771deee60255'\n'03abc36e-7824-4b9e-9677-e79d08656817'\n'03b29664-20a4-4f2c-82f6-d47a87506d07'\n'03b4e5f8-e73c-44b3-9a9e-c0492f8dcc0f'\n'03b64207-ca0c-4a82-b5ea-9435bb0d5470'\n'03ba7e12-ff2c-4349-a712-6fd2a0a7794c'\n'03bb5877-25d8-4172-a73c-6dba4dfda91e'\n'03bfd3cb-c0d4-481c-986c-b89ce1656732'\n'03c1f2b5-9ce6-479f-b540-2c7b1c060fd0'\n'03c2ea2c-c749-4f08-8ee0-6dfe1bcddef0'\n'03c3c363-76bd-4d36-9e82-0d9845fda7e2'\n'03cd5120-f976-434e-84c4-526f3d2db076'\n'03d3272d-5dad-49fa-9e21-c4e4366df738'\n'03d82692-a06b-4a1d-b14a-e79498696337'\n'03dac778-3739-42f7-861a-c4f32e054669'\n'03e20c1b-af33-40ed-aa44-6ba7264f412b'\n'03fb442d-ed22-4f6a-9a65-76ffe18380c3'\n'04067fc1-b841-4c5c-b1b3-1fa874867445'\n'04072ca9-0a7a-43a5-a57b-829e3525c001'\n'041541e7-637f-49ee-8210-90e0c85092e7'\n'041b148e-437c-4f1d-8d34-9e58760a4b11'\n'04235ebf-f64c-44cf-b604-1868b798b27c'\n'0426e0b0-389f-421f-a115-90f6eba81276'\n'0434f065-1e73-4df9-862c-1cbba7e37b02'\n'0443995b-f761-4514-a461-350f401715a1'\n'0443d786-9adc-4aa8-bb4d-2ffeb5b4a1d1'\n'0449e3b8-cd03-4535-8e1a-cef000a07270'\n'044ae40a-ebf2-46bc-9b51-66d1454887b8'\n'044b8806-634e-4d8d-a077-107658def160'\n'044f2583-60dc-4d38-94eb-d2c77d52b845'\n'04549cd3-b094-4c3d-af14-310178872bec'\n'045542d2-3492-4270-8392-060a1d4eeae7'\n'045aa3ff-f902-456c-a9f3-1e9b36bbd08c'\n'0461cae8-c4ac-4411-8267-64bd2e23d5dc'\n'046a2746-ef98-4576-9ff2-511a052c1aca'\n'0475b6cf-8ca1-4d8f-8b29-d4d17f4574b7'\n'0475bfa0-36ee-44cc-a2bf-63821bf28552'\n'04768fa3-aa7d-47a0-be14-ba21b8b0c263'\n'048142ef-62f3-425f-b4d7-bf7c61219135'\n'0487436d-1d79-4471-8207-7efce42489c7'\n'048b1d1a-1ecb-4aca-b1ea-0c3cda5dd85c'\n'048e7290-5886-46e0-b276-992e73edeb4e'\n'04910e5c-e613-4843-b19d-6a676e46ea90'\n'04915a27-bedd-4ecb-ad0b-b7a38c90fb0a'\n'04945d00-aa04-4176-b40e-5022a83e1579'\n'049a46cd-15c2-45b8-8f73-25221c9acebe'\n'049cb9be-c25f-4469-8721-982645acb73b'\n'049e7f98-849c-436f-98b6-fb24e2fbc4b5'\n'04a0d453-5988-4d8e-95cf-aa989b228a61'\n'04a20b0c-286d-4cae-98d3-701962f098a2'\n'04a2d21a-c9b0-4c88-bc54-ee9f65b4d1b0'\n'04a5ab2d-5a18-4dfb-a7a6-e605f0c64692'\n'04ac59fc-2d32-461a-9882-7e6616900aea'\n'04ae08e6-0a38-43ae-902a-34acc8b8f98d'\n'04afdc09-9f4f-4401-9351-25f6fce7a1b5'\n'04afec81-b376-44cd-9d4f-70060ab6b2c6'\n'04b0ff01-6cc0-4a4a-865f-e4a672d3d179'\n'04b160db-c1d4-4f5e-806e-82b099a0f649'\n'04b1b98a-d151-41cc-b5f2-0050139d5ae9'\n'04b21d75-e0a7-4089-88c0-7b6b1771d6c3'\n'04b2e81c-a3b6-4a37-84b4-558b2bd13c77'\n'04b95d6b-852d-428b-ac37-c83d0f3399f6'\n'04ba3508-4bb8-4a7f-92a4-4f16743514f5'\n'04bdcfca-66ce-4399-b575-e215b694d3dd'\n'04be7c6e-e796-471e-9f9f-4e9ba69e70e8'\n'04c37019-7660-4501-b031-9c17d7ca2d60'\n'04c57d84-19e5-41ef-9761-539fdf6cf608'\n'04c62e68-a59f-46d5-b3e4-b311f837ed9d'\n'04c779aa-0e3d-4062-a473-7cc1b6cd4459'\n'04c7bb4c-52b3-4338-a413-604ed1047ac4'\n'04ce226b-96ed-4358-9d47-335d143a6e2c'\n'04d3cf6a-6e35-4fc3-8d02-d3b39432ea06'\n'04df4b3d-8841-4e2f-8536-d1d9cefd0572'\n'04df5da5-85ab-47c2-af7e-778f3db07049'\n'04e1cf76-ea0d-49a3-95e5-e52e46135176'\n'04e333b2-9d7f-4898-97de-40ad9b379d64'\n'04ea7ec1-d270-4d01-a8de-6a3b6ddf2892'\n'04ec7abb-03a7-4f7e-acb5-2be559b5e466'\n'04ee8779-7ccd-4bc6-b4e3-38e519e5bb6b'\n'04f277f7-3d65-43ca-b172-e3fd701418cc'\n'04f40c2a-fd9b-46e5-8d7c-57e442234874'\n'04f4634a-3367-4645-b2af-9719b5679f8b'\n'04f54505-160a-48a7-bb7b-4e75650457b7'\n'04fa0c5a-7cc7-45af-882d-0329fe7045e0'\n'04fdface-1e2f-4c31-80e6-1e6483d29b9b'\n'04fe66ee-becf-41b6-9110-3b70f835e06f'\n'050635be-202d-4799-8b11-1fa7a30888a7'\n'050c9aa7-1a3c-4198-bd6e-b71e87f6421b'\n'050f7a2d-5feb-492a-a549-47db328ca3ea'\n'0513d54e-45c5-48fd-9365-ea93037142f2'\n'051b98f9-123f-48fa-977c-22015a3ebbff'\n'052168a0-6ae4-4b8f-847c-358d78c3e891'\n'05232be9-fdb4-4644-8d0b-793d4e4407ae'\n'052350f3-733c-47e3-a0bb-0cf78886eda8'\n'0523645a-ce00-432a-9d6b-777508c83a1a'\n'0528d484-9e37-4140-a43e-894fa1ae987a'\n'052b8ca3-3f5a-4d57-8fe6-ee55275baa48'\n'0532172a-42b6-4bba-9e00-c7647866bc32'\n'053288fc-7634-4b0e-83cb-7d76f072192d'\n'0535ed57-a197-4e69-ae4a-102a6ecfe249'\n'05360efd-326a-4afa-b28a-d5916dbb94a3'\n'053962ee-c1e2-4a4d-b21a-de845553d5ca'\n'053d9118-b5ed-47a3-8319-0f145f244a4c'\n'053e8f71-fdf0-41b1-ae40-15db891a698e'\n'05488e9b-b918-474a-8ff8-47076c95e983'\n'0548df31-6858-4d21-8878-8d5638aa5764'\n'0549628e-54d3-4086-b52a-1df268d87c17'\n'054be902-2bc2-47b6-a641-29fbe99c16a5'\n'054cf666-898f-497c-a561-c6d8f2fddf2c'\n'05563bf5-b7dc-426d-a914-8e6ea0c27899'\n'05575c51-5215-4fc3-b455-9ad4b56d4f86'\n'0557cbba-861c-4f20-931e-2f33e8c2b073'\n'055e5328-187a-498e-8893-00cb04821723'\n'0560ca13-1058-4a8d-8629-2b720250b8ca'\n'05694a09-1972-45b5-8a67-d1541f00f3db'\n'056b3777-54bc-4be1-81e6-ccaead6cf064'\n'056bbed9-0c27-48ad-9072-b532d97322cd'\n'056d591f-d96d-4700-967f-434d0ed4cbac'\n'05726490-fcfe-4bd3-ae8e-6b5dc39e1bfa'\n'05746e8c-0f15-41d2-a4c1-4ddfe851e397'\n'05749ae4-bdea-4cd1-b40f-af7643fcc157'\n'0578020e-9bae-46ff-aaef-f64b9330e801'\n'0578e1ff-45d7-4fe9-a28a-f4b669c123ef'\n'05791146-2450-43bf-9ed7-db6fb507142a'\n'057f433b-a8de-425e-843e-fb6d15276612'\n'057f7dd4-6e33-4f6e-828a-6a3d14abf2cc'\n'058bacc8-5d39-43b8-91d7-c9b8a8bf5d0a'\n'058c942e-6fe4-4e67-a047-3cecf68167f6'\n'0592fdcc-d1b8-404f-9f23-725b50760949'\n'05936245-fb6d-4a1b-864e-e39d1dc557ab'\n'0598145c-77b0-462c-b9c6-7bb3eabf26cf'\n'059cfcba-89cc-4f3a-8665-3831ab242fab'\n'05a38ac7-262d-4136-9f67-7ae62b37334b'\n'05a391c8-b0d1-4a80-af4c-85b1a63785ec'\n'05a68ca6-986e-400b-acf3-ef06f59ab86b'\n'05ab3786-2df1-45eb-981a-a9ad882442c5'\n'05ad05ff-a1f6-40e0-a441-d9a7ed8268ca'\n'05adc967-9d21-4548-83e9-3df4f7d05cfd'\n'05b16864-bfd7-410e-a82f-c726609d0976'\n'05b6e9fd-c047-486d-a063-3df46ee9507b'\n'05c08a4a-e688-4b49-97e7-6194f7e0a68a'\n'05c13909-f845-49bb-860c-b03523352a77'\n'05c40154-5e23-4fb2-b48f-1fe5d393527f'\n'05c4a84b-90e5-4e19-9c62-decf47b839f5'\n'05d3382d-7b0e-4d7c-8bbe-17e0329022d7'\n'05d7ea55-ac46-481e-a28a-f73d008fd061'\n'05e15184-37d6-4889-8254-3b0a3a6bbea6'\n'05e706da-f181-48a6-a802-6b997839a3db'\n'05eb1850-9609-4d00-ad31-603ffad3af79'\n'05ef68b8-d89c-406b-be87-4bbac4242b75'\n'05f06090-2b19-48df-aa89-db729161af09'\n'05f12591-24ea-4a3b-8c0d-584803f61c62'\n'05f24aa0-bedd-4d21-a21c-ec2306d8dbc3'\n'05f52020-6bc7-4128-a9b3-1bc5a0631f49'\n'05f7f64a-1a08-4758-bacb-854e72f798f7'\n'05fcf6ec-bd96-4c5b-99f9-94561933241b'\n'0606d5db-153d-4fc5-bb55-a3fe512fa8d4'\n'0607cd43-6cb9-40e0-bab2-4c5a4bfcd4f9'\n'060b0040-d2dc-49f5-91ae-e24bdd0ef807'\n'060e6959-0f31-4da9-a31a-e09ba3cb8066'\n'060e9025-f833-4b7f-8a66-4b1a7e28d405'\n",
  "history_begin_time" : 1648762564747,
  "history_end_time" : 1648762645872,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "G9qSI6Is94fa",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format_eval.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1648695929304,
  "history_end_time" : 1648762557649,
  "history_notes" : "why it is so slower than modis",
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "ARsXJH3HXUq9",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom snowcast_utils import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "Running",
  "history_begin_time" : 1648186846040,
  "history_end_time" : 1648699100557,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Stopped"
},{
  "history_id" : "pse6t0AEl140",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nimport snowcast_utils\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/snowcast_provided/submission_format.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "today date = 2022-03-25\n/Users/joe\n/Users/joe\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/pse6t0AEl140/data_gee_sentinel1_real_time.py\", line 26, in <module>\n    start_date = test_start_date\nNameError: name 'test_start_date' is not defined\n",
  "history_begin_time" : 1648186830652,
  "history_end_time" : 1648186834505,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "YXo1265HhhNu",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nimport snowcast_utils\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/sn owcast_provided/submission_format.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "today date = 2022-03-25\n/Users/joe\n/Users/joe\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/YXo1265HhhNu/data_gee_sentinel1_real_time.py\", line 21, in <module>\n    submission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/joe/Documents/GitHub/SnowCast/data/sn owcast_provided/submission_format.csv'\n",
  "history_begin_time" : 1648186679583,
  "history_end_time" : 1648186682885,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "fQ1CjzuBnVQh",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nimport snowcast_utils\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nsubmission_format_file = f\"{github_dir}/data/sn owcast_provided/submission_format.csv\"\nsubmission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n\nall_cell_coords_file = f\"{github_dir}/data/snowcast_provided/all_cell_coords_file.csv\"\nall_cell_coords_df = pd.read_csv(all_cell_coords_file, header=0, index_col=0)\n\nstart_date = test_start_date\nend_date = test_end_date\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    #print(\"exists skipping..\")\n    #exit()\n    os.remove(final_csv_file)\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor current_cell_id in submission_format_df.index:\n  \n    try:\n  \t\n      #print(\"collecting \", current_cell_id)\n      \n      longitude = all_cell_coords_df['lon'][current_cell_id]\n      latitude = all_cell_coords_df['lat'][current_cell_id]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "today date = 2022-03-25\n/Users/joe\n/Users/joe\nTraceback (most recent call last):\n  File \"/Users/joe/gw-workspace/fQ1CjzuBnVQh/data_gee_sentinel1_real_time.py\", line 21, in <module>\n    submission_format_df = pd.read_csv(submission_format_file, header=0, index_col=0)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/util/_decorators.py\", line 311, in wrapper\n    return func(*args, **kwargs)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 586, in read_csv\n    return _read(filepath_or_buffer, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 482, in _read\n    parser = TextFileReader(filepath_or_buffer, **kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 811, in __init__\n    self._engine = self._make_engine(self.engine)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/readers.py\", line 1040, in _make_engine\n    return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 51, in __init__\n    self._open_handles(src, kwds)\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py\", line 222, in _open_handles\n    self.handles = get_handle(\n  File \"/Users/l21-n02609-comm/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py\", line 702, in get_handle\n    handle = open(\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/joe/Documents/GitHub/SnowCast/data/sn owcast_provided/submission_format.csv'\n",
  "history_begin_time" : 1648186549848,
  "history_end_time" : 1648186553698,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "1fEsMFtwg8HG",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\nfrom datetime import date\n\ntoday = date.today()\n\n# dd/mm/YY\nd1 = today.strftime(\"%Y-%m-%d\")\nprint(\"d1 =\", d1)\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-01-01'\nend_date = d1\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "d1 = 2022-03-20\n/Users/joe\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-01-01_2022-03-20.csv\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f191fe19-0e81-4bc9-9980-29738a05a49b\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  0a54de9c-d804-4681-9f7f-9f770a0f6d2e\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  30641173-db10-4320-ab1e-c46e765a9011\ncollecting  30ab5128-9a8f-4446-b781-faf8bafb677f\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  4bb8fe22-653c-4611-a3d8-de5b2c62d13d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f11515e9-f2a0-4f8c-9f2d-12b9e2dc8569\ncollecting  cc66f524-dd2b-4d3f-bf96-4941edca2879\ncollecting  09288a61-d120-4cee-ac46-5a275a8f005c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  70bfdc00-dbd2-4c44-8039-04a547f91f76\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  9023330c-2766-4585-b6fe-63593c519e03\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  ddc760c7-dc6e-4fd4-ac1a-987ba3f79748\ncollecting  690ae8d4-c0d0-4dad-a7c4-67f3df07cc78\ncollecting  dbf421d4-0295-4a9f-9e20-88ac299360b1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  5ec8a57d-8d5f-4331-b1fb-9d766f42991a\ncollecting  403090bc-fc9e-44fb-921b-f7eea63e9740\ncollecting  232ef8b4-938f-42d7-a6e4-647d5280edd2\ncollecting  cc8b7ef5-1c86-4bd2-8cb9-969c7df1884e\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  39dd8dce-b4a1-4db5-bc31-fba72181cf5e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  49b01e43-f719-450f-b7c6-556b08e9ef4d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  00c4db22-a423-41a4-ada6-a8b1b04153a4\ncollecting  ec0952b6-f119-4f40-bf47-343d71245ddc\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  b5c7343d-a4a9-4da9-aee3-36539a545af6\ncollecting  17da8ab4-6dd8-481e-a025-7574765ef9b1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d563ff8c-31c3-44a9-8fd3-2f8bc68b21b4\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  cbe04952-a2ae-4525-98c5-a644c9a5ddc5\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  6e96bf06-cbc5-45b5-a36b-e37864226099\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c7e3f62c-a812-4342-8e4c-3a6a5dd96255\ncollecting  a8e91cfa-724a-4114-a9d4-291785ff31f8\ncollecting  2dde4be2-b6fd-47e8-b53d-88b59d74fde1\ncollecting  b2e9cb6b-b45a-4cab-8333-247cb4c0b51b\ncollecting  46f21569-8ecf-4c46-b65b-d80fa83a20d5\ncollecting  643c05b6-03bc-4024-8000-2228f4b5a7ad\ncollecting  fb078c7e-4975-4c7f-8f42-180386ac8c3c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  dba335b6-9d97-4a89-9ff3-888a8a45575f\ncollecting  057fb61e-ce45-4423-9ef2-b52d8c1237e9\ncollecting  50f7b567-4066-4437-a335-71aff4c94a2c\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  7acd0d51-ff30-42a3-9338-590432bd0e43\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  c340219b-307b-412b-9368-b50639bd372d\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b99b0ffd-6fa9-482c-8511-f7b87e705d35\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  0f46ad2b-4b1f-4232-8e46-be7122d53b86\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  aa0d6340-c817-48c9-8727-8d3457606381\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f25cdbec-2f14-42c5-a6ef-a60f3a90caff\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  eb1d889a-c427-49e1-95a1-fa6577002c9b\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  09f879b9-4378-479e-949b-cdc3bec8f59f\ncollecting  e925f8e6-6eee-4fa7-9034-41eb9917df5e\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  12bde9ee-0e0a-49ac-ab19-b410adb61b3c\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  548ff935-a421-4f4c-8eef-0bb19ed6c5f8\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  14c19b34-6359-4d3f-865e-0b9852a0e958\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  0efc68ba-5786-4c54-8028-e6f92efa6757\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  e9759e79-461c-425e-af17-0a88be1a441f\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  78ccacb3-4eb9-4d95-b244-f3a709e39fd1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  69d48a07-3007-4b3f-bec6-c097509a56d9\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  03428fd9-01cc-4a57-ab6e-f4e8f265c094\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  6de38d5b-ccce-4ff2-90ed-1c7035491518\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6662f7d0-4afc-4fed-b930-e0408ee10bc7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  a4339b9a-871e-44c2-9bb4-bcbfe9d590d7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  be57eab6-a495-427f-8a36-9d118c03e7d8\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  0623939d-b33f-41cb-ade2-3c4a776de49a\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  d10a90c7-3db0-43c6-b04b-fe8b4c3f206e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  65894307-d4eb-4b2e-a0fa-bd83a102dc30\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  75ced1b1-1fc2-42d3-a4f8-44aa1978c8ef\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f3e36cea-5eb2-495a-87f4-947395f325b0\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  552a5638-8fd2-46de-8569-5f5512102264\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  59ac7ee6-8fa8-4888-bb77-2be6781dddaf\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  dc237027-8dae-4da7-91ec-501701ecd943\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  a0c947fb-f00e-4331-ad3a-402908e08b57\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  408b4482-ff63-4a1f-9cf9-ca820cd51b39\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  c7f13d88-b4af-4484-9547-52197f778c08\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  4ddee9a9-feaf-4daa-9100-0d4188f7b827\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  0adbba56-85f8-49e0-9b11-000622238d91\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  57e18a9f-8327-4d6c-b2b4-c2b337341e86\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  678f1920-0bc3-4687-af71-35d61030b1a0\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  d17b55c5-7848-4b79-a735-983aec995c52\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  87d6c782-c43b-473f-84da-d2a519d8f1fc\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  253c2443-b820-4c13-bf6d-ba7a5426f52d\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  5c4dff48-4afa-4922-949e-f64db583f392\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  6c94136d-5040-4c09-b1fd-c02dbff210e6\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  3527e00e-1aee-46ce-ad9d-8122cff4c202\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  c64f2bf3-90f0-4a96-b3a8-9f8db46dce92\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  94d9d95f-32b2-470d-95f8-dbd843d6def3\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  35aecf7e-5f0b-4533-995c-3cb4165d44b5\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  630bae26-a6cc-4a36-bbe5-40dc15b38dea\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0bd47ec1-0e3c-43bf-a491-534d06beb19f\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b98777af-0c7c-44f7-9c03-85d6d412856c\ncollecting  7610b45e-5652-4604-ab5b-99344f71616b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  35eee1cd-f92a-4ba5-af03-fb5347490f41\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  85f0acd8-4008-472d-bf40-e35e0e2934e4\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  a6a9febf-ea16-4223-83d4-8e459e2af85a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  ce9da6bf-cf6e-4edb-b579-5a0853b2ed17\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  de9c541b-ce5e-4cc6-9ddd-03f85dc5b3d5\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  003fdfbd-c766-4312-b029-bd4cfba6ebef\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  40c4f8cd-b0ca-4d37-b91e-b69e5dff7f9a\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  0c31f316-6718-4a43-a9f1-ed552e45bd0f\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  0d9f0708-5e8d-4eb8-b946-6441ef955516\ncollecting  9e5bc091-13c7-46ec-8c17-8e315b7e535c\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8e7f826f-8dc9-490a-9282-98d899a07cc7\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  9ea23099-dd30-4b26-9de7-5d42d5dae87b\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  eab40c22-0c15-4291-a6ce-e085a7f0f1e4\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  7f215a89-2a17-42f0-a2fb-f18fbc888cef\ncollecting  a5366d95-7b9d-4b1b-a16f-99e56fab08f5\ncollecting  7a266524-6e76-4d06-963f-6f977e356574\ncollecting  fde3221a-9ce3-45a9-857f-bd196b07aa05\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  cdb446bc-e801-404f-9911-9ba5c687f6af\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9448e70e-32ff-4c47-b6e7-ccb1df91743b\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\n",
  "history_begin_time" : 1647829452020,
  "history_end_time" : 1647829778529,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "1uujmra4r1m",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-03-07'\nend_date = '2022-03-13'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "/Users/joe\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-03-07_2022-03-13.csv\nexists skipping..\n",
  "history_begin_time" : 1647826055514,
  "history_end_time" : 1647826061965,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "crxihg8pwb0",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-03-07'\nend_date = '2022-03-13'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1647225904731,
  "history_end_time" : 1647225904881,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "cbuOpces5Cr4",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-03-07'\nend_date = '2022-03-13'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "/Users/joe\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-03-07_2022-03-13.csv\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f191fe19-0e81-4bc9-9980-29738a05a49b\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  0a54de9c-d804-4681-9f7f-9f770a0f6d2e\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  30641173-db10-4320-ab1e-c46e765a9011\ncollecting  30ab5128-9a8f-4446-b781-faf8bafb677f\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  4bb8fe22-653c-4611-a3d8-de5b2c62d13d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f11515e9-f2a0-4f8c-9f2d-12b9e2dc8569\ncollecting  cc66f524-dd2b-4d3f-bf96-4941edca2879\ncollecting  09288a61-d120-4cee-ac46-5a275a8f005c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  70bfdc00-dbd2-4c44-8039-04a547f91f76\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  9023330c-2766-4585-b6fe-63593c519e03\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  ddc760c7-dc6e-4fd4-ac1a-987ba3f79748\ncollecting  690ae8d4-c0d0-4dad-a7c4-67f3df07cc78\ncollecting  dbf421d4-0295-4a9f-9e20-88ac299360b1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  5ec8a57d-8d5f-4331-b1fb-9d766f42991a\ncollecting  403090bc-fc9e-44fb-921b-f7eea63e9740\ncollecting  232ef8b4-938f-42d7-a6e4-647d5280edd2\ncollecting  cc8b7ef5-1c86-4bd2-8cb9-969c7df1884e\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  39dd8dce-b4a1-4db5-bc31-fba72181cf5e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  49b01e43-f719-450f-b7c6-556b08e9ef4d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  00c4db22-a423-41a4-ada6-a8b1b04153a4\ncollecting  ec0952b6-f119-4f40-bf47-343d71245ddc\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  b5c7343d-a4a9-4da9-aee3-36539a545af6\ncollecting  17da8ab4-6dd8-481e-a025-7574765ef9b1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d563ff8c-31c3-44a9-8fd3-2f8bc68b21b4\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  cbe04952-a2ae-4525-98c5-a644c9a5ddc5\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  6e96bf06-cbc5-45b5-a36b-e37864226099\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c7e3f62c-a812-4342-8e4c-3a6a5dd96255\ncollecting  a8e91cfa-724a-4114-a9d4-291785ff31f8\ncollecting  2dde4be2-b6fd-47e8-b53d-88b59d74fde1\ncollecting  b2e9cb6b-b45a-4cab-8333-247cb4c0b51b\ncollecting  46f21569-8ecf-4c46-b65b-d80fa83a20d5\ncollecting  643c05b6-03bc-4024-8000-2228f4b5a7ad\ncollecting  fb078c7e-4975-4c7f-8f42-180386ac8c3c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  dba335b6-9d97-4a89-9ff3-888a8a45575f\ncollecting  057fb61e-ce45-4423-9ef2-b52d8c1237e9\ncollecting  50f7b567-4066-4437-a335-71aff4c94a2c\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  7acd0d51-ff30-42a3-9338-590432bd0e43\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  c340219b-307b-412b-9368-b50639bd372d\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b99b0ffd-6fa9-482c-8511-f7b87e705d35\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  0f46ad2b-4b1f-4232-8e46-be7122d53b86\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  aa0d6340-c817-48c9-8727-8d3457606381\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f25cdbec-2f14-42c5-a6ef-a60f3a90caff\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  eb1d889a-c427-49e1-95a1-fa6577002c9b\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  09f879b9-4378-479e-949b-cdc3bec8f59f\ncollecting  e925f8e6-6eee-4fa7-9034-41eb9917df5e\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  12bde9ee-0e0a-49ac-ab19-b410adb61b3c\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  548ff935-a421-4f4c-8eef-0bb19ed6c5f8\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  14c19b34-6359-4d3f-865e-0b9852a0e958\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  0efc68ba-5786-4c54-8028-e6f92efa6757\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  e9759e79-461c-425e-af17-0a88be1a441f\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  78ccacb3-4eb9-4d95-b244-f3a709e39fd1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  69d48a07-3007-4b3f-bec6-c097509a56d9\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  03428fd9-01cc-4a57-ab6e-f4e8f265c094\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  6de38d5b-ccce-4ff2-90ed-1c7035491518\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6662f7d0-4afc-4fed-b930-e0408ee10bc7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  a4339b9a-871e-44c2-9bb4-bcbfe9d590d7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  be57eab6-a495-427f-8a36-9d118c03e7d8\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  0623939d-b33f-41cb-ade2-3c4a776de49a\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  d10a90c7-3db0-43c6-b04b-fe8b4c3f206e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  65894307-d4eb-4b2e-a0fa-bd83a102dc30\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  75ced1b1-1fc2-42d3-a4f8-44aa1978c8ef\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f3e36cea-5eb2-495a-87f4-947395f325b0\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  552a5638-8fd2-46de-8569-5f5512102264\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  59ac7ee6-8fa8-4888-bb77-2be6781dddaf\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  dc237027-8dae-4da7-91ec-501701ecd943\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  a0c947fb-f00e-4331-ad3a-402908e08b57\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  408b4482-ff63-4a1f-9cf9-ca820cd51b39\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  c7f13d88-b4af-4484-9547-52197f778c08\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  4ddee9a9-feaf-4daa-9100-0d4188f7b827\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  0adbba56-85f8-49e0-9b11-000622238d91\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  57e18a9f-8327-4d6c-b2b4-c2b337341e86\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  678f1920-0bc3-4687-af71-35d61030b1a0\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  d17b55c5-7848-4b79-a735-983aec995c52\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  87d6c782-c43b-473f-84da-d2a519d8f1fc\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  253c2443-b820-4c13-bf6d-ba7a5426f52d\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  5c4dff48-4afa-4922-949e-f64db583f392\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  6c94136d-5040-4c09-b1fd-c02dbff210e6\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  3527e00e-1aee-46ce-ad9d-8122cff4c202\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  c64f2bf3-90f0-4a96-b3a8-9f8db46dce92\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  94d9d95f-32b2-470d-95f8-dbd843d6def3\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  35aecf7e-5f0b-4533-995c-3cb4165d44b5\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  630bae26-a6cc-4a36-bbe5-40dc15b38dea\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0bd47ec1-0e3c-43bf-a491-534d06beb19f\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b98777af-0c7c-44f7-9c03-85d6d412856c\ncollecting  7610b45e-5652-4604-ab5b-99344f71616b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  35eee1cd-f92a-4ba5-af03-fb5347490f41\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  85f0acd8-4008-472d-bf40-e35e0e2934e4\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  a6a9febf-ea16-4223-83d4-8e459e2af85a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  ce9da6bf-cf6e-4edb-b579-5a0853b2ed17\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  de9c541b-ce5e-4cc6-9ddd-03f85dc5b3d5\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  003fdfbd-c766-4312-b029-bd4cfba6ebef\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  40c4f8cd-b0ca-4d37-b91e-b69e5dff7f9a\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  0c31f316-6718-4a43-a9f1-ed552e45bd0f\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  0d9f0708-5e8d-4eb8-b946-6441ef955516\ncollecting  9e5bc091-13c7-46ec-8c17-8e315b7e535c\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8e7f826f-8dc9-490a-9282-98d899a07cc7\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  9ea23099-dd30-4b26-9de7-5d42d5dae87b\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  eab40c22-0c15-4291-a6ce-e085a7f0f1e4\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  7f215a89-2a17-42f0-a2fb-f18fbc888cef\ncollecting  a5366d95-7b9d-4b1b-a16f-99e56fab08f5\ncollecting  7a266524-6e76-4d06-963f-6f977e356574\ncollecting  fde3221a-9ce3-45a9-857f-bd196b07aa05\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  cdb446bc-e801-404f-9911-9ba5c687f6af\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9448e70e-32ff-4c47-b6e7-ccb1df91743b\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\n",
  "history_begin_time" : 1647036440793,
  "history_end_time" : 1647036576424,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "93nKRaEZewmt",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-02-28'\nend_date = '2022-03-06'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "/Users/joe\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-02-28_2022-03-06.csv\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f191fe19-0e81-4bc9-9980-29738a05a49b\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  0a54de9c-d804-4681-9f7f-9f770a0f6d2e\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  30641173-db10-4320-ab1e-c46e765a9011\ncollecting  30ab5128-9a8f-4446-b781-faf8bafb677f\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  4bb8fe22-653c-4611-a3d8-de5b2c62d13d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f11515e9-f2a0-4f8c-9f2d-12b9e2dc8569\ncollecting  cc66f524-dd2b-4d3f-bf96-4941edca2879\ncollecting  09288a61-d120-4cee-ac46-5a275a8f005c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  70bfdc00-dbd2-4c44-8039-04a547f91f76\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  9023330c-2766-4585-b6fe-63593c519e03\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  ddc760c7-dc6e-4fd4-ac1a-987ba3f79748\ncollecting  690ae8d4-c0d0-4dad-a7c4-67f3df07cc78\ncollecting  dbf421d4-0295-4a9f-9e20-88ac299360b1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  5ec8a57d-8d5f-4331-b1fb-9d766f42991a\ncollecting  403090bc-fc9e-44fb-921b-f7eea63e9740\ncollecting  232ef8b4-938f-42d7-a6e4-647d5280edd2\ncollecting  cc8b7ef5-1c86-4bd2-8cb9-969c7df1884e\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  39dd8dce-b4a1-4db5-bc31-fba72181cf5e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  49b01e43-f719-450f-b7c6-556b08e9ef4d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  00c4db22-a423-41a4-ada6-a8b1b04153a4\ncollecting  ec0952b6-f119-4f40-bf47-343d71245ddc\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  b5c7343d-a4a9-4da9-aee3-36539a545af6\ncollecting  17da8ab4-6dd8-481e-a025-7574765ef9b1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d563ff8c-31c3-44a9-8fd3-2f8bc68b21b4\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  cbe04952-a2ae-4525-98c5-a644c9a5ddc5\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  6e96bf06-cbc5-45b5-a36b-e37864226099\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c7e3f62c-a812-4342-8e4c-3a6a5dd96255\ncollecting  a8e91cfa-724a-4114-a9d4-291785ff31f8\ncollecting  2dde4be2-b6fd-47e8-b53d-88b59d74fde1\ncollecting  b2e9cb6b-b45a-4cab-8333-247cb4c0b51b\ncollecting  46f21569-8ecf-4c46-b65b-d80fa83a20d5\ncollecting  643c05b6-03bc-4024-8000-2228f4b5a7ad\ncollecting  fb078c7e-4975-4c7f-8f42-180386ac8c3c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  dba335b6-9d97-4a89-9ff3-888a8a45575f\ncollecting  057fb61e-ce45-4423-9ef2-b52d8c1237e9\ncollecting  50f7b567-4066-4437-a335-71aff4c94a2c\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  7acd0d51-ff30-42a3-9338-590432bd0e43\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  c340219b-307b-412b-9368-b50639bd372d\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b99b0ffd-6fa9-482c-8511-f7b87e705d35\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  0f46ad2b-4b1f-4232-8e46-be7122d53b86\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  aa0d6340-c817-48c9-8727-8d3457606381\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f25cdbec-2f14-42c5-a6ef-a60f3a90caff\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  eb1d889a-c427-49e1-95a1-fa6577002c9b\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  09f879b9-4378-479e-949b-cdc3bec8f59f\ncollecting  e925f8e6-6eee-4fa7-9034-41eb9917df5e\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  12bde9ee-0e0a-49ac-ab19-b410adb61b3c\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  548ff935-a421-4f4c-8eef-0bb19ed6c5f8\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  14c19b34-6359-4d3f-865e-0b9852a0e958\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  0efc68ba-5786-4c54-8028-e6f92efa6757\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  e9759e79-461c-425e-af17-0a88be1a441f\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  78ccacb3-4eb9-4d95-b244-f3a709e39fd1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  69d48a07-3007-4b3f-bec6-c097509a56d9\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  03428fd9-01cc-4a57-ab6e-f4e8f265c094\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  6de38d5b-ccce-4ff2-90ed-1c7035491518\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6662f7d0-4afc-4fed-b930-e0408ee10bc7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  a4339b9a-871e-44c2-9bb4-bcbfe9d590d7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  be57eab6-a495-427f-8a36-9d118c03e7d8\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  0623939d-b33f-41cb-ade2-3c4a776de49a\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  d10a90c7-3db0-43c6-b04b-fe8b4c3f206e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  65894307-d4eb-4b2e-a0fa-bd83a102dc30\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  75ced1b1-1fc2-42d3-a4f8-44aa1978c8ef\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f3e36cea-5eb2-495a-87f4-947395f325b0\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  552a5638-8fd2-46de-8569-5f5512102264\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  59ac7ee6-8fa8-4888-bb77-2be6781dddaf\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  dc237027-8dae-4da7-91ec-501701ecd943\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  a0c947fb-f00e-4331-ad3a-402908e08b57\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  408b4482-ff63-4a1f-9cf9-ca820cd51b39\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  c7f13d88-b4af-4484-9547-52197f778c08\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  4ddee9a9-feaf-4daa-9100-0d4188f7b827\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  0adbba56-85f8-49e0-9b11-000622238d91\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  57e18a9f-8327-4d6c-b2b4-c2b337341e86\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  678f1920-0bc3-4687-af71-35d61030b1a0\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  d17b55c5-7848-4b79-a735-983aec995c52\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  87d6c782-c43b-473f-84da-d2a519d8f1fc\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  253c2443-b820-4c13-bf6d-ba7a5426f52d\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  5c4dff48-4afa-4922-949e-f64db583f392\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  6c94136d-5040-4c09-b1fd-c02dbff210e6\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  3527e00e-1aee-46ce-ad9d-8122cff4c202\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  c64f2bf3-90f0-4a96-b3a8-9f8db46dce92\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  94d9d95f-32b2-470d-95f8-dbd843d6def3\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  35aecf7e-5f0b-4533-995c-3cb4165d44b5\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  630bae26-a6cc-4a36-bbe5-40dc15b38dea\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0bd47ec1-0e3c-43bf-a491-534d06beb19f\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b98777af-0c7c-44f7-9c03-85d6d412856c\ncollecting  7610b45e-5652-4604-ab5b-99344f71616b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  35eee1cd-f92a-4ba5-af03-fb5347490f41\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  85f0acd8-4008-472d-bf40-e35e0e2934e4\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  a6a9febf-ea16-4223-83d4-8e459e2af85a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  ce9da6bf-cf6e-4edb-b579-5a0853b2ed17\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  de9c541b-ce5e-4cc6-9ddd-03f85dc5b3d5\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  003fdfbd-c766-4312-b029-bd4cfba6ebef\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  40c4f8cd-b0ca-4d37-b91e-b69e5dff7f9a\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  0c31f316-6718-4a43-a9f1-ed552e45bd0f\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  0d9f0708-5e8d-4eb8-b946-6441ef955516\ncollecting  9e5bc091-13c7-46ec-8c17-8e315b7e535c\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8e7f826f-8dc9-490a-9282-98d899a07cc7\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  9ea23099-dd30-4b26-9de7-5d42d5dae87b\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  eab40c22-0c15-4291-a6ce-e085a7f0f1e4\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  7f215a89-2a17-42f0-a2fb-f18fbc888cef\ncollecting  a5366d95-7b9d-4b1b-a16f-99e56fab08f5\ncollecting  7a266524-6e76-4d06-963f-6f977e356574\ncollecting  fde3221a-9ce3-45a9-857f-bd196b07aa05\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  cdb446bc-e801-404f-9911-9ba5c687f6af\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9448e70e-32ff-4c47-b6e7-ccb1df91743b\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\n",
  "history_begin_time" : 1647005759019,
  "history_end_time" : 1647005979971,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "enht6e0wdo9",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-02-20'\nend_date = '2022-02-27'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1646692935291,
  "history_end_time" : 1646692935929,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "6itb54mis7l",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-02-20'\nend_date = '2022-02-27'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1646604593363,
  "history_end_time" : 1646604598996,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "9g0muGIixPbf",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nfrom all_dependencies import *\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-02-20'\nend_date = '2022-02-27'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "/Users/joe\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-02-20_2022-02-27.csv\nexists skipping..\n",
  "history_begin_time" : 1646346464219,
  "history_end_time" : 1646346466590,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "2vygxwp0dma",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-02-20'\nend_date = '2022-02-27'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "",
  "history_begin_time" : 1646269658439,
  "history_end_time" : 1646269659704,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "U8iHjYKjgDIM",
  "history_input" : "\n\n# reminder that if you are installing libraries in a Google Colab instance you will be prompted to restart your kernal\n\nimport json\nimport pandas as pd\nimport ee\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport geopandas as gpd\nimport geojson\nimport numpy as np\nimport os.path\n\ntry:\n    ee.Initialize()\nexcept Exception as e:\n    ee.Authenticate() # this must be run in terminal instead of Geoweaver. Geoweaver doesn't support prompt.\n    ee.Initialize()\n\n# read the grid geometry file\nhomedir = os.path.expanduser('~')\nprint(homedir)\n# read grid cell\ngithub_dir = f\"{homedir}/Documents/GitHub/SnowCast\"\n# read grid cell\nstation_cell_mapper_file = f\"{github_dir}/data/ready_for_training/station_cell_mapping.csv\"\nstation_cell_mapper_df = pd.read_csv(station_cell_mapper_file)\n\nstart_date = '2022-02-20'\nend_date = '2022-02-27'\n\norg_name = 'sentinel1'\nproduct_name = 'COPERNICUS/S1_GRD'\nvar_name = 'VV'\ncolumn_name = 's1_grd_vv'\n\nfinal_csv_file = f\"{homedir}/Documents/GitHub/SnowCast/data/sat_testing/{org_name}/{column_name}_{start_date}_{end_date}.csv\"\nprint(f\"Results will be saved to {final_csv_file}\")\n\n\nif os.path.exists(final_csv_file):\n    print(\"exists skipping..\")\n    exit()\n\n\nall_cell_df = pd.DataFrame(columns = ['date', column_name, 'cell_id', 'latitude', 'longitude'])\n\nfor ind in station_cell_mapper_df.index:\n  \n    try:\n  \t\n      current_cell_id = station_cell_mapper_df['cell_id'][ind]\n      print(\"collecting \", current_cell_id)\n      \n      longitude = station_cell_mapper_df['lon'][ind]\n      latitude = station_cell_mapper_df['lat'][ind]\n\n      # identify a 500 meter buffer around our Point Of Interest (POI)\n      poi = ee.Geometry.Point(longitude, latitude).buffer(1)\n\n      viirs = ee.ImageCollection(product_name) \\\n          \t.filterDate(start_date, end_date) \\\n            .filterBounds(poi) \\\n          \t.filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV')) \\\n      \t\t.select('VV')\n      \n      def poi_mean(img):\n          reducer = img.reduceRegion(reducer=ee.Reducer.mean(), geometry=poi)\n          mean = reducer.get(var_name)\n          return img.set('date', img.date().format()).set(column_name,mean)\n\n      poi_reduced_imgs = viirs.map(poi_mean)\n\n      nested_list = poi_reduced_imgs.reduceColumns(ee.Reducer.toList(2), ['date',column_name]).values().get(0)\n\n      # dont forget we need to call the callback method \"getInfo\" to retrieve the data\n      df = pd.DataFrame(nested_list.getInfo(), columns=['date',column_name])\n\n      df['date'] = pd.to_datetime(df['date'])\n      df = df.set_index('date')\n\n      df['cell_id'] = current_cell_id\n      df['latitude'] = latitude\n      df['longitude'] = longitude\n\n      df_list = [all_cell_df, df]\n      all_cell_df = pd.concat(df_list) # merge into big dataframe\n      \n    except Exception as e:\n      \n      print(e)\n      pass\n    \nall_cell_df.to_csv(final_csv_file)  \n\n\n",
  "history_output" : "/Users/joe\nResults will be saved to /Users/joe/Documents/GitHub/SnowCast/data/sat_testing/sentinel1/s1_grd_vv_2022-02-20_2022-02-27.csv\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f191fe19-0e81-4bc9-9980-29738a05a49b\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  0a54de9c-d804-4681-9f7f-9f770a0f6d2e\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  30641173-db10-4320-ab1e-c46e765a9011\ncollecting  30ab5128-9a8f-4446-b781-faf8bafb677f\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  4bb8fe22-653c-4611-a3d8-de5b2c62d13d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  f11515e9-f2a0-4f8c-9f2d-12b9e2dc8569\ncollecting  cc66f524-dd2b-4d3f-bf96-4941edca2879\ncollecting  09288a61-d120-4cee-ac46-5a275a8f005c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  70bfdc00-dbd2-4c44-8039-04a547f91f76\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  9023330c-2766-4585-b6fe-63593c519e03\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  ddc760c7-dc6e-4fd4-ac1a-987ba3f79748\ncollecting  690ae8d4-c0d0-4dad-a7c4-67f3df07cc78\ncollecting  dbf421d4-0295-4a9f-9e20-88ac299360b1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  5ec8a57d-8d5f-4331-b1fb-9d766f42991a\ncollecting  403090bc-fc9e-44fb-921b-f7eea63e9740\ncollecting  232ef8b4-938f-42d7-a6e4-647d5280edd2\ncollecting  cc8b7ef5-1c86-4bd2-8cb9-969c7df1884e\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  39dd8dce-b4a1-4db5-bc31-fba72181cf5e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df01bf44-46b8-4541-b0a4-ed1fae16ac38\ncollecting  49b01e43-f719-450f-b7c6-556b08e9ef4d\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  6dd37e24-0a9c-4749-8ab6-7e26d42925d6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  00c4db22-a423-41a4-ada6-a8b1b04153a4\ncollecting  ec0952b6-f119-4f40-bf47-343d71245ddc\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  b5c7343d-a4a9-4da9-aee3-36539a545af6\ncollecting  17da8ab4-6dd8-481e-a025-7574765ef9b1\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  4f383fb2-6cc7-48a8-9bdb-9c5d150e6eae\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  d563ff8c-31c3-44a9-8fd3-2f8bc68b21b4\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  cbe04952-a2ae-4525-98c5-a644c9a5ddc5\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  7cf8af73-1abf-40ad-9788-0d757201eeb0\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  65565709-caca-4ed5-a8b6-2794da371708\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  6e96bf06-cbc5-45b5-a36b-e37864226099\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  c7e3f62c-a812-4342-8e4c-3a6a5dd96255\ncollecting  a8e91cfa-724a-4114-a9d4-291785ff31f8\ncollecting  2dde4be2-b6fd-47e8-b53d-88b59d74fde1\ncollecting  b2e9cb6b-b45a-4cab-8333-247cb4c0b51b\ncollecting  46f21569-8ecf-4c46-b65b-d80fa83a20d5\ncollecting  643c05b6-03bc-4024-8000-2228f4b5a7ad\ncollecting  fb078c7e-4975-4c7f-8f42-180386ac8c3c\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  dba335b6-9d97-4a89-9ff3-888a8a45575f\ncollecting  057fb61e-ce45-4423-9ef2-b52d8c1237e9\ncollecting  50f7b567-4066-4437-a335-71aff4c94a2c\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  7acd0d51-ff30-42a3-9338-590432bd0e43\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  c340219b-307b-412b-9368-b50639bd372d\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b99b0ffd-6fa9-482c-8511-f7b87e705d35\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  0f46ad2b-4b1f-4232-8e46-be7122d53b86\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  8ca1aaab-07de-4532-a99f-4ab8bce2f862\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  e4473542-1804-41c0-82b2-eaddc245845d\ncollecting  aa0d6340-c817-48c9-8727-8d3457606381\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f25cdbec-2f14-42c5-a6ef-a60f3a90caff\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  eb1d889a-c427-49e1-95a1-fa6577002c9b\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  09f879b9-4378-479e-949b-cdc3bec8f59f\ncollecting  e925f8e6-6eee-4fa7-9034-41eb9917df5e\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  12bde9ee-0e0a-49ac-ab19-b410adb61b3c\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  548ff935-a421-4f4c-8eef-0bb19ed6c5f8\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  14c19b34-6359-4d3f-865e-0b9852a0e958\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  06ec1554-a0ea-41cf-85f8-43f4b48c7599\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  0efc68ba-5786-4c54-8028-e6f92efa6757\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  147d5eb4-e574-47e4-994a-8a2908c06050\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  ba4b2f3f-c8e3-4535-9781-426e4f77ba4c\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  e9759e79-461c-425e-af17-0a88be1a441f\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  76b55900-eb3d-4d25-a538-f74302ffe72d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  78ccacb3-4eb9-4d95-b244-f3a709e39fd1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  972ab3b1-7445-4f57-a1a1-c3be4c257869\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  69d48a07-3007-4b3f-bec6-c097509a56d9\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  cad51334-b3af-4c23-85c3-451c3447560a\ncollecting  03428fd9-01cc-4a57-ab6e-f4e8f265c094\ncollecting  f1f17cee-3fca-44bc-8974-b72d5f995a4a\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  6de38d5b-ccce-4ff2-90ed-1c7035491518\ncollecting  c89dc6ca-6d69-41ce-954d-b51f64aaacb1\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  c59f438c-f00a-476a-938e-efd828e0d083\ncollecting  6bc3e088-5139-43f2-9b2a-ade1cedeae47\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6662f7d0-4afc-4fed-b930-e0408ee10bc7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  fb32a838-cf3b-47a2-9e22-395a730f4f4f\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  8edd6091-10fa-4617-8dc8-e0ce1d5b84f7\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  a4339b9a-871e-44c2-9bb4-bcbfe9d590d7\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  be57eab6-a495-427f-8a36-9d118c03e7d8\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  51ebe834-adf4-474e-871e-28ebca2bd0cc\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  0623939d-b33f-41cb-ade2-3c4a776de49a\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  05938de0-622b-4e0a-a82b-2a128e5be0b0\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  d10a90c7-3db0-43c6-b04b-fe8b4c3f206e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  86257c69-a8f1-43b1-9e07-73129e2c3fbc\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  65894307-d4eb-4b2e-a0fa-bd83a102dc30\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  71f41513-6ac9-4d2e-97eb-6cd3b84f7043\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  75ced1b1-1fc2-42d3-a4f8-44aa1978c8ef\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  f3e36cea-5eb2-495a-87f4-947395f325b0\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  552a5638-8fd2-46de-8569-5f5512102264\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  0b9543d3-3cf9-4f28-b8eb-fd22c1956153\ncollecting  c5a82752-3e4b-43ec-8011-9111b9bfcb89\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  440d7558-67fd-43b4-826b-26d02663f871\ncollecting  59ac7ee6-8fa8-4888-bb77-2be6781dddaf\ncollecting  674e34ce-8b77-422b-ab14-c6c3a0183e39\ncollecting  dc237027-8dae-4da7-91ec-501701ecd943\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  018cf1a1-f945-4097-9c47-0c4690538bb5\ncollecting  a0c947fb-f00e-4331-ad3a-402908e08b57\ncollecting  19b5e6ce-c1a0-4cce-85f5-248c9f1abb6e\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  dd7f64aa-3556-409b-bc86-71dc28b6fd45\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  408b4482-ff63-4a1f-9cf9-ca820cd51b39\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  c7f13d88-b4af-4484-9547-52197f778c08\ncollecting  10a46ea0-13da-4cef-9aa6-ff48aa46881c\ncollecting  42a21eb9-10fd-4986-825b-9ea55ce13935\ncollecting  a5080351-033f-4cfa-ad27-019fc84e052c\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  20b97bae-60d6-466d-aca9-334d9b2d63b6\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  4ddee9a9-feaf-4daa-9100-0d4188f7b827\ncollecting  b59438b9-aadc-4899-9afb-fe71974c5c3a\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  0adbba56-85f8-49e0-9b11-000622238d91\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  57e18a9f-8327-4d6c-b2b4-c2b337341e86\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  24cd85fa-6aee-4556-bb8a-b6696eb72a19\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  678f1920-0bc3-4687-af71-35d61030b1a0\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  e27143af-fdc0-4f6f-8a28-f57b78da75dc\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  d17b55c5-7848-4b79-a735-983aec995c52\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f6a782f0-4b17-4989-815c-2398b77b09dd\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  3330a979-98df-4a38-ac3f-0b45374f8e3d\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  87d6c782-c43b-473f-84da-d2a519d8f1fc\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  253c2443-b820-4c13-bf6d-ba7a5426f52d\ncollecting  55d3e9a6-e153-43c3-a66c-cd60711ff4a9\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  5c4dff48-4afa-4922-949e-f64db583f392\ncollecting  74f8c8bc-2f60-4232-b447-43459d5d22f0\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  9474e816-b673-4e6d-83e0-28c274945bef\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  6c94136d-5040-4c09-b1fd-c02dbff210e6\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  d674ee8e-49f1-44c9-890d-4e04997522a1\ncollecting  0cda0c4a-405b-4e16-8922-964190929d80\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  e833aad1-6da3-4413-b25e-b2ab5b2029c0\ncollecting  679fe096-5475-4d4d-b0f8-81e32de889aa\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  3527e00e-1aee-46ce-ad9d-8122cff4c202\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  c64f2bf3-90f0-4a96-b3a8-9f8db46dce92\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  94d9d95f-32b2-470d-95f8-dbd843d6def3\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  35aecf7e-5f0b-4533-995c-3cb4165d44b5\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  9813294e-a28e-45c0-976d-a6fa65d87927\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  7b636fe2-1760-45c5-afce-505f2e927163\ncollecting  f46e7d90-a754-44a8-b262-63f5c401a0ab\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  630bae26-a6cc-4a36-bbe5-40dc15b38dea\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0bd47ec1-0e3c-43bf-a491-534d06beb19f\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b98777af-0c7c-44f7-9c03-85d6d412856c\ncollecting  7610b45e-5652-4604-ab5b-99344f71616b\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  e3473791-6153-49bc-a2ed-0b1e3e243942\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  9f0599d8-81f3-4ab5-b275-48a6ddaaae5b\ncollecting  a28a3caf-eea2-414f-8003-62ac82daaafa\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  cacaa17b-0b1b-4fe2-a4c1-7728e6c154c1\ncollecting  dc31c331-837b-4b59-b184-051321e9489c\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  3b5bfd37-070c-4ee9-a470-c9338851e270\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  0d0b742e-c324-4140-8f62-746210d79080\ncollecting  35eee1cd-f92a-4ba5-af03-fb5347490f41\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  ad9f3d28-ef5a-4851-a5e4-5e2f7b63d17b\ncollecting  a6861fc3-2315-451b-9b95-c06d1ea96b4b\ncollecting  6afdc499-9686-4451-b207-13df777df662\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  ce76ce00-c8b5-4597-8ca3-1ec9db795b50\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  b1077b69-4b02-458e-8a4b-e68695ac534f\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  43be1328-02b0-4cc1-8e9b-75842908cee3\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  85f0acd8-4008-472d-bf40-e35e0e2934e4\ncollecting  7bc3c413-4709-4ddd-a2ad-99f6cad9436c\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  a6a9febf-ea16-4223-83d4-8e459e2af85a\ncollecting  6bf06917-011b-4029-8fbe-a8dfea3bc598\ncollecting  01be2cc7-ef77-4e4d-80ed-c4f8139162c3\ncollecting  efada0af-09bf-4013-a1c6-0837f8ff59c5\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  962f6718-ce02-4d13-b28c-e159d1adc2d4\ncollecting  df7e906a-07f3-4a46-b9a5-0200427c26f7\ncollecting  ce9da6bf-cf6e-4edb-b579-5a0853b2ed17\ncollecting  517aefce-a617-4251-acb9-c5faf0b7fdf3\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  de9c541b-ce5e-4cc6-9ddd-03f85dc5b3d5\ncollecting  d37ccc2e-7127-48ec-9425-2e77681c3635\ncollecting  c0568d62-49c7-4d9f-beba-ac0fb3e064c5\ncollecting  bfda850c-3027-4e91-afcb-cca5e73e4a03\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  cfe58efd-ce2a-495a-90cd-6826f704ebee\ncollecting  003fdfbd-c766-4312-b029-bd4cfba6ebef\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  ea185683-4427-44c3-84e1-706cf16781ce\ncollecting  b5d7b6b8-4e5d-4b5e-8976-c72e99f57769\ncollecting  cdfc27f0-b990-45f7-bac6-7c674cd157ac\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  333458b2-c1a9-47a3-8ae0-92053ad28ae3\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  5e252b65-58dd-421f-a0db-3d4669bfb235\ncollecting  875622b7-5253-43d2-8e0f-348767860eb9\ncollecting  c07ab5f6-14a9-4b0b-a9af-9f7db6e8c220\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  fe33672e-7ea7-4c5d-8639-96b2cc7edb0c\ncollecting  40c4f8cd-b0ca-4d37-b91e-b69e5dff7f9a\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  02c3ec4a-8de4-4284-9ec1-5a942d3d098e\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  eeb0a123-9482-4946-ab3f-9e63541cb655\ncollecting  695bed09-0ad9-406e-b489-69408adeea06\ncollecting  2222b7b3-f48b-4cea-90bf-8e7245d002ea\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  d64197fc-0723-4c61-9ce8-ff2554e24154\ncollecting  36b98590-a7e6-4e00-8c7d-f0f3d25bafec\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  50d7ad3f-57f0-45e1-911d-b0efff9deb8f\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  cfd2c7fc-c29a-4a32-a11d-d04fa2dd660d\ncollecting  491846d3-f81a-4777-b49f-0a0c74168395\ncollecting  f9f7132d-56a2-43e2-baba-312f34dbaeed\ncollecting  0c31f316-6718-4a43-a9f1-ed552e45bd0f\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  6d0ff6eb-0411-4863-b4e7-90958db98115\ncollecting  f62e6b4d-7f9d-4139-bac4-59f084fb09cd\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  695c7749-a3b8-4158-bd14-59d1f2c3e736\ncollecting  dca30f20-582e-40ef-be6d-aa7858be4baa\ncollecting  f6106ef5-e6fd-423b-9034-59bce18319da\ncollecting  38793f95-324b-4f01-b1a7-45e1c9353bc1\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  c66f40ed-f72e-4012-991c-1f3726e5c8ad\ncollecting  2ca6a37f-67f5-4905-864b-ddf98d956ebb\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  8116acfb-8035-4d34-b9b9-b0af2c5697df\ncollecting  a2588440-600e-41da-b2b9-1f5632ecdef6\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  bb65d7a1-a5d5-4c89-9ef9-f0f1db06cc58\ncollecting  0a820e12-033b-45d6-9ef9-d70f4c5e5b63\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  551e2612-8a22-4c44-8290-78dc0e4af85d\ncollecting  8c45801f-6377-42e1-ae0a-9b53593ff843\ncollecting  5308a803-69e6-43cd-89db-66e93f9f83af\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  631ed3c9-7863-4e7c-86fa-4bfb043f2851\ncollecting  3789f7a5-5743-4005-844d-602dadb33030\ncollecting  99a2d4a9-63a0-43a7-976d-2a1ed822186d\ncollecting  0aeaffd7-9089-49e7-85ad-2314f32cbf7c\ncollecting  692c41af-2210-4dd6-916d-c99e76807447\ncollecting  f3332d55-ecc8-4644-9deb-180e42abb2eb\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  89a7b0ef-1ec8-490f-9207-c93aa57a147f\ncollecting  1135e377-22e6-4290-b4cd-e6739de7fd8a\ncollecting  0d9f0708-5e8d-4eb8-b946-6441ef955516\ncollecting  9e5bc091-13c7-46ec-8c17-8e315b7e535c\ncollecting  93b8483d-a510-42ff-865e-33d5a8784dc4\ncollecting  ad44deb7-e56d-47bd-8d64-7147493e0aee\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\ncollecting  360f1bcc-aa60-4052-a18a-b33da5745ff4\ncollecting  8e7f826f-8dc9-490a-9282-98d899a07cc7\ncollecting  02cf33c2-c8e2-48b9-bf72-92506e97e251\ncollecting  830bc2b9-592d-4334-842a-213ba4c0a347\ncollecting  9ea23099-dd30-4b26-9de7-5d42d5dae87b\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  eab40c22-0c15-4291-a6ce-e085a7f0f1e4\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  9c43edf0-541f-4dbb-9fe1-42cc83d453bd\ncollecting  990e5974-9c60-4c9a-ba23-ddce13971178\ncollecting  b1936012-0d31-4b92-8d60-c24903b2e569\ncollecting  e13f9c1b-dca0-4c63-a64c-76f6bc725156\ncollecting  af0463d4-f20f-4d13-bd0f-5834e2e8717b\ncollecting  c0e85162-6ff4-401b-b01e-cc6d7a51eac0\ncollecting  e467a17f-a729-4938-87a1-ac25157eed63\ncollecting  4f13c5e6-14c0-44cf-a2b0-4ef9bb3704fd\ncollecting  7f215a89-2a17-42f0-a2fb-f18fbc888cef\ncollecting  a5366d95-7b9d-4b1b-a16f-99e56fab08f5\ncollecting  7a266524-6e76-4d06-963f-6f977e356574\ncollecting  fde3221a-9ce3-45a9-857f-bd196b07aa05\ncollecting  2f266b81-aad3-4c26-ac69-1bd04a208bf7\ncollecting  cdb446bc-e801-404f-9911-9ba5c687f6af\ncollecting  0a0ea690-5b73-4459-91d5-a6948d132a48\ncollecting  10162c55-772d-49d2-8b1b-b1f9c86254b2\ncollecting  9448e70e-32ff-4c47-b6e7-ccb1df91743b\ncollecting  47e625fa-e2df-43ce-84dd-8ac21fdda75a\ncollecting  da6ce150-5daf-4a91-9fdd-a85854462b08\ncollecting  e776d9b6-2180-4f50-90bf-77f7b920fc3b\ncollecting  ab89875f-3b86-4c6a-8d66-767017570dfc\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  2f5c1968-2c34-4539-a9f4-38298d0de925\ncollecting  f78ea076-10a1-45dc-a848-c08e129c6a28\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  064d7f3e-8bbd-49cd-b360-5c4590a19b9e\ncollecting  cde149fe-708b-4a35-bea8-959eb9da4e0b\ncollecting  e6d48180-814d-494b-99cc-0be5cd1a0eaf\n",
  "history_begin_time" : 1646011638853,
  "history_end_time" : 1646011795840,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "lt5273bdueb",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809171453,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "ng0n3v3u3m3",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678201703966,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "xq8t289uheh",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1694185611216,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "z9waze7tn4d",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677785529427,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "jcb69ez1sgu",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677797113220,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "2q5zq8svwkh",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809840735,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "zpozz4wqfl0",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677959722623,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "2gzni5dhejn",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677959583131,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "2ajztgigpjk",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678206143077,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "jo3541rsfq4",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677867648520,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "bgvwdidmhfw",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678201687050,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "vvvj3m2s2tx",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958849879,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "k911qr8piit",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677784516779,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "kkt0zsw2fx6",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677785383327,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "gece4g14gg3",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677796528249,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "7zr9tng1beh",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809306579,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "aegftvqqeu0",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809554679,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "h4duwsyv2ac",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677809573423,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "uc8sxuxvsa7",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958291195,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "gsv7gyooxho",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958754112,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "5sskpatux3v",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1677958952858,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "eaafc4klhjt",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678884042271,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "emoydaj9u6c",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678884140254,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "0ntj6qp7g9p",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678884535337,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},{
  "history_id" : "zmvln1eda3z",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1678887010622,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "45wlwr",
  "indicator" : "Stopped"
},]
