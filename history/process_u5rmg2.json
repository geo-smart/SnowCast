[{
  "history_id" : "8yg2ercf1iq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698228211029,
  "history_end_time" : 1698228211029,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "ykgna6bmh67",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1698160809421,
  "history_end_time" : 1698160809421,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "o8PUxBznyGKo",
  "history_input" : "import pandas as pd\nimport pandas as pd\nimport os\nfrom snowcast_utils import work_dir\nimport shutil\nimport numpy as np\n\npd.set_option('display.max_columns', None)\n\ncurrent_ready_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\n\n#current_ready_csv_path = f'{work_dir}/testing_all_ready.csv'\n\n# Step 1: Read the CSV file into a pandas DataFrame\nfile_path = current_ready_csv_path\ndf = pd.read_csv(file_path)\n\n# Step 2: Define the geometry bounding box\n# Replace these values with the actual bounding box coordinates\nmin_lat, max_lat = 37.75, 38.75\nmin_lon, max_lon = -119.75, -118.75\n\n# Step 3: Filter the DataFrame to keep rows within the geometry\nfiltered_df = df[(df['lat'] >= min_lat) & (df['lat'] <= max_lat) & (df['lon'] >= min_lon) & (df['lon'] <= max_lon)]\n\nlat_lon_df = filtered_df[['lat', 'lon']]\n\n# Step 3: Get unique latitude and longitude pairs\nunique_lat_lon_pairs_df = lat_lon_df.drop_duplicates()\n\n# Step 4: Display or process the filtered data\nprint(\"Filtered Data:\")\nprint(unique_lat_lon_pairs_df.head())\n\n# Step 5: (Optional) Write the filtered data to a new CSV file\nsubset_csv_path = f'{current_ready_csv_path}_hackweek_subset_unique_location.csv'\nunique_lat_lon_pairs_df.to_csv(subset_csv_path, index=False)\nprint(f\"The subset of the rows is saved to {subset_csv_path}\")\n\n# Step 6: copy it to the website folder\ndestination_folder = \"/var/www/html/swe_forecasting/\"\nshutil.copy(subset_csv_path, destination_folder)\n\n\n# Step 7: Done!\nprint(\"Done\")\n\n\n",
  "history_output" : "today date = 2023-10-23\ntest start date:  2023-05-18\ntest end date:  2023-10-23\n/home/chetana\nFiltered Data:\n              lat         lon\n36525   38.152231 -119.666675\n64284   38.279274 -119.612776\n93504   38.504580 -119.621760\n118341  37.862028 -119.657692\n182625  37.897480 -119.262434\nThe subset of the rows is saved to /home/chetana/gridmet_test_run/final_merged_data_3yrs_cleaned_v3.csv_hackweek_subset_unique_location.csv\nDone\n",
  "history_begin_time" : 1698105387529,
  "history_end_time" : 1698105390242,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "STdPN8ITwbJs",
  "history_input" : "import pandas as pd\nimport pandas as pd\nimport os\nfrom snowcast_utils import work_dir\nimport shutil\nimport numpy as np\n\npd.set_option('display.max_columns', None)\n\n#current_ready_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\n\ncurrent_ready_csv_path = f'{work_dir}/testing_all_ready.csv'\n\n# Step 1: Read the CSV file into a pandas DataFrame\nfile_path = current_ready_csv_path\ndf = pd.read_csv(file_path)\n\n# Step 2: Define the geometry bounding box\n# Replace these values with the actual bounding box coordinates\nmin_lat, max_lat = 37.75, 38.75\nmin_lon, max_lon = -119.75, -118.75\n\n# Step 3: Filter the DataFrame to keep rows within the geometry\nfiltered_df = df[(df['Latitude'] >= min_lat) & (df['Latitude'] <= max_lat) & (df['Longitude'] >= min_lon) & (df['Longitude'] <= max_lon)]\n\nlat_lon_df = filtered_df[['Latitude', 'Longitude']]\n\n# Step 3: Get unique latitude and longitude pairs\nunique_lat_lon_pairs_df = lat_lon_df.drop_duplicates()\n\n# Step 4: Display or process the filtered data\nprint(\"Filtered Data:\")\nprint(unique_lat_lon_pairs_df.head())\n\n# Step 5: (Optional) Write the filtered data to a new CSV file\nsubset_csv_path = f'{current_ready_csv_path}_hackweek_subset_unique_location.csv'\nunique_lat_lon_pairs_df.to_csv(subset_csv_path, index=False)\nprint(f\"The subset of the rows is saved to {subset_csv_path}\")\n\n# Step 6: copy it to the website folder\ndestination_folder = \"/var/www/html/swe_forecasting/\"\nshutil.copy(subset_csv_path, destination_folder)\n\n\n# Step 7: Done!\nprint(\"Done\")\n\n\n",
  "history_output" : "today date = 2023-10-23\ntest start date:  2023-05-18\ntest end date:  2023-10-23\n/home/chetana\nFiltered Data:\n        Latitude  Longitude\n197936     38.74   -119.744\n197937     38.74   -119.708\n197938     38.74   -119.672\n197939     38.74   -119.636\n197940     38.74   -119.600\nThe subset of the rows is saved to /home/chetana/gridmet_test_run/testing_all_ready.csv_hackweek_subset_unique_location.csv\nDone\n",
  "history_begin_time" : 1698105352266,
  "history_end_time" : 1698105354059,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "0O59Tt6eqLg7",
  "history_input" : "import pandas as pd\nimport pandas as pd\nimport os\nfrom snowcast_utils import work_dir\nimport shutil\nimport numpy as np\n\npd.set_option('display.max_columns', None)\n\n#current_ready_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\n\ncurrent_ready_csv_path = f'{work_dir}/testing_all_ready.csv'\n\n# Step 1: Read the CSV file into a pandas DataFrame\nfile_path = current_ready_csv_path\ndf = pd.read_csv(file_path)\n\n# Step 2: Define the geometry bounding box\n# Replace these values with the actual bounding box coordinates\nmin_lat, max_lat = 37.75, 38.75\nmin_lon, max_lon = -119.75, -118.75\n\n# Step 3: Filter the DataFrame to keep rows within the geometry\nfiltered_df = df[(df['Latitude'] >= min_lat) & (df['Latitude'] <= max_lat) & (df['Longitude'] >= min_lon) & (df['Longitude'] <= max_lon)]\n\n# Step 4: Display or process the filtered data\nprint(\"Filtered Data:\")\nprint(filtered_df.head())\n\n# Step 5: (Optional) Write the filtered data to a new CSV file\nsubset_csv_path = f'{current_ready_csv_path}_hackweek_subset.csv'\nfiltered_df.to_csv(subset_csv_path, index=False)\nprint(f\"The subset of the rows is saved to {subset_csv_path}\")\n\n# Step 6: copy it to the website folder\ndestination_folder = \"/var/www/html/swe_forecasting/\"\nshutil.copy(subset_csv_path, destination_folder)\n\n\n# Step 7: Done!\nprint(\"Done\")\n\n\n",
  "history_output" : "today date = 2023-10-23\ntest start date:  2023-05-18\ntest end date:  2023-10-23\n/home/chetana\nFiltered Data:\n        Latitude  Longitude   tmmn   vpd   tmmx                etr  \\\n197936     38.74   -119.744  276.6  1.41  296.9  6.800000000000001   \n197937     38.74   -119.708  276.6  1.41  296.9  6.800000000000001   \n197938     38.74   -119.672  275.0   1.3  295.5                6.5   \n197939     38.74   -119.636  275.4  1.36  296.5                6.5   \n197940     38.74   -119.600  275.3  1.37  296.4  6.300000000000001   \n                      rmin   pr                  vs                rmax    x  \\\n197936  14.700000000000001  0.0                 2.0  52.300000000000004  146   \n197937  14.700000000000001  0.0                 2.0  52.300000000000004  147   \n197938                14.4  0.0                 2.0                53.0  148   \n197939  13.700000000000001  0.0  1.9000000000000001                54.0  149   \n197940  14.200000000000001  0.0  1.7000000000000002                55.2  150   \n          y  Elevation      Slope     Aspect   Curvature  Northness  Eastness  \\\n197936  285  2172.6090  72.783350  278.16498  -2075.4006   0.141080 -0.780304   \n197937  285  2135.5942  69.478615  261.02734   2939.2131  -0.154717 -0.779242   \n197938  285  1866.8344  80.128790  207.80370   8886.4110  -0.724214 -0.436444   \n197939  285  1824.9915  56.064660  180.53543  10687.0690  -0.785376 -0.009344   \n197940  285  1865.2251  81.558100   83.49026   5316.9870   0.112890  0.782164   \n        AMSR_SWE  AMSR_Flag        date  \n197936         0        241  2023-05-18  \n197937         0        241  2023-05-18  \n197938         0        241  2023-05-18  \n197939         0        241  2023-05-18  \n197940         0        241  2023-05-18  \nThe subset of the rows is saved to /home/chetana/gridmet_test_run/testing_all_ready.csv_hackweek_subset.csv\nDone\n",
  "history_begin_time" : 1698104762152,
  "history_end_time" : 1698104763883,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "qYnU9Hf4JYDC",
  "history_input" : "import pandas as pd\nimport pandas as pd\nimport os\nfrom snowcast_utils import work_dir\nimport shutil\nimport numpy as np\n\npd.set_option('display.max_columns', None)\n\n#current_ready_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\n\ncurrent_ready_csv_path = f'{work_dir}/testing_all_ready.csv'\n\n# Step 1: Read the CSV file into a pandas DataFrame\nfile_path = current_ready_csv_path\ndf = pd.read_csv(file_path)\n\n# Step 2: Define the geometry bounding box\n# Replace these values with the actual bounding box coordinates\nmin_lat, max_lat = 37.75, 38.75\nmin_lon, max_lon = -119.75, -118.75\n\n# Step 3: Filter the DataFrame to keep rows within the geometry\nfiltered_df = df[(df['Latitude'] >= min_lat) & (df['Latitude'] <= max_lat) & (df['Longitutde'] >= min_lon) & (df['Longitutde'] <= max_lon)]\n\n# Step 4: Display or process the filtered data\nprint(\"Filtered Data:\")\nprint(filtered_df.head())\n\n# Step 5: (Optional) Write the filtered data to a new CSV file\nsubset_csv_path = f'{current_ready_csv_path}_hackweek_subset.csv'\nfiltered_df.to_csv(subset_csv_path, index=False)\nprint(f\"The subset of the rows is saved to {subset_csv_path}\")\n\n# Step 6: copy it to the website folder\ndestination_folder = \"/var/www/html/swe_forecasting/\"\nshutil.copy(subset_csv_path, destination_folder)\n\n\n# Step 7: Done!\nprint(\"Done\")\n\n\n",
  "history_output" : "today date = 2023-10-23\ntest start date:  2023-05-18\ntest end date:  2023-10-23\n/home/chetana\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3802, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 138, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 165, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5745, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5753, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'Longitutde'\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/qYnU9Hf4JYDC/filter_region_points_for_hackweek.py\", line 24, in <module>\n    filtered_df = df[(df['Latitude'] >= min_lat) & (df['Latitude'] <= max_lat) & (df['Longitutde'] >= min_lon) & (df['Longitutde'] <= max_lon)]\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 3807, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3804, in get_loc\n    raise KeyError(key) from err\nKeyError: 'Longitutde'\n",
  "history_begin_time" : 1698104729375,
  "history_end_time" : 1698104731124,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "fnFdF5pRm2VB",
  "history_input" : "import pandas as pd\nimport pandas as pd\nimport os\nfrom snowcast_utils import work_dir\nimport shutil\nimport numpy as np\n\npd.set_option('display.max_columns', None)\n\n#current_ready_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\n\ncurrent_ready_csv_path = f'{work_dir}/testing_all_ready.csv'\n\n# Step 1: Read the CSV file into a pandas DataFrame\nfile_path = current_ready_csv_path\ndf = pd.read_csv(file_path)\n\n# Step 2: Define the geometry bounding box\n# Replace these values with the actual bounding box coordinates\nmin_lat, max_lat = 37.75, 38.75\nmin_lon, max_lon = -119.75, -118.75\n\n# Step 3: Filter the DataFrame to keep rows within the geometry\nfiltered_df = df[(df['lat'] >= min_lat) & (df['lat'] <= max_lat) & (df['lon'] >= min_lon) & (df['lon'] <= max_lon)]\n\n# Step 4: Display or process the filtered data\nprint(\"Filtered Data:\")\nprint(filtered_df.head())\n\n# Step 5: (Optional) Write the filtered data to a new CSV file\nsubset_csv_path = f'{current_ready_csv_path}_hackweek_subset.csv'\nfiltered_df.to_csv(subset_csv_path, index=False)\nprint(f\"The subset of the rows is saved to {subset_csv_path}\")\n\n# Step 6: copy it to the website folder\ndestination_folder = \"/var/www/html/swe_forecasting/\"\nshutil.copy(subset_csv_path, destination_folder)\n\n\n# Step 7: Done!\nprint(\"Done\")\n\n\n",
  "history_output" : "today date = 2023-10-23\ntest start date:  2023-05-18\ntest end date:  2023-10-23\n/home/chetana\nTraceback (most recent call last):\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3802, in get_loc\n    return self._engine.get_loc(casted_key)\n  File \"pandas/_libs/index.pyx\", line 138, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/index.pyx\", line 165, in pandas._libs.index.IndexEngine.get_loc\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5745, in pandas._libs.hashtable.PyObjectHashTable.get_item\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 5753, in pandas._libs.hashtable.PyObjectHashTable.get_item\nKeyError: 'lat'\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\n  File \"/home/chetana/gw-workspace/fnFdF5pRm2VB/filter_region_points_for_hackweek.py\", line 24, in <module>\n    filtered_df = df[(df['lat'] >= min_lat) & (df['lat'] <= max_lat) & (df['lon'] >= min_lon) & (df['lon'] <= max_lon)]\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/frame.py\", line 3807, in __getitem__\n    indexer = self.columns.get_loc(key)\n  File \"/home/chetana/anaconda3/lib/python3.9/site-packages/pandas/core/indexes/base.py\", line 3804, in get_loc\n    raise KeyError(key) from err\nKeyError: 'lat'\n",
  "history_begin_time" : 1698104690347,
  "history_end_time" : 1698104692177,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "mWkHG08RiKeV",
  "history_input" : "import pandas as pd\nimport pandas as pd\nimport os\nfrom snowcast_utils import work_dir\nimport shutil\nimport numpy as np\n\npd.set_option('display.max_columns', None)\n\ncurrent_ready_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\n\n# Step 1: Read the CSV file into a pandas DataFrame\nfile_path = current_ready_csv_path\ndf = pd.read_csv(file_path)\n\n# Step 2: Define the geometry bounding box\n# Replace these values with the actual bounding box coordinates\nmin_lat, max_lat = 37.75, 38.75\nmin_lon, max_lon = -119.75, -118.75\n\n# Step 3: Filter the DataFrame to keep rows within the geometry\nfiltered_df = df[(df['lat'] >= min_lat) & (df['lat'] <= max_lat) & (df['lon'] >= min_lon) & (df['lon'] <= max_lon)]\n\n# Step 4: Display or process the filtered data\nprint(\"Filtered Data:\")\nprint(filtered_df.head())\n\n# Step 5: (Optional) Write the filtered data to a new CSV file\nsubset_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_hackweek_subset.csv'\nfiltered_df.to_csv(subset_csv_path, index=False)\n\n# Step 6: copy it to the website folder\ndestination_folder = \"/var/www/html/swe_forecasting/\"\nshutil.copy(subset_csv_path, destination_folder)\n\n# Step 7: Done!\nprint(\"Done\")\n\n\n",
  "history_output" : "today date = 2023-10-23\ntest start date:  2023-05-18\ntest end date:  2023-10-23\n/home/chetana\nFiltered Data:\n             date        lat         lon  SWE  Flag  swe_value  Unnamed: 0  \\\n36525  2020-12-01  38.152231 -119.666675    0   241        2.1      785135   \n36526  2020-12-06  38.152231 -119.666675    0   241        2.1      785140   \n36527  2021-12-30  38.152231 -119.666675  255   255        9.1      274113   \n36528  2021-11-28  38.152231 -119.666675  255   255        0.0      274081   \n36529  2021-10-17  38.152231 -119.666675    0   241        0.1      274039   \n       air_temperature_tmmn  potential_evapotranspiration  \\\n36525                 268.5                           1.9   \n36526                 266.2                           5.6   \n36527                 262.3                           2.6   \n36528                 274.4                           1.2   \n36529                 268.6                           3.4   \n       mean_vapor_pressure_deficit  relative_humidity_rmax  \\\n36525                         0.20               43.100002   \n36526                         0.76               64.600000   \n36527                         0.20               87.600000   \n36528                         1.02               68.200005   \n36529                         1.04               21.100000   \n       relative_humidity_rmin  precipitation_amount  air_temperature_tmmx  \\\n36525               39.400000              0.000000                 283.8   \n36526               28.300001              0.400000                 279.7   \n36527               45.600002              0.000000                 273.0   \n36528               69.400000             10.900001                 287.1   \n36529               35.800000              0.000000                 280.1   \n       wind_speed  elevation     slope  curvature     aspect  eastness  \\\n36525         4.5  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36526         5.0  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36527         3.2  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36528         3.3  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36529         4.3  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n       northness  \n36525    0.34633  \n36526    0.34633  \n36527    0.34633  \n36528    0.34633  \n36529    0.34633  \nDone\n",
  "history_begin_time" : 1698104526818,
  "history_end_time" : 1698104530034,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "7RrvvowqrMb2",
  "history_input" : "import pandas as pd\nimport pandas as pd\nimport os\nfrom snowcast_utils import work_dir\nimport shutil\nimport numpy as np\n\npd.set_option('display.max_columns', None)\n\ncurrent_ready_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3.csv'\n\n# Step 1: Read the CSV file into a pandas DataFrame\nfile_path = current_ready_csv_path\ndf = pd.read_csv(file_path)\n\n# Step 2: Define the geometry bounding box\n# Replace these values with the actual bounding box coordinates\nmin_lat, max_lat = 37.75, 38.75\nmin_lon, max_lon = -119.75, -118.75\n\n# Step 3: Filter the DataFrame to keep rows within the geometry\nfiltered_df = df[(df['lat'] >= min_lat) & (df['lat'] <= max_lat) & (df['lon'] >= min_lon) & (df['lon'] <= max_lon)]\n\n# Step 4: Display or process the filtered data\nprint(\"Filtered Data:\")\nprint(filtered_df.head())\n\n# Step 5: (Optional) Write the filtered data to a new CSV file\nsubset_csv_path = f'{work_dir}/final_merged_data_3yrs_cleaned_v3_hackweek_subset.csv'\nfiltered_df.to_csv(subset_csv_path, index=False)\n\n# Step 6: Done!\nprint(\"Done\")\n\n\n",
  "history_output" : "today date = 2023-10-23\ntest start date:  2023-05-18\ntest end date:  2023-10-23\n/home/chetana\nFiltered Data:\n             date        lat         lon  SWE  Flag  swe_value  Unnamed: 0  \\\n36525  2020-12-01  38.152231 -119.666675    0   241        2.1      785135   \n36526  2020-12-06  38.152231 -119.666675    0   241        2.1      785140   \n36527  2021-12-30  38.152231 -119.666675  255   255        9.1      274113   \n36528  2021-11-28  38.152231 -119.666675  255   255        0.0      274081   \n36529  2021-10-17  38.152231 -119.666675    0   241        0.1      274039   \n       air_temperature_tmmn  potential_evapotranspiration  \\\n36525                 268.5                           1.9   \n36526                 266.2                           5.6   \n36527                 262.3                           2.6   \n36528                 274.4                           1.2   \n36529                 268.6                           3.4   \n       mean_vapor_pressure_deficit  relative_humidity_rmax  \\\n36525                         0.20               43.100002   \n36526                         0.76               64.600000   \n36527                         0.20               87.600000   \n36528                         1.02               68.200005   \n36529                         1.04               21.100000   \n       relative_humidity_rmin  precipitation_amount  air_temperature_tmmx  \\\n36525               39.400000              0.000000                 283.8   \n36526               28.300001              0.400000                 279.7   \n36527               45.600002              0.000000                 273.0   \n36528               69.400000             10.900001                 287.1   \n36529               35.800000              0.000000                 280.1   \n       wind_speed  elevation     slope  curvature     aspect  eastness  \\\n36525         4.5  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36526         5.0  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36527         3.2  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36528         3.3  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n36529         4.3  2895.7517  72.19921 -2794.3267  68.846054  0.750545   \n       northness  \n36525    0.34633  \n36526    0.34633  \n36527    0.34633  \n36528    0.34633  \n36529    0.34633  \nDone\n",
  "history_begin_time" : 1698104441502,
  "history_end_time" : 1698104444593,
  "history_notes" : null,
  "history_process" : "u5rmg2",
  "host_id" : null,
  "indicator" : "Done"
},]
