[{
  "history_id" : "82nyfe7mx2q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384114,
  "history_end_time" : 1720503992188,
  "history_notes" : null,
  "history_process" : "78vedq",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ypct0z5imxn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384115,
  "history_end_time" : 1720503992188,
  "history_notes" : null,
  "history_process" : "mxpyqt",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0sm1wmn7i9a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384116,
  "history_end_time" : 1720503992189,
  "history_notes" : null,
  "history_process" : "rauqsh",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zw01e37k1s4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384117,
  "history_end_time" : 1720503992189,
  "history_notes" : null,
  "history_process" : "u7xh2p",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "uoyb5p8b27o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384118,
  "history_end_time" : 1720503992190,
  "history_notes" : null,
  "history_process" : "e8k4wq",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hamkq1njyf2",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1720503992190,
  "history_notes" : null,
  "history_process" : "h1qp9v",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gdvymb1aenu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384122,
  "history_end_time" : 1720503992202,
  "history_notes" : null,
  "history_process" : "urd0nk",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jopygpb238z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384123,
  "history_end_time" : 1720503992202,
  "history_notes" : null,
  "history_process" : "525l8q",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2448h290mw4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384124,
  "history_end_time" : 1720503992202,
  "history_notes" : null,
  "history_process" : "7temiv",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "o5o84v959pu",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384125,
  "history_end_time" : 1720503992203,
  "history_notes" : null,
  "history_process" : "rmxece",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "g3o0o9cx9i2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384127,
  "history_end_time" : 1720503992203,
  "history_notes" : null,
  "history_process" : "illwc1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4mtn2b16yl9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384128,
  "history_end_time" : 1720503992203,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "siy01zxhim3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384129,
  "history_end_time" : 1720503992204,
  "history_notes" : null,
  "history_process" : "y7nb46",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "huzmvzylo7q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384130,
  "history_end_time" : 1720503992204,
  "history_notes" : null,
  "history_process" : "a8p3n7",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ujq950nbpcx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384131,
  "history_end_time" : 1720503992204,
  "history_notes" : null,
  "history_process" : "smsdr0",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bd3szfggs3d",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384132,
  "history_end_time" : 1720503992205,
  "history_notes" : null,
  "history_process" : "4i0sop",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hgobsjcqlsw",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1720503992205,
  "history_notes" : null,
  "history_process" : "b63prf",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "y6v3adzom2i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384135,
  "history_end_time" : 1720503992207,
  "history_notes" : null,
  "history_process" : "zh38b6",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "pstnmldgg3y",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384136,
  "history_end_time" : 1720503992208,
  "history_notes" : null,
  "history_process" : "wdh394",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "tb9rqzax2q5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384137,
  "history_end_time" : 1720503992208,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "eh0sw72ixwx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384138,
  "history_end_time" : 1720503992208,
  "history_notes" : null,
  "history_process" : "ilbqzg",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0g9xpirwrxi",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384139,
  "history_end_time" : 1720503992208,
  "history_notes" : null,
  "history_process" : "do86ae",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "x6nhahnsdsq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384141,
  "history_end_time" : 1720503992209,
  "history_notes" : null,
  "history_process" : "gkhtc0",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "h28jjuqsyjx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384142,
  "history_end_time" : 1720503992209,
  "history_notes" : null,
  "history_process" : "lbd6cp",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fq7zaog7te8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384143,
  "history_end_time" : 1720503992209,
  "history_notes" : null,
  "history_process" : "br9etb",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "iyrklhpq3au",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384144,
  "history_end_time" : 1720503992209,
  "history_notes" : null,
  "history_process" : "c2xkhz",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2t8k4s8grc0",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384145,
  "history_end_time" : 1720503992210,
  "history_notes" : null,
  "history_process" : "doinnd",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "yaj4obo5wkn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384146,
  "history_end_time" : 1720503992210,
  "history_notes" : null,
  "history_process" : "b7a4fu",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "l6khpid358t",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384148,
  "history_end_time" : 1720503992210,
  "history_notes" : null,
  "history_process" : "gnpbdq",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2w9cpelp86g",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384149,
  "history_end_time" : 1720503992210,
  "history_notes" : null,
  "history_process" : "oon4sb",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bk1wsloe24i",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384150,
  "history_end_time" : 1720503992211,
  "history_notes" : null,
  "history_process" : "fa7e4u",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8ptso7845hl",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1720503992211,
  "history_notes" : null,
  "history_process" : "drwmbo",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "g3esh4ykuq1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384152,
  "history_end_time" : 1720503992213,
  "history_notes" : null,
  "history_process" : "2n7b06",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "6cbgk9aph6u",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384153,
  "history_end_time" : 1720503992213,
  "history_notes" : null,
  "history_process" : "bwdy3s",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gb7ikkf3lub",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1720503992214,
  "history_notes" : null,
  "history_process" : "2wkl6e",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vnun80tabo3",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1720503992216,
  "history_notes" : null,
  "history_process" : "i2fynz",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "snjdi8pospm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384157,
  "history_end_time" : 1720503992218,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "q6w7xk9908m",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1720503992218,
  "history_notes" : null,
  "history_process" : "0n26v2",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1oiz193v4w4",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384160,
  "history_end_time" : 1720503992221,
  "history_notes" : null,
  "history_process" : "rvqv35",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8vy53h1bctn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384162,
  "history_end_time" : 1720503992222,
  "history_notes" : null,
  "history_process" : "6evkh4",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "arnwpp5c0u1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384164,
  "history_end_time" : 1720503992222,
  "history_notes" : null,
  "history_process" : "76ewp5",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "fsduh2ezvth",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384165,
  "history_end_time" : 1720503992222,
  "history_notes" : null,
  "history_process" : "5wzgx5",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "05at58zduk8",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384166,
  "history_end_time" : 1720503992222,
  "history_notes" : null,
  "history_process" : "d4zcq6",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "3b3t23j4krn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384167,
  "history_end_time" : 1720503992223,
  "history_notes" : null,
  "history_process" : "6x6myw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5edjjjm6exw",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384185,
  "history_end_time" : 1720503992223,
  "history_notes" : null,
  "history_process" : "r4knm9",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ckzbvdztbrs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384186,
  "history_end_time" : 1720503992223,
  "history_notes" : null,
  "history_process" : "9c573m",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0af9jifakx9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384188,
  "history_end_time" : 1720503992223,
  "history_notes" : null,
  "history_process" : "ee5ur4",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0nufh2lalpe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384190,
  "history_end_time" : 1720503992224,
  "history_notes" : null,
  "history_process" : "f03i7p",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "d910g8rji88",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384191,
  "history_end_time" : 1720503992224,
  "history_notes" : null,
  "history_process" : "83d2yv",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "b1hdd8pni0s",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384193,
  "history_end_time" : 1720503992224,
  "history_notes" : null,
  "history_process" : "j8swco",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ar93y2og4wl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384194,
  "history_end_time" : 1720503992224,
  "history_notes" : null,
  "history_process" : "pnr64x",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "b6v9op0fy30",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384195,
  "history_end_time" : 1720503992225,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "s0ogufo75jh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384197,
  "history_end_time" : 1720503992225,
  "history_notes" : null,
  "history_process" : "ggy7gf",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "n9qq5teayqa",
  "history_input" : "import os\nimport subprocess\nimport threading\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom pyproj import Transformer\nfrom rasterio.enums import Resampling\nimport numpy as np\n\nimport requests\nimport earthaccess\nfrom osgeo import gdal\nfrom snowcast_utils import work_dir, homedir, test_start_date, date_to_julian\nimport pandas as pd\nimport rasterio\nimport shutil\nimport time\nfrom convert_results_to_images import plot_all_variables_in_one_csv\nimport dask\nfrom dask import delayed\nimport dask.multiprocessing\nimport pyproj\n\n# change directory before running the code\nos.chdir(f\"{homedir}/fsca/\")\n\n\n\ntile_list = [\"h08v04\", \"h08v05\", \"h09v04\", \"h09v05\", \n             \"h10v04\", \"h10v05\", \"h11v04\", \"h11v05\", \n             \"h12v04\", \"h12v05\", \"h13v04\", \"h13v05\", \n             \"h15v04\", \"h16v03\", \"h16v04\", ]\ninput_folder = os.getcwd() + \"/temp/\"\noutput_folder = os.getcwd() + \"/output_folder/\"\nmodis_day_wise = os.getcwd() + \"/final_output/\"\nos.makedirs(output_folder, exist_ok=True)\nos.makedirs(modis_day_wise, exist_ok=True)\nwestern_us_coords = f'{work_dir}/dem_file.tif.csv'\nmapper_file = os.path.join(modis_day_wise, f'modis_to_dem_mapper.csv')\n\n\n@dask.delayed\ndef convert_hdf_to_geotiff(hdf_file, output_folder):\n    hdf_ds = gdal.Open(hdf_file, gdal.GA_ReadOnly)\n\n    target_subdataset_name = \"MOD_Grid_Snow_500m:NDSI_Snow_Cover\"\n    output_file_name = os.path.splitext(os.path.basename(hdf_file))[0] + \".tif\"\n    output_path = os.path.join(output_folder, output_file_name)\n\n    if os.path.exists(output_path):\n        return f\"The file {output_path} exists. skip.\"\n    else:\n        for subdataset in hdf_ds.GetSubDatasets():\n            if target_subdataset_name in subdataset[0]:\n                ds = gdal.Open(subdataset[0], gdal.GA_ReadOnly)\n                gdal.Translate(output_path, ds)\n                ds = None\n                break\n\n    hdf_ds = None\n    return f\"Converted {os.path.basename(hdf_file)} to GeoTIFF\"\n\ndef convert_all_hdf_in_folder(folder_path, output_folder):\n    file_list = []\n    delayed_tasks = []\n\n    for file in os.listdir(folder_path):\n        output_file_name = os.path.splitext(os.path.basename(file))[0] + \".tif\"\n        output_path = os.path.join(output_folder, output_file_name)\n        if os.path.exists(output_path):\n            # print(f\"The file {output_path} exists. skip.\")\n            continue\n        else:\n            file_list.append(file)\n            if file.lower().endswith(\".hdf\"):\n                hdf_file = os.path.join(folder_path, file)\n                task = convert_hdf_to_geotiff(hdf_file, output_folder)\n                delayed_tasks.append(task)\n\n    results = dask.compute(*delayed_tasks, scheduler=\"processes\")\n\n    return file_list, results\n\ndef get_env_var_for_gdalwarp():\n    if \"PROJ_LIB\" in os.environ:\n        os.environ.pop(\"PROJ_LIB\")\n        print(f\"Environment variable PROJ_LIB removed.\")\n    if \"GDAL_DATA\" in os.environ:\n        os.environ.pop(\"GDAL_DATA\")\n        print(f\"Environment variable GDAL_DATA removed.\")\n    return os.environ\n  \n\ndef merge_tifs(folder_path, target_date, output_file):\n  julian_date = date_to_julian(target_date)\n  print(\"target julian date\", julian_date)\n  tif_files = [os.path.join(folder_path, f) for f in os.listdir(folder_path) if f.endswith('.tif') and julian_date in f]\n  if len(tif_files) == 0:\n    print(f\"uh-oh, didn't find HDFs for date {target_date}\")\n    print(\"generate a new csv file with empty values for each point\")\n    gdal_command = ['/usr/bin/gdal_translate', \n                    '-b', '1', \n                    '-outsize', '100%', '100%', \n                    '-scale', '0', '255', '200', '200', \n                    f\"{modis_day_wise}/fsca_template.tif\", \n                    output_file]\n    print(\"Running \", \" \".join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n    #raise ValueError(f\"uh-oh, didn't find HDFs for date {target_date}\")\n  else:\n    # gdal_command = ['gdal_merge.py', '-o', output_file, '-of', 'GTiff', '-r', 'cubic'] + tif_files\n    #if 'PROJ_LIB' in os.environ:\n    #    del os.environ['PROJ_LIB']\n    print(\"pyproj.datadir.get_data_dir() = \", pyproj.datadir.get_data_dir())\n    gdal_command = ['/usr/bin/gdalwarp', '-r', 'min', ] + tif_files + [f\"{output_file}_500m.tif\"]\n    print(\"Running \", ' '.join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n    # gdalwarp -s_srs EPSG:4326 -t_srs EPSG:4326 -tr 0.036 0.036  -cutline template.shp -crop_to_cutline -overwrite output_4km.tif output_4km_clipped.tif\n    gdal_command = ['/usr/bin/gdalwarp', '-t_srs', 'EPSG:4326', '-tr', '0.036', '0.036', '-cutline', f'{work_dir}/template.shp', '-crop_to_cutline', '-overwrite', f\"{output_file}_500m.tif\", output_file]\n    print(\"Running \", \" \".join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n\n\ndef list_files(directory):\n  return [os.path.abspath(os.path.join(directory, f)) for f in os.listdir(directory) if\n          os.path.isfile(os.path.join(directory, f))]\n\n\ndef merge_tiles(date, hdf_files):\n  path = f\"data/{date}/\"\n  files = list_files(path)\n  print(files)\n  merged_filename = f\"data/{date}/merged.tif\"\n  merge_command = [\"/usr/bin/gdal_merge.py\", \"-o\", merged_filename, \"-of\", \"GTiff\"] + files\n  try:\n    subprocess.run(merge_command, env=get_env_var_for_gdalwarp())\n    print(f\"Merged tiles into {merged_filename}\")\n  except subprocess.CalledProcessError as e:\n    print(f\"Error merging tiles: {e}\")\n\n\ndef download_url(date, url):\n  file_name = url.split('/')[-1]\n  if os.path.exists(f'data/{date}/{file_name}'):\n    print(f'File: {file_name} already exists, SKIPPING')\n    return\n  try:\n    os.makedirs('data/', exist_ok=True)\n    os.makedirs(f'data/{date}', exist_ok=True)\n    response = requests.get(url, stream=True)\n    with open(f'data/{date}/{file_name}', 'wb') as f:\n      for chunk in response.iter_content(chunk_size=8192):\n        if chunk:\n          f.write(chunk)\n\n    print(f\"Downloaded {file_name}\")\n  except Exception as e:\n    print(f\"Error downloading {url}: {e}\")\n\n\ndef download_all(date, urls):\n  threads = []\n\n  for url in urls:\n    thread = threading.Thread(target=download_url, args=(date, url,))\n    thread.start()\n    threads.append(thread)\n\n  for thread in threads:\n    thread.join()\n\n\ndef delete_files_in_folder(folder_path):\n  if not os.path.exists(folder_path):\n    print(\"Folder does not exist.\")\n    return\n\n  for filename in os.listdir(folder_path):\n    file_path = os.path.join(folder_path, filename)\n    try:\n      if os.path.isfile(file_path) or os.path.islink(file_path):\n        os.unlink(file_path)\n      else:\n        print(f\"Skipping {filename}, as it is not a file.\")\n    except Exception as e:\n      print(f\"Failed to delete {file_path}. Reason: {e}\")\n\n\ndef download_tiles_and_merge(start_date, end_date):\n  date_list = [start_date + timedelta(days=i) for i in range((end_date - start_date).days + 1)]\n  for i in date_list:\n    current_date = i.strftime(\"%Y-%m-%d\")\n    target_output_tif = f'{modis_day_wise}/{current_date}__snow_cover.tif'\n    \n    if os.path.exists(target_output_tif):\n        file_size_bytes = os.path.getsize(target_output_tif)\n        print(f\"file_size_bytes: {file_size_bytes}\")\n        print(f\"The file {target_output_tif} exists. skip.\")\n    else:\n        print(f\"The file {target_output_tif} does not exist.\")\n        print(\"start to download files from NASA server to local\")\n        earthaccess.login(strategy=\"netrc\")\n        results = earthaccess.search_data(short_name=\"MOD10A1\", \n                                          cloud_hosted=False, \n                                          bounding_box=(-124.77, 24.52, -66.95, 49.38),\n                                          temporal=(current_date, current_date))\n        earthaccess.download(results, input_folder)\n        print(\"done with downloading, start to convert HDF to geotiff..\")\n\n        convert_all_hdf_in_folder(input_folder, output_folder)\n        print(\"done with conversion, start to merge geotiff tiles to one tif per day..\")\n\n        merge_tifs(folder_path=output_folder, target_date = current_date, output_file=target_output_tif)\n        print(f\"saved the merged tifs to {target_output_tif}\")\n    #delete_files_in_folder(input_folder)  # cleanup\n    #delete_files_in_folder(output_folder)  # cleanup\n\ndef get_value_at_coords(src, lat, lon, band_number=1):\n#     transformer = Transformer.from_crs(\"EPSG:4326\", src.crs, always_xy=True)\n#     east, north = transformer.transform(lon, lat)\n    if not (src.bounds.left <= lat <= src.bounds.right and src.bounds.bottom <= lon <= src.bounds.top):\n      return None\n    row, col = src.index(lat, lon)\n    if (0 <= row < src.height) and (0 <= col < src.width):\n      return src.read(band_number, window=((row, row+1), (col, col+1)), resampling=Resampling.nearest)[0, 0]\n    else:\n      return None\n\ndef get_band_value(row, src):\n    #row, col = src.index(row[\"Latitude\"], row[\"Longitude\"])\n    #print(row, col, src.height, src.width)\n    if (row[\"modis_y\"] < src.height) and (row[\"modis_x\"] < src.width):\n      valid_value =  src.read(1, \n                              window=((row[\"modis_y\"], \n                                       row[\"modis_y\"]+1), \n                                      (row[\"modis_x\"], \n                                       row[\"modis_x\"]+1))\n                             )\n      #print(\"extracted value array: \", valid_value)\n      #print(\"Found a valid value: \",row, valid_value, src.height, src.width)\n      return valid_value[0,0]\n    else:\n      return None\n          \ndef process_file(file_path, current_date):\n    \"\"\"\n    Process a raster file, extract values for specific coordinates, and save the result in a CSV file.\n\n    Parameters:\n    - file_path (str): Path to the raster file to be processed.\n    - current_date (str): Current date to be associated with the processed data.\n\n    Returns:\n    - str: Path to the saved CSV file containing the processed data.\n    \"\"\"\n\n    # Read the station DataFrame from a mapper file (assuming `mapper_file` is defined elsewhere)\n    station_df = pd.read_csv(mapper_file)\n    print(f\"Opening {file_path}\")\n\n    # Open the raster file using rasterio\n    with rasterio.open(file_path) as src:\n        # Apply get_band_value for each row in the DataFrame\n        station_df['fsca'] = station_df.apply(get_band_value, axis=1, args=(src,))\n\n    # Filter out None values\n    valid_data = station_df[station_df['fsca'].notna()]\n\n    # Prepare final data\n    valid_data['date'] = current_date\n    output_file = os.path.join(modis_day_wise, f'{current_date}_output.csv')\n    print(f\"Saving CSV file: {output_file}\")\n    valid_data.to_csv(output_file, index=False, columns=['date', 'Latitude', 'Longitude', 'fsca'])\n    \n    return output_file\n\n\ndef merge_cumulative_csv(start_date, end_date, force):\n  \n  current_date = start_date\n  target_date = end_date\n  \n  input_time_series_file = f\"{modis_day_wise}/{end_date.strftime('%Y-%m-%d')}_output_with_time_series.csv\"\n  target_cumulative_file = f\"{modis_day_wise}/{end_date.strftime('%Y-%m-%d')}_output.csv_cumulative.csv\"\n  \n  if os.path.exists(target_cumulative_file) and not force:\n    print(f\"file already exists {target_cumulative_file}\")\n    return\n  \n  df = pd.read_csv(input_time_series_file)\n\n  # add all the columns together and save to new csv\n  # Adding all columns except latitude and longitude\n  df = df.apply(pd.to_numeric, errors='coerce')\n\n  #new_df = new_df.head(2000)\n\n  fsca_cols = [col for col in df.columns if col.startswith('fsca')]\n  print(\"fsca_cols are: \", fsca_cols)\n  \n  df['cumulative_fsca'] = df[fsca_cols].sum(axis=1)\n\n  df = df.loc[:, ['Latitude', 'Longitude', f\"fsca\", 'cumulative_fsca']]\n  df[\"date\"] = end_date\n\n  print(\"new_df final shape: \", df.head())\n  df.to_csv(target_cumulative_file, index=False)\n  print(f\"new df is saved to {target_cumulative_file}\")\n\n  print(df['cumulative_fsca'].describe(include='all'))\n\ndef add_cumulative_column(df, column_name):\n  df[f'cumulative_{column_name}'] = df[column_name].cumsum()\n  return df\n\n# Function to perform polynomial interpolation and fill in missing values\ndef interpolate_missing_and_add_cumulative_inplace(row, column_name, degree=1):\n  \"\"\"\n  Interpolate missing values in a Pandas Series using polynomial interpolation\n  and add a cumulative column.\n\n  Parameters:\n    - row (pd.Series): The input row containing the data to be interpolated.\n    - column_name (str): The name of the column to be interpolated.\n    - degree (int, optional): The degree of the polynomial fit. Default is 1 (linear).\n\n  Returns:\n    - pd.Series: The row with interpolated values and a cumulative column.\n\n  Raises:\n    - ValueError: If there are unexpected null values after interpolation.\n\n  Note:\n    - For 'SWE' column, values above 240 are treated as gaps and set to 240.\n    - For 'fsca' column, values above 100 are treated as gaps and set to 100.\n\n  Examples:\n    ```python\n    # Example usage:\n    interpolated_row = interpolate_missing_and_add_cumulative_inplace(my_row, 'fsca', degree=2)\n    ```\n\n  \"\"\"\n  \n  # Extract X series (column names)\n  x_key = row.index\n  x = np.arange(len(x_key))\n\n  # Extract Y series (values from the first row)\n  y = row\n  \n\n  # Create a mask for missing values\n  if column_name == \"SWE\":\n    mask = (y > 240) | y.isnull()\n  elif column_name == \"fsca\":\n    y = y.replace([225, 237, 239], 0)\n    y[y < 0] = 0\n    mask = (y > 100) | y.isnull()\n  else:\n    mask = y.isnull()\n\n  # Check if all elements in the mask array are True\n  all_true = np.all(mask)\n\n  if all_true or len(np.where(~mask)[0]) == 1:\n    row.values[:] = 0\n  else:\n    # Perform interpolation\n    #new_y = np.interp(x, x[~mask], y[~mask])\n    # Replace missing values with interpolated values\n    #df[column_name] = new_y\n    \n    try:\n      # Coefficients of the polynomial fit\n      coefficients = np.polyfit(x[~mask], y[~mask], deg=degree)\n\n      # Perform polynomial interpolation\n      interpolated_values = np.polyval(coefficients, x)\n\n      # Merge using np.where\n      merged_array = np.where(mask, interpolated_values, y)\n\n      row = pd.Series(merged_array, index=x_key)\n    except Exception as e:\n      # Print the error message and traceback\n      import traceback\n      traceback.print_exc()\n      print(\"x:\", x)\n      print(\"y:\", y)\n      print(\"mask:\", mask)\n      print(f\"Error: {e}\")\n      raise e\n      \n    if column_name == \"AMSR_SWE\":\n      row = row.clip(upper=240, lower=0)\n    elif column_name == \"fsca\":\n      row = row.clip(upper=100, lower=0)\n\n    if row.isnull().any():\n      print(\"x:\", x)\n      print(\"y:\", y)\n      print(\"mask:\", mask)\n      print(\"why row still has values > 100\", row)\n      raise ValueError(\"Single group: shouldn't have null values here\")\n\n  \n  # create the cumulative column after interpolation\n  row[f\"cumulative_{column_name}\"] = row.sum()\n  return row\n\n\ndef add_time_series_columns(start_date, end_date, force=True):\n  \"\"\"\n  Converts data from a cleaned CSV file into a time series format.\n\n  This function reads a cleaned CSV file, sorts the data, fills in missing values using polynomial interpolation,\n  and creates a time series dataset for specific columns. The resulting time series data is saved to a new CSV file.\n\n  Parameters:\n    - start_date (str): The start date of the time series data in the format 'YYYY-MM-DD'.\n    - end_date (str): The end date of the time series data in the format 'YYYY-MM-DD'.\n    - force (bool, optional): If True, forces the regeneration of time series data even if the output file exists.\n\n    Returns:\n    - None: The function primarily generates time series data and saves it to a CSV file with side effects.\n\n  Example:\n    ```python\n    add_time_series_columns('2022-01-01', '2022-12-31', force=True)\n    ```\n\n  \"\"\"\n  current_date = start_date\n  target_date = end_date\n  target_date_str = target_date.strftime('%Y-%m-%d')\n  \n  output_csv = f\"{modis_day_wise}/{target_date_str}_output_with_time_series.csv\"\n  print(f\"add_time_series_columns target csv: {output_csv}\")\n        \n  if os.path.exists(output_csv) and not force:\n    print(f\"{output_csv} already exists, skipping..\")\n    return\n  \n  backup_time_series_csv_path = f\"{modis_day_wise}/{target_date_str}_output_with_time_series_backup.csv\"\n  \n  columns_to_be_time_series = ['fsca']\n\n  # Read the all the column merged CSV\n  \n  date_keyed_objects = {}\n  data_dict = {}\n  new_df = None\n  while current_date <= end_date:\n    \n    current_date_str = current_date.strftime('%Y-%m-%d')\n  \n    data_dict[current_date_str] = f\"{modis_day_wise}/{current_date_str}_output.csv\"\n    #print(data_dict[current_date_str])\n    current_df = pd.read_csv(data_dict[current_date_str])\n    current_df.drop([\"date\"], axis=1, inplace=True)\n    \n    if current_date != end_date:\n      current_df.rename(columns={\"fsca\": f\"fsca_{current_date_str}\"}, inplace=True)\n    #print(current_df.head())\n    \n    if new_df is None:\n      new_df = current_df\n    else:\n      new_df = pd.merge(new_df, current_df, on=['Latitude', 'Longitude'])\n      #new_df = new_df.append(current_df, ignore_index=True)\n\n    current_date += timedelta(days=1)\n\n  print(\"new_df.columns = \", new_df.columns)\n  print(new_df.head())\n  \n  df = new_df\n        \n  gap_filled_csv = f\"{output_csv}_gap_filled.csv\"\n  if os.path.exists(gap_filled_csv) and not force:\n    print(f\"{gap_filled_csv} already exists, skipping..\")\n    df = pd.read_csv(gap_filled_csv)\n    print(df[\"fsca\"].describe())\n  else:\n    print(\"All current columns: \", df.columns)\n    \n    \n    print(\"Start to fill in the missing values\")\n    print(\"all the df shape: \", df.shape)\n    filled_data = pd.DataFrame()\n    \n    num_days = 7\n    filtered_columns = df.filter(like=\"fsca\")\n    print(filtered_columns.columns)\n    filtered_columns = filtered_columns.mask(filtered_columns > 100)\n    filtered_columns.interpolate(axis=1, method='linear', inplace=True)\n    filtered_columns.fillna(0, inplace=True)\n\n    sum_column = filtered_columns.sum(axis=1)\n    # Define a specific name for the new column\n    df[f'cumulative_fsca'] = sum_column\n    df[filtered_columns.columns] = filtered_columns\n\n    if filtered_columns.isnull().any().any():\n      print(\"filtered_columns :\", filtered_columns)\n      raise ValueError(\"Single group: shouldn't have null values here\")\n    \n    filled_data = df\n    filled_data[\"date\"] = target_date_str\n    #filled_data.fillna(0, inplace=True)\n  \n    if any(filled_data['fsca'] > 100):\n      raise ValueError(\"Error: shouldn't have fsca > 100 at this point\")\n\n    print(\"Finished correctly \", filled_data.head())\n    filled_data.to_csv(gap_filled_csv, index=False)\n    print(f\"New filled values csv is saved to {output_csv}_gap_filled.csv\")\n    df = filled_data\n  \n  result = df\n  print(result['date'].unique())\n  print(result.shape)\n  print(result[\"fsca\"].describe())\n  result.to_csv(output_csv, index=False)\n  print(f\"New data is saved to {output_csv}\")\n  shutil.copy(output_csv, backup_time_series_csv_path)\n  print(f\"File is backed up to {backup_time_series_csv_path}\")\n  cumulative_file_path =  f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n  shutil.copy(output_csv, cumulative_file_path)\n  \n#   input_time_series_file = f\"{modis_day_wise}/{test_start_date}_output_with_time_series.csv_gap_filled.csv\"\n#   target_cumulative_file = f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n#   shutil.copy(input_time_series_file, target_cumulative_file)\n  \n\n\ndef map_modis_to_station(row, src):\n#   transformer = Transformer.from_crs(\"EPSG:4326\", \n#                                      src.crs, \n#                                      always_xy=True)\n#   east, north = transformer.transform(row[\"Longitude\"], \n#                                       row[\"Latitude\"])\n  drow, dcol = src.index(row[\"Longitude\"], row[\"Latitude\"])\n  return drow, dcol\n  \n  \ndef prepare_modis_grid_mapper():\n  \"\"\"\n  Prepares a mapper file to map coordinates between station coordinates and MODIS grid coordinates.\n\n    This function performs the following steps:\n    1. Checks if the mapper file already exists. If yes, the function skips the generation process.\n    2. Reads station coordinates from a CSV file (`western_us_coords`) containing 'Longitude' and 'Latitude'.\n    3. Uses a sample MODIS TIFF file (`sample_modis_tif`) to map MODIS grid coordinates ('modis_x' and 'modis_y') to station coordinates.\n    4. Saves the resulting mapper file as a CSV (`mapper_file`) containing columns 'Latitude', 'Longitude', 'modis_x', and 'modis_y'.\n\n    Note: Ensure that necessary functions like `map_modis_to_station` are defined and available in the same scope.\n\n    Returns:\n    - None: The function primarily generates the mapper file with side effects.\n\n    Example:\n    ```python\n    prepare_modis_grid_mapper()\n    ```\n\n  \"\"\"\n  # actually, not sure this applied for modis. The tile HDF must be exactly same extent to make this work. Otherwise, the mapper won't get usable. \n  \n  if os.path.exists(mapper_file):\n    print(f\"The file {mapper_file} exists. skip.\")\n  else:\n    print(f\"start to generate {mapper_file}\")\n    station_df = pd.read_csv(western_us_coords, low_memory=False, usecols=['Longitude', 'Latitude'])\n\n    sample_modis_tif = f\"{modis_day_wise}/2022-10-01__snow_cover.tif\"\n\n    with rasterio.open(sample_modis_tif) as src:\n      # Apply get_band_value for each row in the DataFrame\n      station_df['modis_y'], station_df['modis_x'] = zip(*station_df.apply(map_modis_to_station, axis=1, args=(src,)))\n\n\n      print(f\"Saving mapper csv file: {mapper_file}\")\n      station_df.to_csv(mapper_file, index=False, columns=['Latitude', 'Longitude', 'modis_x', 'modis_y'])\n    \ndef extract_data_for_testing():\n  \"\"\"\n    Extracts and processes MODIS data for testing purposes within a specified date range.\n\n    This function performs the following steps:\n    1. Determines the start and end dates based on the `test_start_date`.\n    2. Prepares the MODIS grid mapper using `prepare_modis_grid_mapper`.\n    3. Downloads, tiles, and merges MODIS data between the determined start and end dates using `download_tiles_and_merge`.\n    4. Iterates through each day in the date range, extracting data and saving it as day-wise CSV files using `process_file`.\n    5. Adds time series columns to the extracted data using `add_time_series_columns`.\n    6. Creates a cumulative CSV file by copying the output file with time series information.\n\n    Note: Ensure that necessary functions like `prepare_modis_grid_mapper`, `download_tiles_and_merge`, \n    `process_file`, and `add_time_series_columns` are defined and available in the same scope.\n\n    Returns:\n    - None: The function primarily performs data extraction and processing with side effects.\n\n    Example:\n    ```python\n    extract_data_for_testing()\n    ```\n\n  \"\"\"\n  print(\"get test_start_date = \", test_start_date)\n  end_date = datetime.strptime(test_start_date, \"%Y-%m-%d\")\n  print(end_date)\n  if end_date.month < 10:\n    past_october_1 = datetime(end_date.year - 1, 10, 1)\n  else:\n    past_october_1 = datetime(end_date.year, 10, 1)\n  \n  start_date = past_october_1\n  print(f\"The start_date of the water year {start_date}\")\n  \n  prepare_modis_grid_mapper()\n  \n  download_tiles_and_merge(start_date, end_date)\n  \n  date_list = [start_date + timedelta(days=i) for i in range((end_date - start_date).days + 1)]\n  for i in date_list:\n    current_date = i.strftime(\"%Y-%m-%d\")\n    print(f\"extracting data for {current_date}\")\n    outfile = os.path.join(modis_day_wise, f'{current_date}_output.csv')\n    if os.path.exists(outfile):\n      print(f\"The file {outfile} exists. skip.\")\n    else:\n      process_file(f'{modis_day_wise}/{current_date}__snow_cover.tif', current_date)\n  \n  add_time_series_columns(start_date, end_date, force=False)\n  \n  \n\nif __name__ == \"__main__\":\n  extract_data_for_testing()\n\n  # cumulative_file_path =  f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n  # plot_all_variables_in_one_csv(cumulative_file_path, f\"{cumulative_file_path}.png\")\n\n  # SnowCover is missing from 10-12 to 10-23\n  #download_tiles_and_merge(datetime.strptime(\"2022-10-24\", \"%Y-%m-%d\"), datetime.strptime(\"2022-10-24\", \"%Y-%m-%d\"))\n\n",
  "history_output" : "today date = 2024-07-09\nDate variable not found in the environment.\n2024-07-06\ntest start date:  2024-07-06\ntest end date:  2024-5-19\n/home/chetana\nget test_start_date =  2024-07-06\n2024-07-06 00:00:00\nThe start_date of the water year 2023-10-01 00:00:00\nThe file /home/chetana/fsca/final_output/modis_to_dem_mapper.csv exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2023-10-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2023-10-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509484\nThe file /home/chetana/fsca/final_output//2023-10-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509484\nThe file /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2023-10-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2023-10-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-10-31__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2023-11-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-11-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2023-12-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2023-12-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2023-12-31__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509336\nThe file /home/chetana/fsca/final_output//2024-01-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-01-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-01-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-01-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-01-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-01-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-01-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-01-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-01-31__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-02-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-02-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-02-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509154\nThe file /home/chetana/fsca/final_output//2024-02-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-02-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509304\nThe file /home/chetana/fsca/final_output//2024-02-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509304\nThe file /home/chetana/fsca/final_output//2024-02-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-02-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-02-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-02-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-03-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-03-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509336\nThe file /home/chetana/fsca/final_output//2024-03-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-03-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-03-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-03-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-03-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-03-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-03-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-03-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-03-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-03-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-03-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-03-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509388\nThe file /home/chetana/fsca/final_output//2024-03-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-03-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-03-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-03-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509282\nThe file /home/chetana/fsca/final_output//2024-03-31__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-04-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-04-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-04-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-04-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509336\nThe file /home/chetana/fsca/final_output//2024-04-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-04-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-04-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-05-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-05-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-05-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-05-31__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-06-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-06-06__snow_cover.tif exists. skip.\nfile_size_bytes: 509336\nThe file /home/chetana/fsca/final_output//2024-06-07__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-06-08__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-09__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-10__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-11__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-12__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-06-13__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-14__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-15__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-06-16__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-17__snow_cover.tif exists. skip.\nfile_size_bytes: 509354\nThe file /home/chetana/fsca/final_output//2024-06-18__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-19__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2024-06-20__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-21__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-22__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-23__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-24__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-25__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-26__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-27__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-28__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-29__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-06-30__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-07-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-07-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-07-03__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-07-04__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-07-05__snow_cover.tif exists. skip.\nfile_size_bytes: 509308\nThe file /home/chetana/fsca/final_output//2024-07-06__snow_cover.tif exists. skip.\nextracting data for 2023-10-01\nThe file /home/chetana/fsca/final_output/2023-10-01_output.csv exists. skip.\nextracting data for 2023-10-02\nThe file /home/chetana/fsca/final_output/2023-10-02_output.csv exists. skip.\nextracting data for 2023-10-03\nThe file /home/chetana/fsca/final_output/2023-10-03_output.csv exists. skip.\nextracting data for 2023-10-04\nThe file /home/chetana/fsca/final_output/2023-10-04_output.csv exists. skip.\nextracting data for 2023-10-05\nThe file /home/chetana/fsca/final_output/2023-10-05_output.csv exists. skip.\nextracting data for 2023-10-06\nThe file /home/chetana/fsca/final_output/2023-10-06_output.csv exists. skip.\nextracting data for 2023-10-07\nThe file /home/chetana/fsca/final_output/2023-10-07_output.csv exists. skip.\nextracting data for 2023-10-08\nThe file /home/chetana/fsca/final_output/2023-10-08_output.csv exists. skip.\nextracting data for 2023-10-09\nThe file /home/chetana/fsca/final_output/2023-10-09_output.csv exists. skip.\nextracting data for 2023-10-10\nThe file /home/chetana/fsca/final_output/2023-10-10_output.csv exists. skip.\nextracting data for 2023-10-11\nThe file /home/chetana/fsca/final_output/2023-10-11_output.csv exists. skip.\nextracting data for 2023-10-12\nThe file /home/chetana/fsca/final_output/2023-10-12_output.csv exists. skip.\nextracting data for 2023-10-13\nThe file /home/chetana/fsca/final_output/2023-10-13_output.csv exists. skip.\nextracting data for 2023-10-14\nThe file /home/chetana/fsca/final_output/2023-10-14_output.csv exists. skip.\nextracting data for 2023-10-15\nThe file /home/chetana/fsca/final_output/2023-10-15_output.csv exists. skip.\nextracting data for 2023-10-16\nThe file /home/chetana/fsca/final_output/2023-10-16_output.csv exists. skip.\nextracting data for 2023-10-17\nThe file /home/chetana/fsca/final_output/2023-10-17_output.csv exists. skip.\nextracting data for 2023-10-18\nThe file /home/chetana/fsca/final_output/2023-10-18_output.csv exists. skip.\nextracting data for 2023-10-19\nThe file /home/chetana/fsca/final_output/2023-10-19_output.csv exists. skip.\nextracting data for 2023-10-20\nThe file /home/chetana/fsca/final_output/2023-10-20_output.csv exists. skip.\nextracting data for 2023-10-21\nThe file /home/chetana/fsca/final_output/2023-10-21_output.csv exists. skip.\nextracting data for 2023-10-22\nThe file /home/chetana/fsca/final_output/2023-10-22_output.csv exists. skip.\nextracting data for 2023-10-23\nThe file /home/chetana/fsca/final_output/2023-10-23_output.csv exists. skip.\nextracting data for 2023-10-24\nThe file /home/chetana/fsca/final_output/2023-10-24_output.csv exists. skip.\nextracting data for 2023-10-25\nThe file /home/chetana/fsca/final_output/2023-10-25_output.csv exists. skip.\nextracting data for 2023-10-26\nThe file /home/chetana/fsca/final_output/2023-10-26_output.csv exists. skip.\nextracting data for 2023-10-27\nThe file /home/chetana/fsca/final_output/2023-10-27_output.csv exists. skip.\nextracting data for 2023-10-28\nThe file /home/chetana/fsca/final_output/2023-10-28_output.csv exists. skip.\nextracting data for 2023-10-29\nThe file /home/chetana/fsca/final_output/2023-10-29_output.csv exists. skip.\nextracting data for 2023-10-30\nThe file /home/chetana/fsca/final_output/2023-10-30_output.csv exists. skip.\nextracting data for 2023-10-31\nThe file /home/chetana/fsca/final_output/2023-10-31_output.csv exists. skip.\nextracting data for 2023-11-01\nThe file /home/chetana/fsca/final_output/2023-11-01_output.csv exists. skip.\nextracting data for 2023-11-02\nThe file /home/chetana/fsca/final_output/2023-11-02_output.csv exists. skip.\nextracting data for 2023-11-03\nThe file /home/chetana/fsca/final_output/2023-11-03_output.csv exists. skip.\nextracting data for 2023-11-04\nThe file /home/chetana/fsca/final_output/2023-11-04_output.csv exists. skip.\nextracting data for 2023-11-05\nThe file /home/chetana/fsca/final_output/2023-11-05_output.csv exists. skip.\nextracting data for 2023-11-06\nThe file /home/chetana/fsca/final_output/2023-11-06_output.csv exists. skip.\nextracting data for 2023-11-07\nThe file /home/chetana/fsca/final_output/2023-11-07_output.csv exists. skip.\nextracting data for 2023-11-08\nThe file /home/chetana/fsca/final_output/2023-11-08_output.csv exists. skip.\nextracting data for 2023-11-09\nThe file /home/chetana/fsca/final_output/2023-11-09_output.csv exists. skip.\nextracting data for 2023-11-10\nThe file /home/chetana/fsca/final_output/2023-11-10_output.csv exists. skip.\nextracting data for 2023-11-11\nThe file /home/chetana/fsca/final_output/2023-11-11_output.csv exists. skip.\nextracting data for 2023-11-12\nThe file /home/chetana/fsca/final_output/2023-11-12_output.csv exists. skip.\nextracting data for 2023-11-13\nThe file /home/chetana/fsca/final_output/2023-11-13_output.csv exists. skip.\nextracting data for 2023-11-14\nThe file /home/chetana/fsca/final_output/2023-11-14_output.csv exists. skip.\nextracting data for 2023-11-15\nThe file /home/chetana/fsca/final_output/2023-11-15_output.csv exists. skip.\nextracting data for 2023-11-16\nThe file /home/chetana/fsca/final_output/2023-11-16_output.csv exists. skip.\nextracting data for 2023-11-17\nThe file /home/chetana/fsca/final_output/2023-11-17_output.csv exists. skip.\nextracting data for 2023-11-18\nThe file /home/chetana/fsca/final_output/2023-11-18_output.csv exists. skip.\nextracting data for 2023-11-19\nThe file /home/chetana/fsca/final_output/2023-11-19_output.csv exists. skip.\nextracting data for 2023-11-20\nThe file /home/chetana/fsca/final_output/2023-11-20_output.csv exists. skip.\nextracting data for 2023-11-21\nThe file /home/chetana/fsca/final_output/2023-11-21_output.csv exists. skip.\nextracting data for 2023-11-22\nThe file /home/chetana/fsca/final_output/2023-11-22_output.csv exists. skip.\nextracting data for 2023-11-23\nThe file /home/chetana/fsca/final_output/2023-11-23_output.csv exists. skip.\nextracting data for 2023-11-24\nThe file /home/chetana/fsca/final_output/2023-11-24_output.csv exists. skip.\nextracting data for 2023-11-25\nThe file /home/chetana/fsca/final_output/2023-11-25_output.csv exists. skip.\nextracting data for 2023-11-26\nThe file /home/chetana/fsca/final_output/2023-11-26_output.csv exists. skip.\nextracting data for 2023-11-27\nThe file /home/chetana/fsca/final_output/2023-11-27_output.csv exists. skip.\nextracting data for 2023-11-28\nThe file /home/chetana/fsca/final_output/2023-11-28_output.csv exists. skip.\nextracting data for 2023-11-29\nThe file /home/chetana/fsca/final_output/2023-11-29_output.csv exists. skip.\nextracting data for 2023-11-30\nThe file /home/chetana/fsca/final_output/2023-11-30_output.csv exists. skip.\nextracting data for 2023-12-01\nThe file /home/chetana/fsca/final_output/2023-12-01_output.csv exists. skip.\nextracting data for 2023-12-02\nThe file /home/chetana/fsca/final_output/2023-12-02_output.csv exists. skip.\nextracting data for 2023-12-03\nThe file /home/chetana/fsca/final_output/2023-12-03_output.csv exists. skip.\nextracting data for 2023-12-04\nThe file /home/chetana/fsca/final_output/2023-12-04_output.csv exists. skip.\nextracting data for 2023-12-05\nThe file /home/chetana/fsca/final_output/2023-12-05_output.csv exists. skip.\nextracting data for 2023-12-06\nThe file /home/chetana/fsca/final_output/2023-12-06_output.csv exists. skip.\nextracting data for 2023-12-07\nThe file /home/chetana/fsca/final_output/2023-12-07_output.csv exists. skip.\nextracting data for 2023-12-08\nThe file /home/chetana/fsca/final_output/2023-12-08_output.csv exists. skip.\nextracting data for 2023-12-09\nThe file /home/chetana/fsca/final_output/2023-12-09_output.csv exists. skip.\nextracting data for 2023-12-10\nThe file /home/chetana/fsca/final_output/2023-12-10_output.csv exists. skip.\nextracting data for 2023-12-11\nThe file /home/chetana/fsca/final_output/2023-12-11_output.csv exists. skip.\nextracting data for 2023-12-12\nThe file /home/chetana/fsca/final_output/2023-12-12_output.csv exists. skip.\nextracting data for 2023-12-13\nThe file /home/chetana/fsca/final_output/2023-12-13_output.csv exists. skip.\nextracting data for 2023-12-14\nThe file /home/chetana/fsca/final_output/2023-12-14_output.csv exists. skip.\nextracting data for 2023-12-15\nThe file /home/chetana/fsca/final_output/2023-12-15_output.csv exists. skip.\nextracting data for 2023-12-16\nThe file /home/chetana/fsca/final_output/2023-12-16_output.csv exists. skip.\nextracting data for 2023-12-17\nThe file /home/chetana/fsca/final_output/2023-12-17_output.csv exists. skip.\nextracting data for 2023-12-18\nThe file /home/chetana/fsca/final_output/2023-12-18_output.csv exists. skip.\nextracting data for 2023-12-19\nThe file /home/chetana/fsca/final_output/2023-12-19_output.csv exists. skip.\nextracting data for 2023-12-20\nThe file /home/chetana/fsca/final_output/2023-12-20_output.csv exists. skip.\nextracting data for 2023-12-21\nThe file /home/chetana/fsca/final_output/2023-12-21_output.csv exists. skip.\nextracting data for 2023-12-22\nThe file /home/chetana/fsca/final_output/2023-12-22_output.csv exists. skip.\nextracting data for 2023-12-23\nThe file /home/chetana/fsca/final_output/2023-12-23_output.csv exists. skip.\nextracting data for 2023-12-24\nThe file /home/chetana/fsca/final_output/2023-12-24_output.csv exists. skip.\nextracting data for 2023-12-25\nThe file /home/chetana/fsca/final_output/2023-12-25_output.csv exists. skip.\nextracting data for 2023-12-26\nThe file /home/chetana/fsca/final_output/2023-12-26_output.csv exists. skip.\nextracting data for 2023-12-27\nThe file /home/chetana/fsca/final_output/2023-12-27_output.csv exists. skip.\nextracting data for 2023-12-28\nThe file /home/chetana/fsca/final_output/2023-12-28_output.csv exists. skip.\nextracting data for 2023-12-29\nThe file /home/chetana/fsca/final_output/2023-12-29_output.csv exists. skip.\nextracting data for 2023-12-30\nThe file /home/chetana/fsca/final_output/2023-12-30_output.csv exists. skip.\nextracting data for 2023-12-31\nThe file /home/chetana/fsca/final_output/2023-12-31_output.csv exists. skip.\nextracting data for 2024-01-01\nThe file /home/chetana/fsca/final_output/2024-01-01_output.csv exists. skip.\nextracting data for 2024-01-02\nThe file /home/chetana/fsca/final_output/2024-01-02_output.csv exists. skip.\nextracting data for 2024-01-03\nThe file /home/chetana/fsca/final_output/2024-01-03_output.csv exists. skip.\nextracting data for 2024-01-04\nThe file /home/chetana/fsca/final_output/2024-01-04_output.csv exists. skip.\nextracting data for 2024-01-05\nThe file /home/chetana/fsca/final_output/2024-01-05_output.csv exists. skip.\nextracting data for 2024-01-06\nThe file /home/chetana/fsca/final_output/2024-01-06_output.csv exists. skip.\nextracting data for 2024-01-07\nThe file /home/chetana/fsca/final_output/2024-01-07_output.csv exists. skip.\nextracting data for 2024-01-08\nThe file /home/chetana/fsca/final_output/2024-01-08_output.csv exists. skip.\nextracting data for 2024-01-09\nThe file /home/chetana/fsca/final_output/2024-01-09_output.csv exists. skip.\nextracting data for 2024-01-10\nThe file /home/chetana/fsca/final_output/2024-01-10_output.csv exists. skip.\nextracting data for 2024-01-11\nThe file /home/chetana/fsca/final_output/2024-01-11_output.csv exists. skip.\nextracting data for 2024-01-12\nThe file /home/chetana/fsca/final_output/2024-01-12_output.csv exists. skip.\nextracting data for 2024-01-13\nThe file /home/chetana/fsca/final_output/2024-01-13_output.csv exists. skip.\nextracting data for 2024-01-14\nThe file /home/chetana/fsca/final_output/2024-01-14_output.csv exists. skip.\nextracting data for 2024-01-15\nThe file /home/chetana/fsca/final_output/2024-01-15_output.csv exists. skip.\nextracting data for 2024-01-16\nThe file /home/chetana/fsca/final_output/2024-01-16_output.csv exists. skip.\nextracting data for 2024-01-17\nThe file /home/chetana/fsca/final_output/2024-01-17_output.csv exists. skip.\nextracting data for 2024-01-18\nThe file /home/chetana/fsca/final_output/2024-01-18_output.csv exists. skip.\nextracting data for 2024-01-19\nThe file /home/chetana/fsca/final_output/2024-01-19_output.csv exists. skip.\nextracting data for 2024-01-20\nThe file /home/chetana/fsca/final_output/2024-01-20_output.csv exists. skip.\nextracting data for 2024-01-21\nThe file /home/chetana/fsca/final_output/2024-01-21_output.csv exists. skip.\nextracting data for 2024-01-22\nThe file /home/chetana/fsca/final_output/2024-01-22_output.csv exists. skip.\nextracting data for 2024-01-23\nThe file /home/chetana/fsca/final_output/2024-01-23_output.csv exists. skip.\nextracting data for 2024-01-24\nThe file /home/chetana/fsca/final_output/2024-01-24_output.csv exists. skip.\nextracting data for 2024-01-25\nThe file /home/chetana/fsca/final_output/2024-01-25_output.csv exists. skip.\nextracting data for 2024-01-26\nThe file /home/chetana/fsca/final_output/2024-01-26_output.csv exists. skip.\nextracting data for 2024-01-27\nThe file /home/chetana/fsca/final_output/2024-01-27_output.csv exists. skip.\nextracting data for 2024-01-28\nThe file /home/chetana/fsca/final_output/2024-01-28_output.csv exists. skip.\nextracting data for 2024-01-29\nThe file /home/chetana/fsca/final_output/2024-01-29_output.csv exists. skip.\nextracting data for 2024-01-30\nThe file /home/chetana/fsca/final_output/2024-01-30_output.csv exists. skip.\nextracting data for 2024-01-31\nThe file /home/chetana/fsca/final_output/2024-01-31_output.csv exists. skip.\nextracting data for 2024-02-01\nThe file /home/chetana/fsca/final_output/2024-02-01_output.csv exists. skip.\nextracting data for 2024-02-02\nThe file /home/chetana/fsca/final_output/2024-02-02_output.csv exists. skip.\nextracting data for 2024-02-03\nThe file /home/chetana/fsca/final_output/2024-02-03_output.csv exists. skip.\nextracting data for 2024-02-04\nThe file /home/chetana/fsca/final_output/2024-02-04_output.csv exists. skip.\nextracting data for 2024-02-05\nThe file /home/chetana/fsca/final_output/2024-02-05_output.csv exists. skip.\nextracting data for 2024-02-06\nThe file /home/chetana/fsca/final_output/2024-02-06_output.csv exists. skip.\nextracting data for 2024-02-07\nThe file /home/chetana/fsca/final_output/2024-02-07_output.csv exists. skip.\nextracting data for 2024-02-08\nThe file /home/chetana/fsca/final_output/2024-02-08_output.csv exists. skip.\nextracting data for 2024-02-09\nThe file /home/chetana/fsca/final_output/2024-02-09_output.csv exists. skip.\nextracting data for 2024-02-10\nThe file /home/chetana/fsca/final_output/2024-02-10_output.csv exists. skip.\nextracting data for 2024-02-11\nThe file /home/chetana/fsca/final_output/2024-02-11_output.csv exists. skip.\nextracting data for 2024-02-12\nThe file /home/chetana/fsca/final_output/2024-02-12_output.csv exists. skip.\nextracting data for 2024-02-13\nThe file /home/chetana/fsca/final_output/2024-02-13_output.csv exists. skip.\nextracting data for 2024-02-14\nThe file /home/chetana/fsca/final_output/2024-02-14_output.csv exists. skip.\nextracting data for 2024-02-15\nThe file /home/chetana/fsca/final_output/2024-02-15_output.csv exists. skip.\nextracting data for 2024-02-16\nThe file /home/chetana/fsca/final_output/2024-02-16_output.csv exists. skip.\nextracting data for 2024-02-17\nThe file /home/chetana/fsca/final_output/2024-02-17_output.csv exists. skip.\nextracting data for 2024-02-18\nThe file /home/chetana/fsca/final_output/2024-02-18_output.csv exists. skip.\nextracting data for 2024-02-19\nThe file /home/chetana/fsca/final_output/2024-02-19_output.csv exists. skip.\nextracting data for 2024-02-20\nThe file /home/chetana/fsca/final_output/2024-02-20_output.csv exists. skip.\nextracting data for 2024-02-21\nThe file /home/chetana/fsca/final_output/2024-02-21_output.csv exists. skip.\nextracting data for 2024-02-22\nThe file /home/chetana/fsca/final_output/2024-02-22_output.csv exists. skip.\nextracting data for 2024-02-23\nThe file /home/chetana/fsca/final_output/2024-02-23_output.csv exists. skip.\nextracting data for 2024-02-24\nThe file /home/chetana/fsca/final_output/2024-02-24_output.csv exists. skip.\nextracting data for 2024-02-25\nThe file /home/chetana/fsca/final_output/2024-02-25_output.csv exists. skip.\nextracting data for 2024-02-26\nThe file /home/chetana/fsca/final_output/2024-02-26_output.csv exists. skip.\nextracting data for 2024-02-27\nThe file /home/chetana/fsca/final_output/2024-02-27_output.csv exists. skip.\nextracting data for 2024-02-28\nThe file /home/chetana/fsca/final_output/2024-02-28_output.csv exists. skip.\nextracting data for 2024-02-29\nThe file /home/chetana/fsca/final_output/2024-02-29_output.csv exists. skip.\nextracting data for 2024-03-01\nThe file /home/chetana/fsca/final_output/2024-03-01_output.csv exists. skip.\nextracting data for 2024-03-02\nThe file /home/chetana/fsca/final_output/2024-03-02_output.csv exists. skip.\nextracting data for 2024-03-03\nThe file /home/chetana/fsca/final_output/2024-03-03_output.csv exists. skip.\nextracting data for 2024-03-04\nThe file /home/chetana/fsca/final_output/2024-03-04_output.csv exists. skip.\nextracting data for 2024-03-05\nThe file /home/chetana/fsca/final_output/2024-03-05_output.csv exists. skip.\nextracting data for 2024-03-06\nThe file /home/chetana/fsca/final_output/2024-03-06_output.csv exists. skip.\nextracting data for 2024-03-07\nThe file /home/chetana/fsca/final_output/2024-03-07_output.csv exists. skip.\nextracting data for 2024-03-08\nThe file /home/chetana/fsca/final_output/2024-03-08_output.csv exists. skip.\nextracting data for 2024-03-09\nThe file /home/chetana/fsca/final_output/2024-03-09_output.csv exists. skip.\nextracting data for 2024-03-10\nThe file /home/chetana/fsca/final_output/2024-03-10_output.csv exists. skip.\nextracting data for 2024-03-11\nThe file /home/chetana/fsca/final_output/2024-03-11_output.csv exists. skip.\nextracting data for 2024-03-12\nThe file /home/chetana/fsca/final_output/2024-03-12_output.csv exists. skip.\nextracting data for 2024-03-13\nThe file /home/chetana/fsca/final_output/2024-03-13_output.csv exists. skip.\nextracting data for 2024-03-14\nThe file /home/chetana/fsca/final_output/2024-03-14_output.csv exists. skip.\nextracting data for 2024-03-15\nThe file /home/chetana/fsca/final_output/2024-03-15_output.csv exists. skip.\nextracting data for 2024-03-16\nThe file /home/chetana/fsca/final_output/2024-03-16_output.csv exists. skip.\nextracting data for 2024-03-17\nThe file /home/chetana/fsca/final_output/2024-03-17_output.csv exists. skip.\nextracting data for 2024-03-18\nThe file /home/chetana/fsca/final_output/2024-03-18_output.csv exists. skip.\nextracting data for 2024-03-19\nThe file /home/chetana/fsca/final_output/2024-03-19_output.csv exists. skip.\nextracting data for 2024-03-20\nThe file /home/chetana/fsca/final_output/2024-03-20_output.csv exists. skip.\nextracting data for 2024-03-21\nThe file /home/chetana/fsca/final_output/2024-03-21_output.csv exists. skip.\nextracting data for 2024-03-22\nThe file /home/chetana/fsca/final_output/2024-03-22_output.csv exists. skip.\nextracting data for 2024-03-23\nThe file /home/chetana/fsca/final_output/2024-03-23_output.csv exists. skip.\nextracting data for 2024-03-24\nThe file /home/chetana/fsca/final_output/2024-03-24_output.csv exists. skip.\nextracting data for 2024-03-25\nThe file /home/chetana/fsca/final_output/2024-03-25_output.csv exists. skip.\nextracting data for 2024-03-26\nThe file /home/chetana/fsca/final_output/2024-03-26_output.csv exists. skip.\nextracting data for 2024-03-27\nThe file /home/chetana/fsca/final_output/2024-03-27_output.csv exists. skip.\nextracting data for 2024-03-28\nThe file /home/chetana/fsca/final_output/2024-03-28_output.csv exists. skip.\nextracting data for 2024-03-29\nThe file /home/chetana/fsca/final_output/2024-03-29_output.csv exists. skip.\nextracting data for 2024-03-30\nThe file /home/chetana/fsca/final_output/2024-03-30_output.csv exists. skip.\nextracting data for 2024-03-31\nThe file /home/chetana/fsca/final_output/2024-03-31_output.csv exists. skip.\nextracting data for 2024-04-01\nThe file /home/chetana/fsca/final_output/2024-04-01_output.csv exists. skip.\nextracting data for 2024-04-02\nThe file /home/chetana/fsca/final_output/2024-04-02_output.csv exists. skip.\nextracting data for 2024-04-03\nThe file /home/chetana/fsca/final_output/2024-04-03_output.csv exists. skip.\nextracting data for 2024-04-04\nThe file /home/chetana/fsca/final_output/2024-04-04_output.csv exists. skip.\nextracting data for 2024-04-05\nThe file /home/chetana/fsca/final_output/2024-04-05_output.csv exists. skip.\nextracting data for 2024-04-06\nThe file /home/chetana/fsca/final_output/2024-04-06_output.csv exists. skip.\nextracting data for 2024-04-07\nThe file /home/chetana/fsca/final_output/2024-04-07_output.csv exists. skip.\nextracting data for 2024-04-08\nThe file /home/chetana/fsca/final_output/2024-04-08_output.csv exists. skip.\nextracting data for 2024-04-09\nThe file /home/chetana/fsca/final_output/2024-04-09_output.csv exists. skip.\nextracting data for 2024-04-10\nThe file /home/chetana/fsca/final_output/2024-04-10_output.csv exists. skip.\nextracting data for 2024-04-11\nThe file /home/chetana/fsca/final_output/2024-04-11_output.csv exists. skip.\nextracting data for 2024-04-12\nThe file /home/chetana/fsca/final_output/2024-04-12_output.csv exists. skip.\nextracting data for 2024-04-13\nThe file /home/chetana/fsca/final_output/2024-04-13_output.csv exists. skip.\nextracting data for 2024-04-14\nThe file /home/chetana/fsca/final_output/2024-04-14_output.csv exists. skip.\nextracting data for 2024-04-15\nThe file /home/chetana/fsca/final_output/2024-04-15_output.csv exists. skip.\nextracting data for 2024-04-16\nThe file /home/chetana/fsca/final_output/2024-04-16_output.csv exists. skip.\nextracting data for 2024-04-17\nThe file /home/chetana/fsca/final_output/2024-04-17_output.csv exists. skip.\nextracting data for 2024-04-18\nThe file /home/chetana/fsca/final_output/2024-04-18_output.csv exists. skip.\nextracting data for 2024-04-19\nThe file /home/chetana/fsca/final_output/2024-04-19_output.csv exists. skip.\nextracting data for 2024-04-20\nThe file /home/chetana/fsca/final_output/2024-04-20_output.csv exists. skip.\nextracting data for 2024-04-21\nThe file /home/chetana/fsca/final_output/2024-04-21_output.csv exists. skip.\nextracting data for 2024-04-22\nThe file /home/chetana/fsca/final_output/2024-04-22_output.csv exists. skip.\nextracting data for 2024-04-23\nThe file /home/chetana/fsca/final_output/2024-04-23_output.csv exists. skip.\nextracting data for 2024-04-24\nThe file /home/chetana/fsca/final_output/2024-04-24_output.csv exists. skip.\nextracting data for 2024-04-25\nThe file /home/chetana/fsca/final_output/2024-04-25_output.csv exists. skip.\nextracting data for 2024-04-26\nThe file /home/chetana/fsca/final_output/2024-04-26_output.csv exists. skip.\nextracting data for 2024-04-27\nThe file /home/chetana/fsca/final_output/2024-04-27_output.csv exists. skip.\nextracting data for 2024-04-28\nThe file /home/chetana/fsca/final_output/2024-04-28_output.csv exists. skip.\nextracting data for 2024-04-29\nThe file /home/chetana/fsca/final_output/2024-04-29_output.csv exists. skip.\nextracting data for 2024-04-30\nThe file /home/chetana/fsca/final_output/2024-04-30_output.csv exists. skip.\nextracting data for 2024-05-01\nThe file /home/chetana/fsca/final_output/2024-05-01_output.csv exists. skip.\nextracting data for 2024-05-02\nThe file /home/chetana/fsca/final_output/2024-05-02_output.csv exists. skip.\nextracting data for 2024-05-03\nThe file /home/chetana/fsca/final_output/2024-05-03_output.csv exists. skip.\nextracting data for 2024-05-04\nThe file /home/chetana/fsca/final_output/2024-05-04_output.csv exists. skip.\nextracting data for 2024-05-05\nThe file /home/chetana/fsca/final_output/2024-05-05_output.csv exists. skip.\nextracting data for 2024-05-06\nThe file /home/chetana/fsca/final_output/2024-05-06_output.csv exists. skip.\nextracting data for 2024-05-07\nThe file /home/chetana/fsca/final_output/2024-05-07_output.csv exists. skip.\nextracting data for 2024-05-08\nThe file /home/chetana/fsca/final_output/2024-05-08_output.csv exists. skip.\nextracting data for 2024-05-09\nThe file /home/chetana/fsca/final_output/2024-05-09_output.csv exists. skip.\nextracting data for 2024-05-10\nThe file /home/chetana/fsca/final_output/2024-05-10_output.csv exists. skip.\nextracting data for 2024-05-11\nThe file /home/chetana/fsca/final_output/2024-05-11_output.csv exists. skip.\nextracting data for 2024-05-12\nThe file /home/chetana/fsca/final_output/2024-05-12_output.csv exists. skip.\nextracting data for 2024-05-13\nThe file /home/chetana/fsca/final_output/2024-05-13_output.csv exists. skip.\nextracting data for 2024-05-14\nThe file /home/chetana/fsca/final_output/2024-05-14_output.csv exists. skip.\nextracting data for 2024-05-15\nThe file /home/chetana/fsca/final_output/2024-05-15_output.csv exists. skip.\nextracting data for 2024-05-16\nThe file /home/chetana/fsca/final_output/2024-05-16_output.csv exists. skip.\nextracting data for 2024-05-17\nThe file /home/chetana/fsca/final_output/2024-05-17_output.csv exists. skip.\nextracting data for 2024-05-18\nThe file /home/chetana/fsca/final_output/2024-05-18_output.csv exists. skip.\nextracting data for 2024-05-19\nThe file /home/chetana/fsca/final_output/2024-05-19_output.csv exists. skip.\nextracting data for 2024-05-20\nThe file /home/chetana/fsca/final_output/2024-05-20_output.csv exists. skip.\nextracting data for 2024-05-21\nThe file /home/chetana/fsca/final_output/2024-05-21_output.csv exists. skip.\nextracting data for 2024-05-22\nThe file /home/chetana/fsca/final_output/2024-05-22_output.csv exists. skip.\nextracting data for 2024-05-23\nThe file /home/chetana/fsca/final_output/2024-05-23_output.csv exists. skip.\nextracting data for 2024-05-24\nThe file /home/chetana/fsca/final_output/2024-05-24_output.csv exists. skip.\nextracting data for 2024-05-25\nThe file /home/chetana/fsca/final_output/2024-05-25_output.csv exists. skip.\nextracting data for 2024-05-26\nThe file /home/chetana/fsca/final_output/2024-05-26_output.csv exists. skip.\nextracting data for 2024-05-27\nThe file /home/chetana/fsca/final_output/2024-05-27_output.csv exists. skip.\nextracting data for 2024-05-28\nThe file /home/chetana/fsca/final_output/2024-05-28_output.csv exists. skip.\nextracting data for 2024-05-29\nThe file /home/chetana/fsca/final_output/2024-05-29_output.csv exists. skip.\nextracting data for 2024-05-30\nThe file /home/chetana/fsca/final_output/2024-05-30_output.csv exists. skip.\nextracting data for 2024-05-31\nThe file /home/chetana/fsca/final_output/2024-05-31_output.csv exists. skip.\nextracting data for 2024-06-01\nThe file /home/chetana/fsca/final_output/2024-06-01_output.csv exists. skip.\nextracting data for 2024-06-02\nThe file /home/chetana/fsca/final_output/2024-06-02_output.csv exists. skip.\nextracting data for 2024-06-03\nThe file /home/chetana/fsca/final_output/2024-06-03_output.csv exists. skip.\nextracting data for 2024-06-04\nThe file /home/chetana/fsca/final_output/2024-06-04_output.csv exists. skip.\nextracting data for 2024-06-05\nThe file /home/chetana/fsca/final_output/2024-06-05_output.csv exists. skip.\nextracting data for 2024-06-06\nThe file /home/chetana/fsca/final_output/2024-06-06_output.csv exists. skip.\nextracting data for 2024-06-07\nThe file /home/chetana/fsca/final_output/2024-06-07_output.csv exists. skip.\nextracting data for 2024-06-08\nThe file /home/chetana/fsca/final_output/2024-06-08_output.csv exists. skip.\nextracting data for 2024-06-09\nThe file /home/chetana/fsca/final_output/2024-06-09_output.csv exists. skip.\nextracting data for 2024-06-10\nThe file /home/chetana/fsca/final_output/2024-06-10_output.csv exists. skip.\nextracting data for 2024-06-11\nThe file /home/chetana/fsca/final_output/2024-06-11_output.csv exists. skip.\nextracting data for 2024-06-12\nThe file /home/chetana/fsca/final_output/2024-06-12_output.csv exists. skip.\nextracting data for 2024-06-13\nThe file /home/chetana/fsca/final_output/2024-06-13_output.csv exists. skip.\nextracting data for 2024-06-14\nThe file /home/chetana/fsca/final_output/2024-06-14_output.csv exists. skip.\nextracting data for 2024-06-15\nThe file /home/chetana/fsca/final_output/2024-06-15_output.csv exists. skip.\nextracting data for 2024-06-16\nThe file /home/chetana/fsca/final_output/2024-06-16_output.csv exists. skip.\nextracting data for 2024-06-17\nThe file /home/chetana/fsca/final_output/2024-06-17_output.csv exists. skip.\nextracting data for 2024-06-18\nThe file /home/chetana/fsca/final_output/2024-06-18_output.csv exists. skip.\nextracting data for 2024-06-19\nThe file /home/chetana/fsca/final_output/2024-06-19_output.csv exists. skip.\nextracting data for 2024-06-20\nThe file /home/chetana/fsca/final_output/2024-06-20_output.csv exists. skip.\nextracting data for 2024-06-21\nThe file /home/chetana/fsca/final_output/2024-06-21_output.csv exists. skip.\nextracting data for 2024-06-22\nThe file /home/chetana/fsca/final_output/2024-06-22_output.csv exists. skip.\nextracting data for 2024-06-23\nThe file /home/chetana/fsca/final_output/2024-06-23_output.csv exists. skip.\nextracting data for 2024-06-24\nThe file /home/chetana/fsca/final_output/2024-06-24_output.csv exists. skip.\nextracting data for 2024-06-25\nThe file /home/chetana/fsca/final_output/2024-06-25_output.csv exists. skip.\nextracting data for 2024-06-26\nThe file /home/chetana/fsca/final_output/2024-06-26_output.csv exists. skip.\nextracting data for 2024-06-27\nThe file /home/chetana/fsca/final_output/2024-06-27_output.csv exists. skip.\nextracting data for 2024-06-28\nThe file /home/chetana/fsca/final_output/2024-06-28_output.csv exists. skip.\nextracting data for 2024-06-29\nThe file /home/chetana/fsca/final_output/2024-06-29_output.csv exists. skip.\nextracting data for 2024-06-30\nThe file /home/chetana/fsca/final_output/2024-06-30_output.csv exists. skip.\nextracting data for 2024-07-01\nThe file /home/chetana/fsca/final_output/2024-07-01_output.csv exists. skip.\nextracting data for 2024-07-02\nThe file /home/chetana/fsca/final_output/2024-07-02_output.csv exists. skip.\nextracting data for 2024-07-03\nThe file /home/chetana/fsca/final_output/2024-07-03_output.csv exists. skip.\nextracting data for 2024-07-04\nThe file /home/chetana/fsca/final_output/2024-07-04_output.csv exists. skip.\nextracting data for 2024-07-05\nThe file /home/chetana/fsca/final_output/2024-07-05_output.csv exists. skip.\nextracting data for 2024-07-06\nThe file /home/chetana/fsca/final_output/2024-07-06_output.csv exists. skip.\nadd_time_series_columns target csv: /home/chetana/fsca/final_output//2024-07-06_output_with_time_series.csv\n/home/chetana/fsca/final_output//2024-07-06_output_with_time_series.csv already exists, skipping..\n",
  "history_begin_time" : 1720503389786,
  "history_end_time" : 1720503992226,
  "history_notes" : null,
  "history_process" : "c2qa9u",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "13ufzu6n7tb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384199,
  "history_end_time" : 1720503992227,
  "history_notes" : null,
  "history_process" : "lnrsop",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1tw9fw3p9yr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384201,
  "history_end_time" : 1720503992227,
  "history_notes" : null,
  "history_process" : "c8isgf",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "i3mywjofhgj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384202,
  "history_end_time" : 1720503992227,
  "history_notes" : null,
  "history_process" : "16qpco",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2tc2krzfgcu",
  "history_input" : "\n# retrieve the MOD44Wv061 and cut a water mask for the current day.\n\nimport os\nimport subprocess\nimport threading\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom pyproj import Transformer\nfrom rasterio.enums import Resampling\nimport numpy as np\n\nimport requests\nimport earthaccess\nfrom osgeo import gdal\nfrom snowcast_utils import work_dir, homedir, test_start_date, date_to_julian\nimport pandas as pd\nimport rasterio\nimport shutil\nimport time\nfrom convert_results_to_images import plot_all_variables_in_one_csv\nimport dask\nfrom dask import delayed\nimport dask.multiprocessing\nimport pyproj\n\n# change directory before running the code\nhomedir = f\"{homedir}/water_mask/\"\nos.makedirs(homedir, exist_ok=True)\nos.chdir(homedir)\n\n\ntile_list = [\"h08v04\", \"h08v05\", \"h09v04\", \"h09v05\", \n             \"h10v04\", \"h10v05\", \"h11v04\", \"h11v05\", \n             \"h12v04\", \"h12v05\", \"h13v04\", \"h13v05\", \n             \"h15v04\", \"h16v03\", \"h16v04\", ]\ninput_folder = os.getcwd() + \"/temp/\"\nos.makedirs(input_folder, exist_ok=True)\noutput_folder = os.getcwd() + \"/output_folder/\"\nmodis_day_wise = os.getcwd() + \"/final_output/\"\nos.makedirs(output_folder, exist_ok=True)\nos.makedirs(modis_day_wise, exist_ok=True)\nwestern_us_coords = f'{work_dir}/dem_file.tif.csv'\nmapper_file = os.path.join(modis_day_wise, f'modis_to_dem_mapper.csv')\n\n\n@dask.delayed\ndef convert_hdf_to_geotiff(hdf_file, output_folder):\n    hdf_ds = gdal.Open(hdf_file, gdal.GA_ReadOnly)\n\n    target_subdataset_name = \"MCD12Q1:LC_Prop3\"\n    output_file_name = os.path.splitext(os.path.basename(hdf_file))[0] + \".tif\"\n    output_path = os.path.join(output_folder, output_file_name)\n\n    if os.path.exists(output_path):\n        return f\"The file {output_path} exists. skip.\"\n    else:\n        for subdataset in hdf_ds.GetSubDatasets():\n          print(\"subdataset = \", subdataset)\n          if target_subdataset_name in subdataset[0]:\n              ds = gdal.Open(subdataset[0], gdal.GA_ReadOnly)\n              if \"Assessment\" in subdataset[0]:\n                gdal.Translate(f\"{output_path}_assessment.tif\", ds)\n                print(f\"The layer {target_subdataset_name}_assessment.tif is extracted to {output_path}\")\n              else:\n                gdal.Translate(output_path, ds)\n                print(f\"The layer {target_subdataset_name} is extracted to {output_path}\")\n              ds = None\n\n    hdf_ds = None\n    return f\"Converted {os.path.basename(hdf_file)} to GeoTIFF\"\n\ndef convert_all_hdf_in_folder(folder_path, output_folder):\n    file_list = []\n    delayed_tasks = []\n\n    for file in os.listdir(folder_path):\n        output_file_name = os.path.splitext(os.path.basename(file))[0] + \".tif\"\n        output_path = os.path.join(output_folder, output_file_name)\n        if os.path.exists(output_path):\n            print(f\"The file {output_path} exists. skip.\")\n            continue\n        else:\n            file_list.append(file)\n            if file.lower().endswith(\".hdf\"):\n                hdf_file = os.path.join(folder_path, file)\n                task = convert_hdf_to_geotiff(hdf_file, output_folder)\n                delayed_tasks.append(task)\n\n    results = dask.compute(*delayed_tasks, scheduler=\"processes\")\n\n    return file_list, results\n\ndef get_env_var_for_gdalwarp():\n    if \"PROJ_LIB\" in os.environ:\n        os.environ.pop(\"PROJ_LIB\")\n        print(f\"Environment variable PROJ_LIB removed.\")\n    if \"GDAL_DATA\" in os.environ:\n        os.environ.pop(\"GDAL_DATA\")\n        print(f\"Environment variable GDAL_DATA removed.\")\n    return os.environ\n  \n\ndef merge_tifs(folder_path, target_date, output_file):\n  julian_date = date_to_julian(target_date)\n  print(\"target julian date\", julian_date)\n  print(\"target_date[:4] = \", target_date[:4])\n  tif_files = [ os.path.join(folder_path, f) for f in os.listdir(folder_path) if f.endswith('.tif') \n    and \"assessment\" not in f and target_date[:4] in f]\n  print(\"tif_files = \", tif_files)\n  if len(tif_files) == 0:\n    print(f\"uh-oh, didn't find HDFs for date {target_date}\")\n    print(\"generate a new csv file with empty values for each point\")\n    # I dont have the mask template tif\n    # gdal_command = ['/usr/bin/gdal_translate', \n    #                 '-b', '1', \n    #                 '-outsize', '100%', '100%', \n    #                 '-scale', '0', '255', '200', '200', \n    #                 f\"{modis_day_wise}/water_mask_template.tif\", \n    #                 output_file]\n    # print(\"Running \", \" \".join(gdal_command))\n    # subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n    #raise ValueError(f\"uh-oh, didn't find HDFs for date {target_date}\")\n  else:\n    # gdal_command = ['gdal_merge.py', '-o', output_file, '-of', 'GTiff', '-r', 'cubic'] + tif_files\n    #if 'PROJ_LIB' in os.environ:\n    #    del os.environ['PROJ_LIB']\n    print(\"pyproj.datadir.get_data_dir() = \", pyproj.datadir.get_data_dir())\n    gdal_command = ['/usr/bin/gdalwarp', '-r', 'min', ] + tif_files + [f\"{output_file}_500m.tif\"]\n    print(\"Running \", ' '.join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n    # gdalwarp -s_srs EPSG:4326 -t_srs EPSG:4326 -tr 0.036 0.036  -cutline template.shp -crop_to_cutline -overwrite output_4km.tif output_4km_clipped.tif\n    gdal_command = ['/usr/bin/gdalwarp', '-t_srs', 'EPSG:4326', '-tr', '0.036', '0.036', '-cutline', f'{work_dir}/template.shp', '-crop_to_cutline', '-overwrite', f\"{output_file}_500m.tif\", output_file]\n    print(\"Running \", \" \".join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n\n\ndef list_files(directory):\n  return [os.path.abspath(os.path.join(directory, f)) for f in os.listdir(directory) if\n          os.path.isfile(os.path.join(directory, f))]\n\n\ndef merge_tiles(date, hdf_files):\n  path = f\"data/{date}/\"\n  files = list_files(path)\n  print(files)\n  merged_filename = f\"data/{date}/merged.tif\"\n  merge_command = [\"/usr/bin/gdal_merge.py\", \"-o\", merged_filename, \"-of\", \"GTiff\"] + files\n  try:\n    subprocess.run(merge_command, env=get_env_var_for_gdalwarp())\n    print(f\"Merged tiles into {merged_filename}\")\n  except subprocess.CalledProcessError as e:\n    print(f\"Error merging tiles: {e}\")\n\n\ndef download_url(date, url):\n  file_name = url.split('/')[-1]\n  if os.path.exists(f'data/{date}/{file_name}'):\n    print(f'File: {file_name} already exists, SKIPPING')\n    return\n  try:\n    os.makedirs('data/', exist_ok=True)\n    os.makedirs(f'data/{date}', exist_ok=True)\n    response = requests.get(url, stream=True)\n    with open(f'data/{date}/{file_name}', 'wb') as f:\n      for chunk in response.iter_content(chunk_size=8192):\n        if chunk:\n          f.write(chunk)\n\n    print(f\"Downloaded {file_name}\")\n  except Exception as e:\n    print(f\"Error downloading {url}: {e}\")\n\n\ndef download_all(date, urls):\n  threads = []\n\n  for url in urls:\n    thread = threading.Thread(target=download_url, args=(date, url,))\n    thread.start()\n    threads.append(thread)\n\n  for thread in threads:\n    thread.join()\n\n\ndef delete_files_in_folder(folder_path):\n  if not os.path.exists(folder_path):\n    print(\"Folder does not exist.\")\n    return\n\n  for filename in os.listdir(folder_path):\n    file_path = os.path.join(folder_path, filename)\n    try:\n      if os.path.isfile(file_path) or os.path.islink(file_path):\n        os.unlink(file_path)\n      else:\n        print(f\"Skipping {filename}, as it is not a file.\")\n    except Exception as e:\n      print(f\"Failed to delete {file_path}. Reason: {e}\")\n\n\ndef download_tiles_and_merge(start_date, end_date):\n  date_list = [start_date + timedelta(days=i) for i in range((end_date - start_date).days + 1)]\n  current_date = start_date.strftime(\"%Y-%m-%d\")\n  # Subtract one year from the current date\n  one_year_ago = start_date - timedelta(days=365)\n  target_output_tif = f'{modis_day_wise}/{start_date.year}__water_mask.tif'\n  \n  if os.path.exists(target_output_tif):\n      file_size_bytes = os.path.getsize(target_output_tif)\n      print(f\"file_size_bytes: {file_size_bytes}\")\n      print(f\"The file {target_output_tif} exists. skip.\")\n  else:\n      print(f\"The file {target_output_tif} does not exist.\")\n      print(\"start to download files from NASA server to local\")\n      earthaccess.login(strategy=\"netrc\")\n      results = earthaccess.search_data(short_name=\"MCD12Q1\",\n                                        cloud_hosted=True, \n                                        bounding_box=(-124.77, 24.52, -66.95, 49.38),\n                                        temporal=(\n                                          one_year_ago.strftime(\"%Y-%m-%d\"), \n                                          start_date.strftime(\"%Y-%m-%d\")))\n      earthaccess.download(results, input_folder)\n      print(\"done with downloading, start to convert HDF to geotiff..\")\n\n      convert_all_hdf_in_folder(input_folder, output_folder)\n      print(\"done with conversion, start to merge geotiff tiles to one tif per day..\")\n\n      merge_tifs(folder_path=output_folder, target_date = current_date, output_file=target_output_tif)\n      print(f\"saved the merged tifs to {target_output_tif}\")\n  #delete_files_in_folder(input_folder)  # cleanup\n  #delete_files_in_folder(output_folder)  # cleanup\n\ndef get_value_at_coords(src, lat, lon, band_number=1):\n#     transformer = Transformer.from_crs(\"EPSG:4326\", src.crs, always_xy=True)\n#     east, north = transformer.transform(lon, lat)\n    if not (src.bounds.left <= lat <= src.bounds.right and src.bounds.bottom <= lon <= src.bounds.top):\n      return None\n    row, col = src.index(lat, lon)\n    if (0 <= row < src.height) and (0 <= col < src.width):\n      return src.read(band_number, window=((row, row+1), (col, col+1)), resampling=Resampling.nearest)[0, 0]\n    else:\n      return None\n\ndef get_band_value(row, src):\n    #row, col = src.index(row[\"Latitude\"], row[\"Longitude\"])\n    #print(row, col, src.height, src.width)\n    if (row[\"modis_y\"] < src.height) and (row[\"modis_x\"] < src.width):\n      valid_value =  src.read(1, \n                              window=((row[\"modis_y\"], \n                                       row[\"modis_y\"]+1), \n                                      (row[\"modis_x\"], \n                                       row[\"modis_x\"]+1))\n                             )\n      #print(\"extracted value array: \", valid_value)\n      #print(\"Found a valid value: \",row, valid_value, src.height, src.width)\n      return valid_value[0,0]\n    else:\n      return None\n          \ndef process_file(file_path, current_date):\n    \"\"\"\n    Process a raster file, extract values for specific coordinates, and save the result in a CSV file.\n\n    Parameters:\n    - file_path (str): Path to the raster file to be processed.\n    - current_date (str): Current date to be associated with the processed data.\n\n    Returns:\n    - str: Path to the saved CSV file containing the processed data.\n    \"\"\"\n\n    # Read the station DataFrame from a mapper file (assuming `mapper_file` is defined elsewhere)\n    station_df = pd.read_csv(mapper_file)\n    print(f\"Opening {file_path}\")\n\n    # Open the raster file using rasterio\n    with rasterio.open(file_path) as src:\n        # Apply get_band_value for each row in the DataFrame\n        station_df['lc_prop3'] = station_df.apply(get_band_value, axis=1, args=(src,))\n\n    # Filter out None values\n    valid_data = station_df[station_df['lc_prop3'].notna()]\n\n    # Prepare final data\n    valid_data['date'] = current_date\n    output_file = os.path.join(modis_day_wise, f'{current_date[:4]}_output.csv')\n    print(f\"Saving CSV file: {output_file}\")\n    valid_data.to_csv(output_file, index=False, columns=['date', 'Latitude', 'Longitude', 'lc_prop3'])\n    \n    return output_file\n\n\ndef merge_cumulative_csv(start_date, end_date, force):\n  \n  current_date = start_date\n  target_date = end_date\n  \n  input_time_series_file = f\"{modis_day_wise}/{end_date.strftime('%Y-%m-%d')}_output_with_time_series.csv\"\n  target_cumulative_file = f\"{modis_day_wise}/{end_date.strftime('%Y-%m-%d')}_output.csv_cumulative.csv\"\n  \n  if os.path.exists(target_cumulative_file) and not force:\n    print(f\"file already exists {target_cumulative_file}\")\n    return\n  \n  df = pd.read_csv(input_time_series_file)\n\n  # add all the columns together and save to new csv\n  # Adding all columns except latitude and longitude\n  df = df.apply(pd.to_numeric, errors='coerce')\n\n  #new_df = new_df.head(2000)\n\n  lc_prop3_cols = [col for col in df.columns if col.startswith('lc_prop3')]\n  print(\"lc_prop3_cols are: \", lc_prop3_cols)\n  \n  df['cumulative_lc_prop3'] = df[lc_prop3_cols].sum(axis=1)\n\n  df = df.loc[:, ['Latitude', 'Longitude', f\"lc_prop3\", 'cumulative_lc_prop3']]\n  df[\"date\"] = end_date\n\n  print(\"new_df final shape: \", df.head())\n  df.to_csv(target_cumulative_file, index=False)\n  print(f\"new df is saved to {target_cumulative_file}\")\n\n  print(df['cumulative_lc_prop3'].describe(include='all'))\n\ndef add_cumulative_column(df, column_name):\n  df[f'cumulative_{column_name}'] = df[column_name].cumsum()\n  return df\n\n# Function to perform polynomial interpolation and fill in missing values\ndef interpolate_missing_and_add_cumulative_inplace(row, column_name, degree=1):\n  \"\"\"\n  Interpolate missing values in a Pandas Series using polynomial interpolation\n  and add a cumulative column.\n\n  Parameters:\n    - row (pd.Series): The input row containing the data to be interpolated.\n    - column_name (str): The name of the column to be interpolated.\n    - degree (int, optional): The degree of the polynomial fit. Default is 1 (linear).\n\n  Returns:\n    - pd.Series: The row with interpolated values and a cumulative column.\n\n  Raises:\n    - ValueError: If there are unexpected null values after interpolation.\n\n  Note:\n    - For 'SWE' column, values above 240 are treated as gaps and set to 240.\n    - For 'lc_prop3' column, values above 100 are treated as gaps and set to 100.\n\n  Examples:\n    ```python\n    # Example usage:\n    interpolated_row = interpolate_missing_and_add_cumulative_inplace(my_row, 'lc_prop3', degree=2)\n    ```\n\n  \"\"\"\n  \n  # Extract X series (column names)\n  x_key = row.index\n  x = np.arange(len(x_key))\n\n  # Extract Y series (values from the first row)\n  y = row\n  \n\n  # Create a mask for missing values\n  if column_name == \"SWE\":\n    mask = (y > 240) | y.isnull()\n  elif column_name == \"lc_prop3\":\n    y = y.replace([225, 237, 239], 0)\n    y[y < 0] = 0\n    mask = (y > 100) | y.isnull()\n  else:\n    mask = y.isnull()\n\n  # Check if all elements in the mask array are True\n  all_true = np.all(mask)\n\n  if all_true or len(np.where(~mask)[0]) == 1:\n    row.values[:] = 0\n  else:\n    # Perform interpolation\n    #new_y = np.interp(x, x[~mask], y[~mask])\n    # Replace missing values with interpolated values\n    #df[column_name] = new_y\n    \n    try:\n      # Coefficients of the polynomial fit\n      coefficients = np.polyfit(x[~mask], y[~mask], deg=degree)\n\n      # Perform polynomial interpolation\n      interpolated_values = np.polyval(coefficients, x)\n\n      # Merge using np.where\n      merged_array = np.where(mask, interpolated_values, y)\n\n      row = pd.Series(merged_array, index=x_key)\n    except Exception as e:\n      # Print the error message and traceback\n      import traceback\n      traceback.print_exc()\n      print(\"x:\", x)\n      print(\"y:\", y)\n      print(\"mask:\", mask)\n      print(f\"Error: {e}\")\n      raise e\n      \n    if column_name == \"AMSR_SWE\":\n      row = row.clip(upper=240, lower=0)\n    elif column_name == \"lc_prop3\":\n      row = row.clip(upper=100, lower=0)\n\n    if row.isnull().any():\n      print(\"x:\", x)\n      print(\"y:\", y)\n      print(\"mask:\", mask)\n      print(\"why row still has values > 100\", row)\n      raise ValueError(\"Single group: shouldn't have null values here\")\n\n  \n  # create the cumulative column after interpolation\n  row[f\"cumulative_{column_name}\"] = row.sum()\n  return row\n\n\ndef add_time_series_columns(start_date, end_date, force=True):\n  \"\"\"\n  Converts data from a cleaned CSV file into a time series format.\n\n  This function reads a cleaned CSV file, sorts the data, fills in missing values using polynomial interpolation,\n  and creates a time series dataset for specific columns. The resulting time series data is saved to a new CSV file.\n\n  Parameters:\n    - start_date (str): The start date of the time series data in the format 'YYYY-MM-DD'.\n    - end_date (str): The end date of the time series data in the format 'YYYY-MM-DD'.\n    - force (bool, optional): If True, forces the regeneration of time series data even if the output file exists.\n\n    Returns:\n    - None: The function primarily generates time series data and saves it to a CSV file with side effects.\n\n  Example:\n    ```python\n    add_time_series_columns('2022-01-01', '2022-12-31', force=True)\n    ```\n\n  \"\"\"\n  current_date = start_date\n  target_date = end_date\n  target_date_str = target_date.strftime('%Y-%m-%d')\n  \n  output_csv = f\"{modis_day_wise}/{target_date_str}_output_with_time_series.csv\"\n  print(f\"add_time_series_columns target csv: {output_csv}\")\n        \n  if os.path.exists(output_csv) and not force:\n    print(f\"{output_csv} already exists, skipping..\")\n    return\n  \n  backup_time_series_csv_path = f\"{modis_day_wise}/{target_date_str}_output_with_time_series_backup.csv\"\n  \n  columns_to_be_time_series = ['lc_prop3']\n\n  # Read the all the column merged CSV\n  \n  date_keyed_objects = {}\n  data_dict = {}\n  new_df = None\n  while current_date <= end_date:\n    \n    current_date_str = current_date.strftime('%Y-%m-%d')\n  \n    data_dict[current_date_str] = f\"{modis_day_wise}/{current_date_str}_output.csv\"\n    #print(data_dict[current_date_str])\n    current_df = pd.read_csv(data_dict[current_date_str])\n    current_df.drop([\"date\"], axis=1, inplace=True)\n    \n    if current_date != end_date:\n      current_df.rename(columns={\"lc_prop3\": f\"lc_prop3_{current_date_str}\"}, inplace=True)\n    #print(current_df.head())\n    \n    if new_df is None:\n      new_df = current_df\n    else:\n      new_df = pd.merge(new_df, current_df, on=['Latitude', 'Longitude'])\n      #new_df = new_df.append(current_df, ignore_index=True)\n\n    current_date += timedelta(days=1)\n\n  print(\"new_df.columns = \", new_df.columns)\n  print(new_df.head())\n  \n  df = new_df\n        \n  gap_filled_csv = f\"{output_csv}_gap_filled.csv\"\n  if os.path.exists(gap_filled_csv) and not force:\n    print(f\"{gap_filled_csv} already exists, skipping..\")\n    df = pd.read_csv(gap_filled_csv)\n    print(df[\"lc_prop3\"].describe())\n  else:\n  \n    #df.sort_values(by=['Latitude', 'Longitude'], inplace=True)\n    print(\"All current columns: \", df.columns)\n    \n    \n    print(\"Start to fill in the missing values\")\n    print(\"all the df shape: \", df.shape)\n    #grouped = df.groupby(['Latitude', 'Longitude'])\n    #num_groups = len(grouped.groups)\n    #print(f\"Number of groups: {num_groups}\")\n    filled_data = pd.DataFrame()\n    \n    num_days = 7\n  \n    \n    # Apply the function to each group\n#     no_loc_df = df.drop([\"Latitude\", \"Longitude\"], axis=1)\n#     filled_data = no_loc_df.apply(lambda row: process_group_value_filling(row, num_days, target_date_str ), axis=1)\n#     filled_data[\"Latitude\"] = df[\"Latitude\"]\n#     filled_data[\"Longitude\"] = df[\"Longitude\"]\n    \n    filtered_columns = df.filter(like=\"lc_prop3\")\n    print(filtered_columns.columns)\n    filtered_columns = filtered_columns.mask(filtered_columns > 100)\n    filtered_columns.interpolate(axis=1, method='linear', inplace=True)\n    filtered_columns.fillna(0, inplace=True)\n\n    sum_column = filtered_columns.sum(axis=1)\n    # Define a specific name for the new column\n    df[f'cumulative_lc_prop3'] = sum_column\n    df[filtered_columns.columns] = filtered_columns\n\n    if filtered_columns.isnull().any().any():\n      print(\"filtered_columns :\", filtered_columns)\n      raise ValueError(\"Single group: shouldn't have null values here\")\n    \n    filled_data = df\n    filled_data[\"date\"] = target_date_str\n    #filled_data.fillna(0, inplace=True)\n  \n    if any(filled_data['lc_prop3'] > 100):\n      raise ValueError(\"Error: shouldn't have lc_prop3 > 100 at this point\")\n\n    print(\"Finished correctly \", filled_data.head())\n    filled_data.to_csv(gap_filled_csv, index=False)\n    print(f\"New filled values csv is saved to {output_csv}_gap_filled.csv\")\n    df = filled_data\n  \n  result = df\n  print(result['date'].unique())\n  print(result.shape)\n  print(result[\"lc_prop3\"].describe())\n  result.to_csv(output_csv, index=False)\n  print(f\"New data is saved to {output_csv}\")\n  shutil.copy(output_csv, backup_time_series_csv_path)\n  print(f\"File is backed up to {backup_time_series_csv_path}\")\n  cumulative_file_path =  f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n  shutil.copy(output_csv, cumulative_file_path)\n  \n#   input_time_series_file = f\"{modis_day_wise}/{test_start_date}_output_with_time_series.csv_gap_filled.csv\"\n#   target_cumulative_file = f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n#   shutil.copy(input_time_series_file, target_cumulative_file)\n  \n\n\ndef map_modis_to_station(row, src):\n#   transformer = Transformer.from_crs(\"EPSG:4326\", \n#                                      src.crs, \n#                                      always_xy=True)\n#   east, north = transformer.transform(row[\"Longitude\"], \n#                                       row[\"Latitude\"])\n  drow, dcol = src.index(row[\"Longitude\"], row[\"Latitude\"])\n  return drow, dcol\n  \n  \ndef prepare_modis_grid_mapper():\n  \"\"\"\n  Prepares a mapper file to map coordinates between station coordinates and MODIS grid coordinates.\n\n    This function performs the following steps:\n    1. Checks if the mapper file already exists. If yes, the function skips the generation process.\n    2. Reads station coordinates from a CSV file (`western_us_coords`) containing 'Longitude' and 'Latitude'.\n    3. Uses a sample MODIS TIFF file (`sample_modis_tif`) to map MODIS grid coordinates ('modis_x' and 'modis_y') to station coordinates.\n    4. Saves the resulting mapper file as a CSV (`mapper_file`) containing columns 'Latitude', 'Longitude', 'modis_x', and 'modis_y'.\n\n    Note: Ensure that necessary functions like `map_modis_to_station` are defined and available in the same scope.\n\n    Returns:\n    - None: The function primarily generates the mapper file with side effects.\n\n    Example:\n    ```python\n    prepare_modis_grid_mapper()\n    ```\n\n  \"\"\"\n  # actually, not sure this applied for modis. The tile HDF must be exactly same extent to make this work. Otherwise, the mapper won't get usable. \n  \n  if os.path.exists(mapper_file):\n    print(f\"The file {mapper_file} exists. skip.\")\n  else:\n    print(f\"start to generate {mapper_file}\")\n    station_df = pd.read_csv(western_us_coords, low_memory=False, usecols=['Longitude', 'Latitude'])\n\n    sample_modis_tif = f\"{modis_day_wise}/2022-10-01_water_mask.tif\"\n\n    with rasterio.open(sample_modis_tif) as src:\n      # Apply get_band_value for each row in the DataFrame\n      station_df['modis_y'], station_df['modis_x'] = zip(*station_df.apply(map_modis_to_station, axis=1, args=(src,)))\n\n\n      print(f\"Saving mapper csv file: {mapper_file}\")\n      station_df.to_csv(mapper_file, index=False, columns=['Latitude', 'Longitude', 'modis_x', 'modis_y'])\n    \ndef extract_data_for_testing(test_start_date):\n  \"\"\"\n    Extracts and processes MODIS data for testing purposes within a specified date range.\n\n    This function performs the following steps:\n    1. Determines the start and end dates based on the `test_start_date`.\n    2. Prepares the MODIS grid mapper using `prepare_modis_grid_mapper`.\n    3. Downloads, tiles, and merges MODIS data between the determined start and end dates using `download_tiles_and_merge`.\n    4. Iterates through each day in the date range, extracting data and saving it as day-wise CSV files using `process_file`.\n    5. Adds time series columns to the extracted data using `add_time_series_columns`.\n    6. Creates a cumulative CSV file by copying the output file with time series information.\n\n    Note: Ensure that necessary functions like `prepare_modis_grid_mapper`, `download_tiles_and_merge`, \n    `process_file`, and `add_time_series_columns` are defined and available in the same scope.\n\n    Returns:\n    - None: The function primarily performs data extraction and processing with side effects.\n\n    Example:\n    ```python\n    extract_data_for_testing()\n    ```\n\n  \"\"\"\n  print(\"get test_start_date = \", test_start_date)\n  end_date = datetime.strptime(test_start_date, \"%Y-%m-%d\")\n  print(end_date)\n  if end_date.month < 10:\n    past_october_1 = datetime(end_date.year - 1, 10, 1)\n  else:\n    past_october_1 = datetime(end_date.year, 10, 1)\n  \n  start_date = past_october_1\n  print(f\"The start_date of the water year {start_date}\")\n  \n  # prepare_modis_grid_mapper()\n  \n  download_tiles_and_merge(start_date, end_date)\n  \n  \n  current_date = start_date.strftime(\"%Y-%m-%d\")\n  print(f\"extracting data for {current_date}\")\n  outfile = os.path.join(modis_day_wise, f'{start_date.year}_output.csv')\n  if os.path.exists(outfile):\n    print(f\"The file {outfile} exists. skip.\")\n  else:\n    process_file(f'{modis_day_wise}/{start_date.year}__water_mask.tif', current_date)\n  \n  # add_time_series_columns(start_date, end_date, force=True)\n  \n\nif __name__ == \"__main__\":\n  extract_data_for_testing(\"2023-10-01\")\n\n  # cumulative_file_path =  f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n  # plot_all_variables_in_one_csv(cumulative_file_path, f\"{cumulative_file_path}.png\")\n\n  # SnowCover is missing from 10-12 to 10-23\n  #download_tiles_and_merge(datetime.strptime(\"2022-10-24\", \"%Y-%m-%d\"), datetime.strptime(\"2022-10-24\", \"%Y-%m-%d\"))\n\n\n",
  "history_output" : "today date = 2024-07-09\nDate variable not found in the environment.\n2024-07-06\ntest start date:  2024-07-06\ntest end date:  2024-5-19\n/home/chetana\nget test_start_date =  2023-10-01\n2023-10-01 00:00:00\nThe start_date of the water year 2023-10-01 00:00:00\nfile_size_bytes: 507832\nThe file /home/chetana/water_mask/final_output//2023__water_mask.tif exists. skip.\nextracting data for 2023-10-01\nThe file /home/chetana/water_mask/final_output/2023_output.csv exists. skip.\n",
  "history_begin_time" : 1720503385572,
  "history_end_time" : 1720503992228,
  "history_notes" : null,
  "history_process" : "1xdwd6",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "20lnlwomi4j",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1720503384205,
  "history_end_time" : 1720503992228,
  "history_notes" : null,
  "history_process" : "uw1w1u",
  "host_id" : "100001",
  "indicator" : "Stopped"
}]
