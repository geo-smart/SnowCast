[{
  "history_id" : "7tqp2a66rv2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988884,
  "history_end_time" : 1703642074612,
  "history_notes" : null,
  "history_process" : "78vedq",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1to48fikmry",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988886,
  "history_end_time" : 1703642074613,
  "history_notes" : null,
  "history_process" : "mxpyqt",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "walthrvm8b6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988888,
  "history_end_time" : 1703642074613,
  "history_notes" : null,
  "history_process" : "rauqsh",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "46t5z1hj95v",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988890,
  "history_end_time" : 1703642074613,
  "history_notes" : null,
  "history_process" : "u7xh2p",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "qigzszmrj18",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988892,
  "history_end_time" : 1703642074614,
  "history_notes" : null,
  "history_process" : "e8k4wq",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ew59tvqjudo",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1703642074614,
  "history_notes" : null,
  "history_process" : "h1qp9v",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "sokq2pimvdj",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988895,
  "history_end_time" : 1703642074623,
  "history_notes" : null,
  "history_process" : "urd0nk",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "jr0wlrj84ye",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988897,
  "history_end_time" : 1703642074623,
  "history_notes" : null,
  "history_process" : "525l8q",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "c6pw0or52n9",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988899,
  "history_end_time" : 1703642074623,
  "history_notes" : null,
  "history_process" : "7temiv",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zhf2r6vums2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988900,
  "history_end_time" : 1703642074623,
  "history_notes" : null,
  "history_process" : "rmxece",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "f16z3zleipe",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988901,
  "history_end_time" : 1703642074624,
  "history_notes" : null,
  "history_process" : "illwc1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "glvccnsoitf",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988903,
  "history_end_time" : 1703642074624,
  "history_notes" : null,
  "history_process" : "sjs5by",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "g1cu708xm6w",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988904,
  "history_end_time" : 1703642074624,
  "history_notes" : null,
  "history_process" : "y7nb46",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "azk9okhmgq2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988906,
  "history_end_time" : 1703642074624,
  "history_notes" : null,
  "history_process" : "a8p3n7",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "yixcuhxptj2",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988907,
  "history_end_time" : 1703642074624,
  "history_notes" : null,
  "history_process" : "smsdr0",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "lgz8e1ie2bn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988909,
  "history_end_time" : 1703642074624,
  "history_notes" : null,
  "history_process" : "4i0sop",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "le80rp3s9bq",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1703642074625,
  "history_notes" : null,
  "history_process" : "b63prf",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "gz7m2woj14z",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988911,
  "history_end_time" : 1703642074626,
  "history_notes" : null,
  "history_process" : "zh38b6",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "7ckpecpuh67",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988913,
  "history_end_time" : 1703642074627,
  "history_notes" : null,
  "history_process" : "wdh394",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "sed0futr9u5",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988914,
  "history_end_time" : 1703642074627,
  "history_notes" : null,
  "history_process" : "p87wh1",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8yihxk3xbhx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988916,
  "history_end_time" : 1703642074627,
  "history_notes" : null,
  "history_process" : "ilbqzg",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "4z9bcsqo5w1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988917,
  "history_end_time" : 1703642074627,
  "history_notes" : null,
  "history_process" : "do86ae",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "x3x3invzlrs",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988919,
  "history_end_time" : 1703642074627,
  "history_notes" : null,
  "history_process" : "gkhtc0",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1cf9tkhsgq6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988920,
  "history_end_time" : 1703642074628,
  "history_notes" : null,
  "history_process" : "lbd6cp",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "eve14h2crl6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988922,
  "history_end_time" : 1703642074628,
  "history_notes" : null,
  "history_process" : "br9etb",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k2t1hixuifh",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988923,
  "history_end_time" : 1703642074628,
  "history_notes" : null,
  "history_process" : "c2xkhz",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "m9ymtj43utr",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988925,
  "history_end_time" : 1703642074628,
  "history_notes" : null,
  "history_process" : "doinnd",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "vdtf1s5wf4h",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988926,
  "history_end_time" : 1703642074628,
  "history_notes" : null,
  "history_process" : "b7a4fu",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "000rg005vsk",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988928,
  "history_end_time" : 1703642074628,
  "history_notes" : null,
  "history_process" : "gnpbdq",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "99angbq1fz3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988930,
  "history_end_time" : 1703642074629,
  "history_notes" : null,
  "history_process" : "oon4sb",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ylk94zgx6fa",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988931,
  "history_end_time" : 1703642074629,
  "history_notes" : null,
  "history_process" : "fa7e4u",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zi6orxauj1a",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1703642074629,
  "history_notes" : null,
  "history_process" : "drwmbo",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bnotmnbgtsm",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988934,
  "history_end_time" : 1703642074631,
  "history_notes" : null,
  "history_process" : "2n7b06",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bozov59gnzx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988935,
  "history_end_time" : 1703642074631,
  "history_notes" : null,
  "history_process" : "bwdy3s",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "luwdfk9u8gh",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1703642074631,
  "history_notes" : null,
  "history_process" : "2wkl6e",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "bofu67l5el6",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1703642074632,
  "history_notes" : null,
  "history_process" : "i2fynz",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1zq8g2hhwyq",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988939,
  "history_end_time" : 1703642074634,
  "history_notes" : null,
  "history_process" : "2o6cp8",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "y8yjph3ayib",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1703642074634,
  "history_notes" : null,
  "history_process" : "0n26v2",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "rag5tfdnyim",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988942,
  "history_end_time" : 1703642074635,
  "history_notes" : null,
  "history_process" : "rvqv35",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "1zv1vfhyv8a",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988945,
  "history_end_time" : 1703642074636,
  "history_notes" : null,
  "history_process" : "6evkh4",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "19bl9zrk4j3",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988947,
  "history_end_time" : 1703642074636,
  "history_notes" : null,
  "history_process" : "76ewp5",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "m17ag0rtlpp",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988948,
  "history_end_time" : 1703642074636,
  "history_notes" : null,
  "history_process" : "5wzgx5",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "u2d6ipe7809",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988950,
  "history_end_time" : 1703642074636,
  "history_notes" : null,
  "history_process" : "d4zcq6",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zinb4rs3kfx",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988952,
  "history_end_time" : 1703642074636,
  "history_notes" : null,
  "history_process" : "6x6myw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "sr8g07kj1g1",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988953,
  "history_end_time" : 1703642074636,
  "history_notes" : null,
  "history_process" : "r4knm9",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "227blmjfqml",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988955,
  "history_end_time" : 1703642074636,
  "history_notes" : null,
  "history_process" : "9c573m",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "dtbldfwvcnn",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988956,
  "history_end_time" : 1703642074637,
  "history_notes" : null,
  "history_process" : "ee5ur4",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "st281gcrnu6",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988958,
  "history_end_time" : 1703642074637,
  "history_notes" : null,
  "history_process" : "f03i7p",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "87u0aq2jkwb",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988959,
  "history_end_time" : 1703642074637,
  "history_notes" : null,
  "history_process" : "83d2yv",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "kzxb0o113uo",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988961,
  "history_end_time" : 1703642074637,
  "history_notes" : null,
  "history_process" : "j8swco",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "kl45lut7rzl",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988963,
  "history_end_time" : 1703642074637,
  "history_notes" : null,
  "history_process" : "pnr64x",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "whxe6tqnp3b",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988964,
  "history_end_time" : 1703642074637,
  "history_notes" : null,
  "history_process" : "qg80lj",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ptuhglhmu6o",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988966,
  "history_end_time" : 1703642074638,
  "history_notes" : null,
  "history_process" : "ggy7gf",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "x6y0z60q7nv",
  "history_input" : "import os\nimport subprocess\nimport threading\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom pyproj import Transformer\nfrom rasterio.enums import Resampling\nimport numpy as np\n\nimport requests\nimport earthaccess\nfrom osgeo import gdal\nfrom snowcast_utils import work_dir, homedir, test_start_date, date_to_julian\nimport pandas as pd\nimport rasterio\nimport shutil\nimport time\nfrom convert_results_to_images import plot_all_variables_in_one_csv\nimport dask\nfrom dask import delayed\nimport dask.multiprocessing\nimport pyproj\n\n# change directory before running the code\nos.chdir(f\"{homedir}/fsca/\")\n\n\n\ntile_list = [\"h08v04\", \"h08v05\", \"h09v04\", \"h09v05\", \"h10v04\", \"h10v05\", \"h11v04\", \"h11v05\", \"h12v04\", \"h12v05\",\n             \"h13v04\", \"h13v05\", \"h15v04\", \"h16v03\", \"h16v04\", ]\ninput_folder = os.getcwd() + \"/temp/\"\noutput_folder = os.getcwd() + \"/output_folder/\"\nmodis_day_wise = os.getcwd() + \"/final_output/\"\nos.makedirs(output_folder, exist_ok=True)\nos.makedirs(modis_day_wise, exist_ok=True)\nwestern_us_coords = f'{work_dir}/dem_file.tif.csv'\nmapper_file = os.path.join(modis_day_wise, f'modis_to_dem_mapper.csv')\n\n\n@dask.delayed\ndef convert_hdf_to_geotiff(hdf_file, output_folder):\n    hdf_ds = gdal.Open(hdf_file, gdal.GA_ReadOnly)\n\n    target_subdataset_name = \"MOD_Grid_Snow_500m:NDSI_Snow_Cover\"\n    output_file_name = os.path.splitext(os.path.basename(hdf_file))[0] + \".tif\"\n    output_path = os.path.join(output_folder, output_file_name)\n\n    if os.path.exists(output_path):\n        return f\"The file {output_path} exists. skip.\"\n    else:\n        for subdataset in hdf_ds.GetSubDatasets():\n            if target_subdataset_name in subdataset[0]:\n                ds = gdal.Open(subdataset[0], gdal.GA_ReadOnly)\n                gdal.Translate(output_path, ds)\n                ds = None\n                break\n\n    hdf_ds = None\n    return f\"Converted {os.path.basename(hdf_file)} to GeoTIFF\"\n\ndef convert_all_hdf_in_folder(folder_path, output_folder):\n    file_list = []\n    delayed_tasks = []\n\n    for file in os.listdir(folder_path):\n        output_file_name = os.path.splitext(os.path.basename(file))[0] + \".tif\"\n        output_path = os.path.join(output_folder, output_file_name)\n        if os.path.exists(output_path):\n            # print(f\"The file {output_path} exists. skip.\")\n            continue\n        else:\n            file_list.append(file)\n            if file.lower().endswith(\".hdf\"):\n                hdf_file = os.path.join(folder_path, file)\n                task = convert_hdf_to_geotiff(hdf_file, output_folder)\n                delayed_tasks.append(task)\n\n    results = dask.compute(*delayed_tasks, scheduler=\"processes\")\n\n    return file_list, results\n\ndef get_env_var_for_gdalwarp():\n    if \"PROJ_LIB\" in os.environ:\n        os.environ.pop(\"PROJ_LIB\")\n        print(f\"Environment variable PROJ_LIB removed.\")\n    if \"GDAL_DATA\" in os.environ:\n        os.environ.pop(\"GDAL_DATA\")\n        print(f\"Environment variable GDAL_DATA removed.\")\n    return os.environ\n  \n\ndef merge_tifs(folder_path, target_date, output_file):\n  julian_date = date_to_julian(target_date)\n  print(\"target julian date\", julian_date)\n  tif_files = [os.path.join(folder_path, f) for f in os.listdir(folder_path) if f.endswith('.tif') and julian_date in f]\n  if len(tif_files) == 0:\n    print(f\"uh-oh, didn't find HDFs for date {target_date}\")\n    print(\"generate a new csv file with empty values for each point\")\n    gdal_command = ['/usr/bin/gdal_translate', \n                    '-b', '1', \n                    '-outsize', '100%', '100%', \n                    '-scale', '0', '255', '200', '200', \n                    f\"{modis_day_wise}/fsca_template.tif\", \n                    output_file]\n    print(\"Running \", \" \".join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n    #raise ValueError(f\"uh-oh, didn't find HDFs for date {target_date}\")\n  else:\n    # gdal_command = ['gdal_merge.py', '-o', output_file, '-of', 'GTiff', '-r', 'cubic'] + tif_files\n    #if 'PROJ_LIB' in os.environ:\n    #    del os.environ['PROJ_LIB']\n    print(\"pyproj.datadir.get_data_dir() = \", pyproj.datadir.get_data_dir())\n    gdal_command = ['/usr/bin/gdalwarp', '-r', 'min', ] + tif_files + [f\"{output_file}_500m.tif\"]\n    print(\"Running \", ' '.join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n    # gdalwarp -s_srs EPSG:4326 -t_srs EPSG:4326 -tr 0.036 0.036  -cutline template.shp -crop_to_cutline -overwrite output_4km.tif output_4km_clipped.tif\n    gdal_command = ['/usr/bin/gdalwarp', '-t_srs', 'EPSG:4326', '-tr', '0.036', '0.036', '-cutline', f'{work_dir}/template.shp', '-crop_to_cutline', '-overwrite', f\"{output_file}_500m.tif\", output_file]\n    print(\"Running \", \" \".join(gdal_command))\n    subprocess.run(gdal_command, env=get_env_var_for_gdalwarp())\n\n\ndef list_files(directory):\n  return [os.path.abspath(os.path.join(directory, f)) for f in os.listdir(directory) if\n          os.path.isfile(os.path.join(directory, f))]\n\n\ndef merge_tiles(date, hdf_files):\n  path = f\"data/{date}/\"\n  files = list_files(path)\n  print(files)\n  merged_filename = f\"data/{date}/merged.tif\"\n  merge_command = [\"gdal_merge.py\", \"-o\", merged_filename, \"-of\", \"GTiff\"] + files\n  try:\n    subprocess.run(merge_command)\n    print(f\"Merged tiles into {merged_filename}\")\n  except subprocess.CalledProcessError as e:\n    print(f\"Error merging tiles: {e}\")\n\n\ndef download_url(date, url):\n  file_name = url.split('/')[-1]\n  if os.path.exists(f'data/{date}/{file_name}'):\n    print(f'File: {file_name} already exists, SKIPPING')\n    return\n  try:\n    os.makedirs('data/', exist_ok=True)\n    os.makedirs(f'data/{date}', exist_ok=True)\n    response = requests.get(url, stream=True)\n    with open(f'data/{date}/{file_name}', 'wb') as f:\n      for chunk in response.iter_content(chunk_size=8192):\n        if chunk:\n          f.write(chunk)\n\n    print(f\"Downloaded {file_name}\")\n  except Exception as e:\n    print(f\"Error downloading {url}: {e}\")\n\n\ndef download_all(date, urls):\n  threads = []\n\n  for url in urls:\n    thread = threading.Thread(target=download_url, args=(date, url,))\n    thread.start()\n    threads.append(thread)\n\n  for thread in threads:\n    thread.join()\n\n\ndef delete_files_in_folder(folder_path):\n  if not os.path.exists(folder_path):\n    print(\"Folder does not exist.\")\n    return\n\n  for filename in os.listdir(folder_path):\n    file_path = os.path.join(folder_path, filename)\n    try:\n      if os.path.isfile(file_path) or os.path.islink(file_path):\n        os.unlink(file_path)\n      else:\n        print(f\"Skipping {filename}, as it is not a file.\")\n    except Exception as e:\n      print(f\"Failed to delete {file_path}. Reason: {e}\")\n\n\ndef download_tiles_and_merge(start_date, end_date):\n  date_list = [start_date + timedelta(days=i) for i in range((end_date - start_date).days + 1)]\n  for i in date_list:\n    current_date = i.strftime(\"%Y-%m-%d\")\n    target_output_tif = f'{modis_day_wise}/{current_date}__snow_cover.tif'\n    \n    if os.path.exists(target_output_tif):\n        file_size_bytes = os.path.getsize(target_output_tif)\n        print(f\"file_size_bytes: {file_size_bytes}\")\n        print(f\"The file {target_output_tif} exists. skip.\")\n    else:\n        print(f\"The file {target_output_tif} does not exist.\")\n        print(\"start to download files from NASA server to local\")\n        earthaccess.login(strategy=\"netrc\")\n        results = earthaccess.search_data(short_name=\"MOD10A1\", \n                                          cloud_hosted=False, \n                                          bounding_box=(-124.77, 24.52, -66.95, 49.38),\n                                          temporal=(current_date, current_date))\n        earthaccess.download(results, input_folder)\n        print(\"done with downloading, start to convert HDF to geotiff..\")\n\n        convert_all_hdf_in_folder(input_folder, output_folder)\n        print(\"done with conversion, start to merge geotiff tiles to one tif per day..\")\n\n        merge_tifs(folder_path=output_folder, target_date = current_date, output_file=target_output_tif)\n        print(f\"saved the merged tifs to {target_output_tif}\")\n    #delete_files_in_folder(input_folder)  # cleanup\n    #delete_files_in_folder(output_folder)  # cleanup\n\ndef get_value_at_coords(src, lat, lon, band_number=1):\n#     transformer = Transformer.from_crs(\"EPSG:4326\", src.crs, always_xy=True)\n#     east, north = transformer.transform(lon, lat)\n    if not (src.bounds.left <= lat <= src.bounds.right and src.bounds.bottom <= lon <= src.bounds.top):\n      return None\n    row, col = src.index(lat, lon)\n    if (0 <= row < src.height) and (0 <= col < src.width):\n      return src.read(band_number, window=((row, row+1), (col, col+1)), resampling=Resampling.nearest)[0, 0]\n    else:\n      return None\n\ndef get_band_value(row, src):\n    #row, col = src.index(row[\"Latitude\"], row[\"Longitude\"])\n    #print(row, col, src.height, src.width)\n    if (row[\"modis_y\"] < src.height) and (row[\"modis_x\"] < src.width):\n      valid_value =  src.read(1, \n                              window=((row[\"modis_y\"], \n                                       row[\"modis_y\"]+1), \n                                      (row[\"modis_x\"], \n                                       row[\"modis_x\"]+1))\n                             )\n      #print(\"extracted value array: \", valid_value)\n      #print(\"Found a valid value: \",row, valid_value, src.height, src.width)\n      return valid_value[0,0]\n    else:\n      return None\n          \ndef process_file(file_path, current_date):\n    \"\"\"\n    Process a raster file, extract values for specific coordinates, and save the result in a CSV file.\n\n    Parameters:\n    - file_path (str): Path to the raster file to be processed.\n    - current_date (str): Current date to be associated with the processed data.\n\n    Returns:\n    - str: Path to the saved CSV file containing the processed data.\n    \"\"\"\n\n    # Read the station DataFrame from a mapper file (assuming `mapper_file` is defined elsewhere)\n    station_df = pd.read_csv(mapper_file)\n    print(f\"Opening {file_path}\")\n\n    # Open the raster file using rasterio\n    with rasterio.open(file_path) as src:\n        # Apply get_band_value for each row in the DataFrame\n        station_df['fsca'] = station_df.apply(get_band_value, axis=1, args=(src,))\n\n    # Filter out None values\n    valid_data = station_df[station_df['fsca'].notna()]\n\n    # Prepare final data\n    valid_data['date'] = current_date\n    output_file = os.path.join(modis_day_wise, f'{current_date}_output.csv')\n    print(f\"Saving CSV file: {output_file}\")\n    valid_data.to_csv(output_file, index=False, columns=['date', 'Latitude', 'Longitude', 'fsca'])\n    \n    return output_file\n\n\ndef merge_cumulative_csv(start_date, end_date, force):\n  \n  current_date = start_date\n  target_date = end_date\n  \n  input_time_series_file = f\"{modis_day_wise}/{end_date.strftime('%Y-%m-%d')}_output_with_time_series.csv\"\n  target_cumulative_file = f\"{modis_day_wise}/{end_date.strftime('%Y-%m-%d')}_output.csv_cumulative.csv\"\n  \n  if os.path.exists(target_cumulative_file) and not force:\n    print(f\"file already exists {target_cumulative_file}\")\n    return\n  \n  df = pd.read_csv(input_time_series_file)\n\n  # add all the columns together and save to new csv\n  # Adding all columns except latitude and longitude\n  df = df.apply(pd.to_numeric, errors='coerce')\n\n  #new_df = new_df.head(2000)\n\n  fsca_cols = [col for col in df.columns if col.startswith('fsca')]\n  print(\"fsca_cols are: \", fsca_cols)\n  \n  df['cumulative_fsca'] = df[fsca_cols].sum(axis=1)\n\n  df = df.loc[:, ['Latitude', 'Longitude', f\"fsca\", 'cumulative_fsca']]\n  df[\"date\"] = end_date\n\n  print(\"new_df final shape: \", df.head())\n  df.to_csv(target_cumulative_file, index=False)\n  print(f\"new df is saved to {target_cumulative_file}\")\n\n  print(df['cumulative_fsca'].describe(include='all'))\n\ndef add_cumulative_column(df, column_name):\n  df[f'cumulative_{column_name}'] = df[column_name].cumsum()\n  return df\n\n# Function to perform polynomial interpolation and fill in missing values\ndef interpolate_missing_and_add_cumulative_inplace(row, column_name, degree=1):\n  \"\"\"\n  Interpolate missing values in a Pandas Series using polynomial interpolation\n  and add a cumulative column.\n\n  Parameters:\n    - row (pd.Series): The input row containing the data to be interpolated.\n    - column_name (str): The name of the column to be interpolated.\n    - degree (int, optional): The degree of the polynomial fit. Default is 1 (linear).\n\n  Returns:\n    - pd.Series: The row with interpolated values and a cumulative column.\n\n  Raises:\n    - ValueError: If there are unexpected null values after interpolation.\n\n  Note:\n    - For 'SWE' column, values above 240 are treated as gaps and set to 240.\n    - For 'fsca' column, values above 100 are treated as gaps and set to 100.\n\n  Examples:\n    ```python\n    # Example usage:\n    interpolated_row = interpolate_missing_and_add_cumulative_inplace(my_row, 'fsca', degree=2)\n    ```\n\n  \"\"\"\n  \n  # Extract X series (column names)\n  x_key = row.index\n  x = np.arange(len(x_key))\n\n  # Extract Y series (values from the first row)\n  y = row\n  \n\n  # Create a mask for missing values\n  if column_name == \"SWE\":\n    mask = (y > 240) | y.isnull()\n  elif column_name == \"fsca\":\n    mask = (y > 100) | y.isnull()\n  else:\n    mask = y.isnull()\n\n  # Check if all elements in the mask array are True\n  all_true = np.all(mask)\n\n  if all_true or len(np.where(~mask)[0]) == 1:\n    row.values[:] = 0\n  else:\n    # Perform interpolation\n    #new_y = np.interp(x, x[~mask], y[~mask])\n    # Replace missing values with interpolated values\n    #df[column_name] = new_y\n    \n    try:\n      # Coefficients of the polynomial fit\n      coefficients = np.polyfit(x[~mask], y[~mask], deg=degree)\n\n      # Perform polynomial interpolation\n      interpolated_values = np.polyval(coefficients, x)\n\n      # Merge using np.where\n      merged_array = np.where(mask, interpolated_values, y)\n\n      row = pd.Series(merged_array, index=x_key)\n    except Exception as e:\n      # Print the error message and traceback\n      import traceback\n      traceback.print_exc()\n      print(\"x:\", x)\n      print(\"y:\", y)\n      print(\"mask:\", mask)\n      print(f\"Error: {e}\")\n      raise e\n      \n    if column_name == \"AMSR_SWE\":\n      row = row.clip(upper=240, lower=0)\n    elif column_name == \"fsca\":\n      row = row.clip(upper=100, lower=0)\n\n    if row.isnull().any():\n      print(\"x:\", x)\n      print(\"y:\", y)\n      print(\"mask:\", mask)\n      print(\"why row still has values > 100\", row)\n      raise ValueError(\"Single group: shouldn't have null values here\")\n\n  \n  # create the cumulative column after interpolation\n  row[f\"cumulative_{column_name}\"] = row.sum()\n  return row\n\n\ndef add_time_series_columns(start_date, end_date, force=True):\n  \"\"\"\n  Converts data from a cleaned CSV file into a time series format.\n\n  This function reads a cleaned CSV file, sorts the data, fills in missing values using polynomial interpolation,\n  and creates a time series dataset for specific columns. The resulting time series data is saved to a new CSV file.\n\n  Parameters:\n    - start_date (str): The start date of the time series data in the format 'YYYY-MM-DD'.\n    - end_date (str): The end date of the time series data in the format 'YYYY-MM-DD'.\n    - force (bool, optional): If True, forces the regeneration of time series data even if the output file exists.\n\n    Returns:\n    - None: The function primarily generates time series data and saves it to a CSV file with side effects.\n\n  Example:\n    ```python\n    add_time_series_columns('2022-01-01', '2022-12-31', force=True)\n    ```\n\n  \"\"\"\n  current_date = start_date\n  target_date = end_date\n  target_date_str = target_date.strftime('%Y-%m-%d')\n  \n  output_csv = f\"{modis_day_wise}/{target_date_str}_output_with_time_series.csv\"\n  print(f\"target csv: {output_csv}\")\n        \n  if os.path.exists(output_csv) and not force:\n    print(f\"{output_csv} already exists, skipping..\")\n    return\n  \n  backup_time_series_csv_path = f\"{modis_day_wise}/{target_date_str}_output_with_time_series_backup.csv\"\n  \n  columns_to_be_time_series = ['fsca']\n\n  # Read the all the column merged CSV\n  \n  date_keyed_objects = {}\n  data_dict = {}\n  new_df = None\n  while current_date <= end_date:\n    \n    current_date_str = current_date.strftime('%Y-%m-%d')\n  \n    data_dict[current_date_str] = f\"{modis_day_wise}/{current_date_str}_output.csv\"\n    #print(data_dict[current_date_str])\n    current_df = pd.read_csv(data_dict[current_date_str])\n    current_df.drop([\"date\"], axis=1, inplace=True)\n    \n    if current_date != end_date:\n      current_df.rename(columns={\"fsca\": f\"fsca_{current_date_str}\"}, inplace=True)\n    #print(current_df.head())\n    \n    if new_df is None:\n      new_df = current_df\n    else:\n      new_df = pd.merge(new_df, current_df, on=['Latitude', 'Longitude'])\n      #new_df = new_df.append(current_df, ignore_index=True)\n\n    current_date += timedelta(days=1)\n\n  print(\"new_df.columns = \", new_df.columns)\n  print(new_df.head())\n  \n  df = new_df\n        \n  gap_filled_csv = f\"{output_csv}_gap_filled.csv\"\n  if os.path.exists(gap_filled_csv) and not force:\n    print(f\"{gap_filled_csv} already exists, skipping..\")\n    df = pd.read_csv(gap_filled_csv)\n    print(df[\"fsca\"].describe())\n  else:\n  \n    #df.sort_values(by=['Latitude', 'Longitude'], inplace=True)\n    print(\"All current columns: \", df.columns)\n    \n    \n    print(\"Start to fill in the missing values\")\n    print(\"all the df shape: \", df.shape)\n    #grouped = df.groupby(['Latitude', 'Longitude'])\n    #num_groups = len(grouped.groups)\n    #print(f\"Number of groups: {num_groups}\")\n    filled_data = pd.DataFrame()\n    \n    num_days = 7\n  \n    \n    # Apply the function to each group\n#     no_loc_df = df.drop([\"Latitude\", \"Longitude\"], axis=1)\n#     filled_data = no_loc_df.apply(lambda row: process_group_value_filling(row, num_days, target_date_str ), axis=1)\n#     filled_data[\"Latitude\"] = df[\"Latitude\"]\n#     filled_data[\"Longitude\"] = df[\"Longitude\"]\n    \n    filtered_columns = df.filter(like=\"fsca\")\n    print(filtered_columns.columns)\n    filtered_columns = filtered_columns.mask(filtered_columns > 100)\n    filtered_columns.interpolate(axis=1, method='linear', inplace=True)\n    filtered_columns.fillna(0, inplace=True)\n\n    sum_column = filtered_columns.sum(axis=1)\n    # Define a specific name for the new column\n    df[f'cumulative_fsca'] = sum_column\n    df[filtered_columns.columns] = filtered_columns\n\n    if filtered_columns.isnull().any().any():\n      print(\"filtered_columns :\", filtered_columns)\n      raise ValueError(\"Single group: shouldn't have null values here\")\n    \n    filled_data = df\n    filled_data[\"date\"] = target_date_str\n    #filled_data.fillna(0, inplace=True)\n  \n    if any(filled_data['fsca'] > 100):\n      raise ValueError(\"Error: shouldn't have fsca > 100 at this point\")\n\n    print(\"Finished correctly \", filled_data.head())\n    filled_data.to_csv(gap_filled_csv, index=False)\n    print(f\"New filled values csv is saved to {output_csv}_gap_filled.csv\")\n    df = filled_data\n  \n  result = df\n  print(result['date'].unique())\n  print(result.shape)\n  print(result[\"fsca\"].describe())\n  result.to_csv(output_csv, index=False)\n  print(f\"New data is saved to {output_csv}\")\n  shutil.copy(output_csv, backup_time_series_csv_path)\n  print(f\"File is backed up to {backup_time_series_csv_path}\")\n  cumulative_file_path =  f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n  shutil.copy(output_csv, cumulative_file_path)\n  \n#   input_time_series_file = f\"{modis_day_wise}/{test_start_date}_output_with_time_series.csv_gap_filled.csv\"\n#   target_cumulative_file = f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n#   shutil.copy(input_time_series_file, target_cumulative_file)\n  \n\n\ndef map_modis_to_station(row, src):\n#   transformer = Transformer.from_crs(\"EPSG:4326\", \n#                                      src.crs, \n#                                      always_xy=True)\n#   east, north = transformer.transform(row[\"Longitude\"], \n#                                       row[\"Latitude\"])\n  drow, dcol = src.index(row[\"Longitude\"], row[\"Latitude\"])\n  return drow, dcol\n  \n  \ndef prepare_modis_grid_mapper():\n  \"\"\"\n  Prepares a mapper file to map coordinates between station coordinates and MODIS grid coordinates.\n\n    This function performs the following steps:\n    1. Checks if the mapper file already exists. If yes, the function skips the generation process.\n    2. Reads station coordinates from a CSV file (`western_us_coords`) containing 'Longitude' and 'Latitude'.\n    3. Uses a sample MODIS TIFF file (`sample_modis_tif`) to map MODIS grid coordinates ('modis_x' and 'modis_y') to station coordinates.\n    4. Saves the resulting mapper file as a CSV (`mapper_file`) containing columns 'Latitude', 'Longitude', 'modis_x', and 'modis_y'.\n\n    Note: Ensure that necessary functions like `map_modis_to_station` are defined and available in the same scope.\n\n    Returns:\n    - None: The function primarily generates the mapper file with side effects.\n\n    Example:\n    ```python\n    prepare_modis_grid_mapper()\n    ```\n\n  \"\"\"\n  # actually, not sure this applied for modis. The tile HDF must be exactly same extent to make this work. Otherwise, the mapper won't get usable. \n  \n  if os.path.exists(mapper_file):\n    print(f\"The file {mapper_file} exists. skip.\")\n  else:\n    print(f\"start to generate {mapper_file}\")\n    station_df = pd.read_csv(western_us_coords, low_memory=False, usecols=['Longitude', 'Latitude'])\n\n    sample_modis_tif = f\"{modis_day_wise}/2022-10-01__snow_cover.tif\"\n\n    with rasterio.open(sample_modis_tif) as src:\n      # Apply get_band_value for each row in the DataFrame\n      station_df['modis_y'], station_df['modis_x'] = zip(*station_df.apply(map_modis_to_station, axis=1, args=(src,)))\n\n\n      print(f\"Saving mapper csv file: {mapper_file}\")\n      station_df.to_csv(mapper_file, index=False, columns=['Latitude', 'Longitude', 'modis_x', 'modis_y'])\n    \ndef extract_data_for_testing():\n  \"\"\"\n    Extracts and processes MODIS data for testing purposes within a specified date range.\n\n    This function performs the following steps:\n    1. Determines the start and end dates based on the `test_start_date`.\n    2. Prepares the MODIS grid mapper using `prepare_modis_grid_mapper`.\n    3. Downloads, tiles, and merges MODIS data between the determined start and end dates using `download_tiles_and_merge`.\n    4. Iterates through each day in the date range, extracting data and saving it as day-wise CSV files using `process_file`.\n    5. Adds time series columns to the extracted data using `add_time_series_columns`.\n    6. Creates a cumulative CSV file by copying the output file with time series information.\n\n    Note: Ensure that necessary functions like `prepare_modis_grid_mapper`, `download_tiles_and_merge`, \n    `process_file`, and `add_time_series_columns` are defined and available in the same scope.\n\n    Returns:\n    - None: The function primarily performs data extraction and processing with side effects.\n\n    Example:\n    ```python\n    extract_data_for_testing()\n    ```\n\n  \"\"\"\n  print(\"get test_start_date = \", test_start_date)\n  end_date = datetime.strptime(test_start_date, \"%Y-%m-%d\")\n  print(end_date)\n  if end_date.month < 10:\n    past_october_1 = datetime(end_date.year - 1, 10, 1)\n  else:\n    past_october_1 = datetime(end_date.year, 10, 1)\n  \n  start_date = past_october_1\n  print(f\"The start_date of the water year {start_date}\")\n  \n  prepare_modis_grid_mapper()\n  \n  download_tiles_and_merge(start_date, end_date)\n  \n  date_list = [start_date + timedelta(days=i) for i in range((end_date - start_date).days + 1)]\n  for i in date_list:\n    current_date = i.strftime(\"%Y-%m-%d\")\n    print(f\"extracting data for {current_date}\")\n    outfile = os.path.join(modis_day_wise, f'{current_date}_output.csv')\n    if os.path.exists(outfile):\n      print(f\"The file {outfile} exists. skip.\")\n    else:\n      process_file(f'{modis_day_wise}/{current_date}__snow_cover.tif', current_date)\n  \n  add_time_series_columns(start_date, end_date, force=True)\n  \n  \n\nif __name__ == \"__main__\":\n  extract_data_for_testing()\n\n  cumulative_file_path =  f\"{modis_day_wise}/{test_start_date}_output.csv_cumulative.csv\"\n  plot_all_variables_in_one_csv(cumulative_file_path, f\"{cumulative_file_path}.png\")\n\n  # SnowCover is missing from 10-12 to 10-23\n  #download_tiles_and_merge(datetime.strptime(\"2022-10-24\", \"%Y-%m-%d\"), datetime.strptime(\"2022-10-24\", \"%Y-%m-%d\"))\n\n",
  "history_output" : "today date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\nget test_start_date =  2023-12-10\n2023-12-10 00:00:00\nThe start_date of the water year 2023-10-01 00:00:00\nThe file /home/chetana/fsca/final_output/modis_to_dem_mapper.csv exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2023-10-01__snow_cover.tif exists. skip.\nfile_size_bytes: 509344\nThe file /home/chetana/fsca/final_output//2023-10-02__snow_cover.tif exists. skip.\nfile_size_bytes: 509484\nThe file /home/chetana/fsca/final_output//2023-10-03__snow_cover.tif exists. skip.\nThe file /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif does not exist.\nstart to download files from NASA server to local\nGranules found: 17\n Getting 17 granules, approx download size: 0.08 GB\nQUEUEING TASKS | :   0%|          | 0/17 [00:00<?, ?it/s]\nQUEUEING TASKS | : 100%|██████████| 17/17 [00:00<00:00, 606.19it/s]\nPROCESSING TASKS | :   0%|          | 0/17 [00:00<?, ?it/s]\nPROCESSING TASKS | :   6%|▌         | 1/17 [00:00<00:13,  1.22it/s]\nPROCESSING TASKS | :  12%|█▏        | 2/17 [00:00<00:06,  2.36it/s]\nPROCESSING TASKS | :  24%|██▎       | 4/17 [00:01<00:02,  4.67it/s]\nPROCESSING TASKS | :  47%|████▋     | 8/17 [00:01<00:00,  9.88it/s]\nPROCESSING TASKS | :  59%|█████▉    | 10/17 [00:01<00:01,  5.61it/s]\nPROCESSING TASKS | :  71%|███████   | 12/17 [00:02<00:00,  5.94it/s]\nPROCESSING TASKS | :  82%|████████▏ | 14/17 [00:02<00:00,  7.10it/s]\nPROCESSING TASKS | :  94%|█████████▍| 16/17 [00:02<00:00,  6.90it/s]\nPROCESSING TASKS | : 100%|██████████| 17/17 [00:02<00:00,  5.97it/s]\nCOLLECTING RESULTS | :   0%|          | 0/17 [00:00<?, ?it/s]\nCOLLECTING RESULTS | : 100%|██████████| 17/17 [00:00<00:00, 54099.52it/s]\ndone with downloading, start to convert HDF to geotiff..\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ndone with conversion, start to merge geotiff tiles to one tif per day..\ntarget julian date 2023277\npyproj.datadir.get_data_dir() =  /home/chetana/anaconda3/lib/python3.9/site-packages/pyproj/proj_dir/share/proj\nRunning  /usr/bin/gdalwarp -r min /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v05.061.2023279032917.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h13v04.061.2023279030954.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v06.061.2023279030533.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v06.061.2023277035239.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v04.061.2023277034424.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v04.061.2023279032552.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v05.061.2023279030943.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v04.061.2023277033754.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v06.061.2023279031125.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h07v06.061.2023277033527.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v06.061.2023279030236.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v04.061.2023277035410.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v06.061.2023277033738.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v05.061.2023277033658.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v06.061.2023279030951.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v06.061.2023277034631.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v06.061.2023277033515.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v05.061.2023279032932.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v05.061.2023277034228.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v06.061.2023279030624.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v04.061.2023279030836.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h13v04.061.2023277033525.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h12v05.061.2023277033657.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v05.061.2023279031117.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v05.061.2023277034104.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v04.061.2023279033849.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h12v04.061.2023277034226.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v05.061.2023277034041.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v05.061.2023279030139.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h07v05.061.2023277033733.tif /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v04.061.2023277033526.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v04.061.2023279033306.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v04.061.2023279032037.tif /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif_500m.tif\nEnvironment variable PROJ_LIB removed.\nEnvironment variable GDAL_DATA removed.\nCreating output file that is 16800P x 7200L.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif.\nCopying nodata values from source /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif to destination /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif_500m.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v05.061.2023279032917.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v05.061.2023279032917.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h13v04.061.2023279030954.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h13v04.061.2023279030954.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v06.061.2023279030533.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v06.061.2023279030533.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v06.061.2023277035239.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v06.061.2023277035239.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v04.061.2023277034424.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v04.061.2023277034424.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v04.061.2023279032552.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v04.061.2023279032552.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v05.061.2023279030943.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v05.061.2023279030943.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v04.061.2023277033754.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v04.061.2023277033754.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v06.061.2023279031125.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v06.061.2023279031125.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h07v06.061.2023277033527.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h07v06.061.2023277033527.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v06.061.2023279030236.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v06.061.2023279030236.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v04.061.2023277035410.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v04.061.2023277035410.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v06.061.2023277033738.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v06.061.2023277033738.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v05.061.2023277033658.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h11v05.061.2023277033658.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v06.061.2023279030951.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v06.061.2023279030951.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v06.061.2023277034631.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v06.061.2023277034631.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v06.061.2023277033515.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v06.061.2023277033515.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v05.061.2023279032932.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v05.061.2023279032932.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v05.061.2023277034228.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h08v05.061.2023277034228.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v06.061.2023279030624.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v06.061.2023279030624.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v04.061.2023279030836.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v04.061.2023279030836.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h13v04.061.2023277033525.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h13v04.061.2023277033525.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h12v05.061.2023277033657.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h12v05.061.2023277033657.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v05.061.2023279031117.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v05.061.2023279031117.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v05.061.2023277034104.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v05.061.2023277034104.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v04.061.2023279033849.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v04.061.2023279033849.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h12v04.061.2023277034226.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h12v04.061.2023277034226.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v05.061.2023277034041.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h10v05.061.2023277034041.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v05.061.2023279030139.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v05.061.2023279030139.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h07v05.061.2023277033733.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h07v05.061.2023277033733.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v04.061.2023277033526.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023275.h09v04.061.2023277033526.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v04.061.2023279033306.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v04.061.2023279033306.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v04.061.2023279032037.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v04.061.2023279032037.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nRunning  /usr/bin/gdalwarp -t_srs EPSG:4326 -tr 0.036 0.036 -cutline /home/chetana/gridmet_test_run/template.shp -crop_to_cutline -overwrite /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif_500m.tif /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif\nCreating output file that is 755P x 666L.\nProcessing input file /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif_500m.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif_500m.tif.\nCopying nodata values from source /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif_500m.tif to destination /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nsaved the merged tifs to /home/chetana/fsca/final_output//2023-10-04__snow_cover.tif\nThe file /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif does not exist.\nstart to download files from NASA server to local\nGranules found: 17\n Getting 17 granules, approx download size: 0.07 GB\nQUEUEING TASKS | :   0%|          | 0/17 [00:00<?, ?it/s]\nQUEUEING TASKS | : 100%|██████████| 17/17 [00:00<00:00, 599.02it/s]\nPROCESSING TASKS | :   0%|          | 0/17 [00:00<?, ?it/s]\nPROCESSING TASKS | :   6%|▌         | 1/17 [00:00<00:14,  1.10it/s]\nPROCESSING TASKS | :  24%|██▎       | 4/17 [00:01<00:02,  4.43it/s]\nPROCESSING TASKS | :  35%|███▌      | 6/17 [00:01<00:01,  5.95it/s]\nPROCESSING TASKS | :  41%|████      | 7/17 [00:01<00:02,  4.12it/s]\nPROCESSING TASKS | :  47%|████▋     | 8/17 [00:01<00:01,  4.80it/s]\nPROCESSING TASKS | :  53%|█████▎    | 9/17 [00:02<00:01,  4.84it/s]\nPROCESSING TASKS | :  65%|██████▍   | 11/17 [00:02<00:00,  6.94it/s]\nPROCESSING TASKS | :  76%|███████▋  | 13/17 [00:02<00:00,  7.78it/s]\nPROCESSING TASKS | :  82%|████████▏ | 14/17 [00:02<00:00,  5.85it/s]\nPROCESSING TASKS | :  94%|█████████▍| 16/17 [00:02<00:00,  7.47it/s]\nPROCESSING TASKS | : 100%|██████████| 17/17 [00:02<00:00,  5.81it/s]\nCOLLECTING RESULTS | :   0%|          | 0/17 [00:00<?, ?it/s]\nCOLLECTING RESULTS | : 100%|██████████| 17/17 [00:00<00:00, 53450.65it/s]\ndone with downloading, start to convert HDF to geotiff..\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ndone with conversion, start to merge geotiff tiles to one tif per day..\ntarget julian date 2023278\npyproj.datadir.get_data_dir() =  /home/chetana/anaconda3/lib/python3.9/site-packages/pyproj/proj_dir/share/proj\nRunning  /usr/bin/gdalwarp -r min /home/chetana/fsca/output_folder/MOD10A1.A2023278.h13v04.061.2023280054119.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v06.061.2023280045255.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h07v06.061.2023280052446.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v04.061.2023278221807.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v05.061.2023278220309.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v06.061.2023278220537.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v05.061.2023278222527.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v06.061.2023278220327.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v04.061.2023278221807.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h07v05.061.2023278220333.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v04.061.2023280052742.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v04.061.2023280055457.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h13v04.061.2023278220641.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v05.061.2023278221326.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v05.061.2023280052727.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h07v06.061.2023278220419.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v05.061.2023280054219.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h12v05.061.2023278221730.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v06.061.2023280051722.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v04.061.2023278220422.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v06.061.2023278222428.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v05.061.2023280053548.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v04.061.2023280052451.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v06.061.2023280053331.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h12v04.061.2023278220548.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v04.061.2023280052715.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v05.061.2023280051812.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h12v04.061.2023280053700.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h07v05.061.2023280082510.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h12v05.061.2023280052725.tif /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v06.061.2023280052731.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v04.061.2023278220532.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v05.061.2023278220533.tif /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v06.061.2023278221326.tif /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif_500m.tif\nCreating output file that is 16800P x 7200L.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h13v04.061.2023280054119.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h13v04.061.2023280054119.tif.\nCopying nodata values from source /home/chetana/fsca/output_folder/MOD10A1.A2023278.h13v04.061.2023280054119.tif to destination /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif_500m.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v06.061.2023280045255.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v06.061.2023280045255.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h07v06.061.2023280052446.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h07v06.061.2023280052446.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v04.061.2023278221807.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v04.061.2023278221807.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v05.061.2023278220309.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v05.061.2023278220309.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v06.061.2023278220537.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v06.061.2023278220537.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v05.061.2023278222527.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v05.061.2023278222527.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v06.061.2023278220327.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h11v06.061.2023278220327.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v04.061.2023278221807.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v04.061.2023278221807.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h07v05.061.2023278220333.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h07v05.061.2023278220333.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v04.061.2023280052742.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v04.061.2023280052742.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v04.061.2023280055457.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v04.061.2023280055457.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h13v04.061.2023278220641.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h13v04.061.2023278220641.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v05.061.2023278221326.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v05.061.2023278221326.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v05.061.2023280052727.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v05.061.2023280052727.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h07v06.061.2023278220419.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h07v06.061.2023278220419.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v05.061.2023280054219.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v05.061.2023280054219.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h12v05.061.2023278221730.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h12v05.061.2023278221730.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v06.061.2023280051722.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v06.061.2023280051722.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v04.061.2023278220422.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h10v04.061.2023278220422.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v06.061.2023278222428.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v06.061.2023278222428.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v05.061.2023280053548.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v05.061.2023280053548.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v04.061.2023280052451.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v04.061.2023280052451.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v06.061.2023280053331.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h09v06.061.2023280053331.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h12v04.061.2023278220548.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h12v04.061.2023278220548.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v04.061.2023280052715.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h11v04.061.2023280052715.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v05.061.2023280051812.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h08v05.061.2023280051812.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h12v04.061.2023280053700.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h12v04.061.2023280053700.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h07v05.061.2023280082510.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h07v05.061.2023280082510.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h12v05.061.2023280052725.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h12v05.061.2023280052725.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v06.061.2023280052731.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023278.h10v06.061.2023280052731.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v04.061.2023278220532.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v04.061.2023278220532.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v05.061.2023278220533.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h08v05.061.2023278220533.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v06.061.2023278221326.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023276.h09v06.061.2023278221326.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nRunning  /usr/bin/gdalwarp -t_srs EPSG:4326 -tr 0.036 0.036 -cutline /home/chetana/gridmet_test_run/template.shp -crop_to_cutline -overwrite /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif_500m.tif /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif\nCreating output file that is 755P x 666L.\nProcessing input file /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif_500m.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif_500m.tif.\nCopying nodata values from source /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif_500m.tif to destination /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nsaved the merged tifs to /home/chetana/fsca/final_output//2023-10-05__snow_cover.tif\nThe file /home/chetana/fsca/final_output//2023-10-06__snow_cover.tif does not exist.\nstart to download files from NASA server to local\nGranules found: 17\n Getting 17 granules, approx download size: 0.08 GB\nQUEUEING TASKS | :   0%|          | 0/17 [00:00<?, ?it/s]\nQUEUEING TASKS | : 100%|██████████| 17/17 [00:00<00:00, 673.24it/s]\nPROCESSING TASKS | :   0%|          | 0/17 [00:00<?, ?it/s]\nPROCESSING TASKS | :   6%|▌         | 1/17 [00:00<00:12,  1.28it/s]\nPROCESSING TASKS | :  24%|██▎       | 4/17 [00:00<00:02,  5.63it/s]\nPROCESSING TASKS | :  35%|███▌      | 6/17 [00:01<00:01,  6.72it/s]\nPROCESSING TASKS | :  53%|█████▎    | 9/17 [00:01<00:01,  4.85it/s]\nPROCESSING TASKS | :  71%|███████   | 12/17 [00:02<00:00,  6.70it/s]\nPROCESSING TASKS | :  82%|████████▏ | 14/17 [00:02<00:00,  7.45it/s]\nPROCESSING TASKS | : 100%|██████████| 17/17 [00:03<00:00,  5.84it/s]\nPROCESSING TASKS | : 100%|██████████| 17/17 [00:03<00:00,  5.65it/s]\nCOLLECTING RESULTS | :   0%|          | 0/17 [00:00<?, ?it/s]\nCOLLECTING RESULTS | : 100%|██████████| 17/17 [00:00<00:00, 72096.23it/s]\ndone with downloading, start to convert HDF to geotiff..\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nERROR 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\nWarning 1: PROJ: proj_create_from_name: Open of /home/chetana/anaconda3/share/proj failed\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ntoday date = 2023-12-27\ntest start date:  2023-12-10\ntest end date:  2023-12-11\n/home/chetana\n2022275\ndone with conversion, start to merge geotiff tiles to one tif per day..\ntarget julian date 2023279\npyproj.datadir.get_data_dir() =  /home/chetana/anaconda3/lib/python3.9/site-packages/pyproj/proj_dir/share/proj\nRunning  /usr/bin/gdalwarp -r min /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v05.061.2023279032917.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h13v04.061.2023279030954.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v06.061.2023279030533.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h08v05.061.2023281033100.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v04.061.2023279032552.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h12v05.061.2023281033058.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v05.061.2023279030943.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h10v06.061.2023281033625.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h09v04.061.2023281033326.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v06.061.2023279031125.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h08v06.061.2023281033357.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v06.061.2023279030236.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h10v04.061.2023281033358.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h11v06.061.2023281032516.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v06.061.2023279030951.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v05.061.2023279032932.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h10v05.061.2023281033839.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v06.061.2023279030624.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v04.061.2023279030836.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h08v04.061.2023281032956.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v05.061.2023279031117.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v04.061.2023279033849.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h07v06.061.2023281032819.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h12v04.061.2023281032818.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h07v05.061.2023281033100.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v05.061.2023279030139.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h11v04.061.2023281034120.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h09v05.061.2023281033356.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h13v04.061.2023281033624.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v04.061.2023279033306.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h11v05.061.2023281033908.tif /home/chetana/fsca/output_folder/MOD10A1.A2023279.h09v06.061.2023281033411.tif /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v04.061.2023279032037.tif /home/chetana/fsca/final_output//2023-10-06__snow_cover.tif_500m.tif\nCreating output file that is 16800P x 7200L.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif.\nCopying nodata values from source /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v05.061.2023279031131.tif to destination /home/chetana/fsca/final_output//2023-10-06__snow_cover.tif_500m.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v05.061.2023279032917.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h09v05.061.2023279032917.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h13v04.061.2023279030954.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h13v04.061.2023279030954.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v06.061.2023279030533.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h11v06.061.2023279030533.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023279.h08v05.061.2023281033100.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023279.h08v05.061.2023281033100.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v04.061.2023279032552.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h10v04.061.2023279032552.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023279.h12v05.061.2023281033058.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023279.h12v05.061.2023281033058.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v05.061.2023279030943.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h12v05.061.2023279030943.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023279.h10v06.061.2023281033625.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023279.h10v06.061.2023281033625.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023279.h09v04.061.2023281033326.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023279.h09v04.061.2023281033326.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v06.061.2023279031125.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h07v06.061.2023279031125.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023279.h08v06.061.2023281033357.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023279.h08v06.061.2023281033357.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v06.061.2023279030236.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023277.h08v06.061.2023279030236.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023279.h10v04.061.2023281033358.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023279.h10v04.061.2023281033358.tif.\n0...10...20...30...40...50...60...70...80...90...100 - done.\nProcessing input file /home/chetana/fsca/output_folder/MOD10A1.A2023279.h11v06.061.2023281032516.tif.\nUsing internal nodata values (e.g. 255) for image /home/chetana/fsca/output_folder/MOD10A1.A2023279.h11v06.061.2023281032516.tif.\n\nStream closed",
  "history_begin_time" : 1703641989475,
  "history_end_time" : 1703642074706,
  "history_notes" : null,
  "history_process" : "c2qa9u",
  "host_id" : "100001",
  "indicator" : "Failed"
},{
  "history_id" : "5kk880c144q",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988968,
  "history_end_time" : 1703642074640,
  "history_notes" : null,
  "history_process" : "lnrsop",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "e35fdyhgzay",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1703641988970,
  "history_end_time" : 1703642074640,
  "history_notes" : null,
  "history_process" : "c8isgf",
  "host_id" : "100001",
  "indicator" : "Stopped"
}]
